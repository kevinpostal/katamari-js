(function(){const s=document.createElement("link").relList;if(!(s&&s.supports&&s.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const i of n.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&t(i)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const n=function(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}(e);fetch(e.href,n)}})();const x_=0,w_=1,b_=2,Vr=100,S_=101,M_=102,T_=200,E_=201,A_=202,C_=203,R_=204,D_=205,P_=206,I_=207,L_=208,O_=209,F_=210,Kr=301,Qr=302,rh=306,Hl=1e3,xs=1001,pu=1002,rn=1003,N_=1004,Eh=1005,ti=1006,k_=1007,jl=1008,Qs=1009,Hu=1012,hf=1013,ws=1014,bs=1015,ba=1016,Js=1020,bi=1023,tr=1026,Jr=1027,Ah=33776,Ch=33777,Rh=33778,Dh=33779,Ph=36492,er=3001,Sa="",Nt="srgb",Ei="srgb-linear",uf="display-p3",Ih=7680,U_=512,z_=513,B_=514,V_=515,q_=516,W_=517,G_=518,H_=519,Jd="300 es",mu=1035,to=2e3,Xl=2001;class Lo{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const n=this._listeners[t];if(n!==void 0){const i=n.indexOf(e);i!==-1&&n.splice(i,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const e=this._listeners[t.type];if(e!==void 0){t.target=this;const n=e.slice(0);for(let i=0,r=n.length;i<r;i++)n[i].call(this,t);t.target=null}}}const Qe=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let tp=1234567;const fa=Math.PI/180,Ma=180/Math.PI;function Oo(){const s=4294967295*Math.random()|0,t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Qe[255&s]+Qe[s>>8&255]+Qe[s>>16&255]+Qe[s>>24&255]+"-"+Qe[255&t]+Qe[t>>8&255]+"-"+Qe[t>>16&15|64]+Qe[t>>24&255]+"-"+Qe[63&e|128]+Qe[e>>8&255]+"-"+Qe[e>>16&255]+Qe[e>>24&255]+Qe[255&n]+Qe[n>>8&255]+Qe[n>>16&255]+Qe[n>>24&255]).toLowerCase()}function an(s,t,e){return Math.max(t,Math.min(e,s))}function fu(s,t){return(s%t+t)%t}function ga(s,t,e){return(1-e)*s+e*t}function gu(s){return!(s&s-1)&&s!==0}function Yl(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function pa(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function gn(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(4294967295*s);case Uint16Array:return Math.round(65535*s);case Uint8Array:return Math.round(255*s);case Int32Array:return Math.round(2147483647*s);case Int16Array:return Math.round(32767*s);case Int8Array:return Math.round(127*s);default:throw new Error("Invalid component type.")}}const Zi={DEG2RAD:fa,RAD2DEG:Ma,generateUUID:Oo,clamp:an,euclideanModulo:fu,mapLinear:function(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)},inverseLerp:function(s,t,e){return s!==t?(e-s)/(t-s):0},lerp:ga,damp:function(s,t,e,n){return ga(s,t,1-Math.exp(-e*n))},pingpong:function(s,t=1){return t-Math.abs(fu(s,2*t)-t)},smoothstep:function(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t))*s*(3-2*s)},smootherstep:function(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t))*s*s*(s*(6*s-15)+10)},randInt:function(s,t){return s+Math.floor(Math.random()*(t-s+1))},randFloat:function(s,t){return s+Math.random()*(t-s)},randFloatSpread:function(s){return s*(.5-Math.random())},seededRandom:function(s){s!==void 0&&(tp=s);let t=tp+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function(s){return s*fa},radToDeg:function(s){return s*Ma},isPowerOfTwo:gu,ceilPowerOfTwo:function(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))},floorPowerOfTwo:Yl,setQuaternionFromProperEuler:function(s,t,e,n,i){const r=Math.cos,o=Math.sin,a=r(e/2),l=o(e/2),c=r((t+n)/2),h=o((t+n)/2),u=r((t-n)/2),d=o((t-n)/2),p=r((n-t)/2),f=o((n-t)/2);switch(i){case"XYX":s.set(a*h,l*u,l*d,a*c);break;case"YZY":s.set(l*d,a*h,l*u,a*c);break;case"ZXZ":s.set(l*u,l*d,a*h,a*c);break;case"XZX":s.set(a*h,l*f,l*p,a*c);break;case"YXY":s.set(l*p,a*h,l*f,a*c);break;case"ZYZ":s.set(l*f,l*p,a*h,a*c)}},normalize:gn,denormalize:pa};class Xt{constructor(t=0,e=0){Xt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(an(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*i+t.x,this.y=r*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Bt{constructor(t,e,n,i,r,o,a,l,c){Bt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,o,a,l,c)}set(t,e,n,i,r,o,a,l,c){const h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=r,h[5]=l,h[6]=n,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],d=n[2],p=n[5],f=n[8],g=i[0],m=i[3],x=i[6],_=i[1],y=i[4],A=i[7],b=i[2],v=i[5],w=i[8];return r[0]=o*g+a*_+l*b,r[3]=o*m+a*y+l*v,r[6]=o*x+a*A+l*w,r[1]=c*g+h*_+u*b,r[4]=c*m+h*y+u*v,r[7]=c*x+h*A+u*w,r[2]=d*g+p*_+f*b,r[5]=d*m+p*y+f*v,r[8]=d*x+p*A+f*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8];return e*o*h-e*a*c-n*r*h+n*a*l+i*r*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=h*o-a*c,d=a*l-h*r,p=c*r-o*l,f=e*u+n*d+i*p;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/f;return t[0]=u*g,t[1]=(i*c-h*n)*g,t[2]=(a*n-i*o)*g,t[3]=d*g,t[4]=(h*e-i*l)*g,t[5]=(i*r-a*e)*g,t[6]=p*g,t[7]=(n*l-c*e)*g,t[8]=(o*e-n*r)*g,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,o,a){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Lh.makeScale(t,e)),this}rotate(t){return this.premultiply(Lh.makeRotation(-t)),this}translate(t,e){return this.premultiply(Lh.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Lh=new Bt;function df(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function $l(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}const ep={};function _a(s){s in ep||(ep[s]=!0)}function Xr(s){return s<.04045?.0773993808*s:Math.pow(.9478672986*s+.0521327014,2.4)}function Oh(s){return s<.0031308?12.92*s:1.055*Math.pow(s,.41666)-.055}const j_=new Bt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),X_=new Bt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),Y_={[Ei]:s=>s,[Nt]:s=>s.convertSRGBToLinear(),[uf]:function(s){return s.convertSRGBToLinear().applyMatrix3(X_)}},$_={[Ei]:s=>s,[Nt]:s=>s.convertLinearToSRGB(),[uf]:function(s){return s.applyMatrix3(j_).convertLinearToSRGB()}},Yn={enabled:!0,get legacyMode(){return!this.enabled},set legacyMode(s){this.enabled=!s},get workingColorSpace(){return Ei},set workingColorSpace(s){},convert:function(s,t,e){if(this.enabled===!1||t===e||!t||!e)return s;const n=Y_[t],i=$_[e];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${t}" to "${e}".`);return i(n(s))},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)}};let br;class pf{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{br===void 0&&(br=$l("canvas")),br.width=t.width,br.height=t.height;const n=br.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=br}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=$l("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=255*Xr(r[o]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(255*Xr(e[n]/255)):e[n]=Xr(e[n]);return{data:e,width:t.width,height:t.height}}return t}}let Z_=0,mf=class{constructor(s=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Z_++}),this.uuid=Oo(),this.data=s,this.version=0}set needsUpdate(s){s===!0&&this.version++}toJSON(s){const t=s===void 0||typeof s=="string";if(!t&&s.images[this.uuid]!==void 0)return s.images[this.uuid];const e={uuid:this.uuid,url:""},n=this.data;if(n!==null){let i;if(Array.isArray(n)){i=[];for(let r=0,o=n.length;r<o;r++)n[r].isDataTexture?i.push(Fh(n[r].image)):i.push(Fh(n[r]))}else i=Fh(n);e.url=i}return t||(s.images[this.uuid]=e),e}};function Fh(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?pf.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:{}}let K_=0;class yn extends Lo{constructor(t=yn.DEFAULT_IMAGE,e=yn.DEFAULT_MAPPING,n=1001,i=1001,r=1006,o=1008,a=1023,l=1009,c=yn.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:K_++}),this.uuid=Oo(),this.name="",this.source=new mf(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Xt(0,0),this.repeat=new Xt(1,1),this.center=new Xt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Bt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof h=="string"?this.colorSpace=h:(_a("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=h===er?Nt:Sa),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Hl:t.x=t.x-Math.floor(t.x);break;case xs:t.x=t.x<0?0:1;break;case pu:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Hl:t.y=t.y-Math.floor(t.y);break;case xs:t.y=t.y<0?0:1;break;case pu:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return _a("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Nt?er:3e3}set encoding(t){_a("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===er?Nt:Sa}}yn.DEFAULT_IMAGE=null,yn.DEFAULT_MAPPING=300,yn.DEFAULT_ANISOTROPY=1;class We{constructor(t=0,e=0,n=0,i=1){We.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const l=t.elements,c=l[0],h=l[4],u=l[8],d=l[1],p=l[5],f=l[9],g=l[2],m=l[6],x=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-g)<.01&&Math.abs(f-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+g)<.1&&Math.abs(f+m)<.1&&Math.abs(c+p+x-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const y=(c+1)/2,A=(p+1)/2,b=(x+1)/2,v=(h+d)/4,w=(u+g)/4,M=(f+m)/4;return y>A&&y>b?y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(y),i=v/n,r=w/n):A>b?A<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(A),n=v/i,r=M/i):b<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(b),n=w/r,i=M/r),this.set(n,i,r,e),this}let _=Math.sqrt((m-f)*(m-f)+(u-g)*(u-g)+(d-h)*(d-h));return Math.abs(_)<.001&&(_=1),this.x=(m-f)/_,this.y=(u-g)/_,this.z=(d-h)/_,this.w=Math.acos((c+p+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class sr extends Lo{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new We(0,0,t,e),this.scissorTest=!1,this.viewport=new We(0,0,t,e);const i={width:t,height:e,depth:1};n.encoding!==void 0&&(_a("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===er?Nt:Sa),this.texture=new yn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0&&n.generateMipmaps,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:ti,this.depthBuffer=n.depthBuffer===void 0||n.depthBuffer,this.stencilBuffer=n.stencilBuffer!==void 0&&n.stencilBuffer,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new mf(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ff extends yn{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=rn,this.minFilter=rn,this.wrapR=xs,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let Ia=class{constructor(s=0,t=0,e=0,n=1){this.isQuaternion=!0,this._x=s,this._y=t,this._z=e,this._w=n}static slerpFlat(s,t,e,n,i,r,o){let a=e[n+0],l=e[n+1],c=e[n+2],h=e[n+3];const u=i[r+0],d=i[r+1],p=i[r+2],f=i[r+3];if(o===0)return s[t+0]=a,s[t+1]=l,s[t+2]=c,s[t+3]=h,void 0;if(o===1)return s[t+0]=u,s[t+1]=d,s[t+2]=p,s[t+3]=f,void 0;if(h!==f||a!==u||l!==d||c!==p){let g=1-o;const m=a*u+l*d+c*p+h*f,x=m>=0?1:-1,_=1-m*m;if(_>Number.EPSILON){const A=Math.sqrt(_),b=Math.atan2(A,m*x);g=Math.sin(g*b)/A,o=Math.sin(o*b)/A}const y=o*x;if(a=a*g+u*y,l=l*g+d*y,c=c*g+p*y,h=h*g+f*y,g===1-o){const A=1/Math.sqrt(a*a+l*l+c*c+h*h);a*=A,l*=A,c*=A,h*=A}}s[t]=a,s[t+1]=l,s[t+2]=c,s[t+3]=h}static multiplyQuaternionsFlat(s,t,e,n,i,r){const o=e[n],a=e[n+1],l=e[n+2],c=e[n+3],h=i[r],u=i[r+1],d=i[r+2],p=i[r+3];return s[t]=o*p+c*h+a*d-l*u,s[t+1]=a*p+c*u+l*h-o*d,s[t+2]=l*p+c*d+o*u-a*h,s[t+3]=c*p-o*h-a*u-l*d,s}get x(){return this._x}set x(s){this._x=s,this._onChangeCallback()}get y(){return this._y}set y(s){this._y=s,this._onChangeCallback()}get z(){return this._z}set z(s){this._z=s,this._onChangeCallback()}get w(){return this._w}set w(s){this._w=s,this._onChangeCallback()}set(s,t,e,n){return this._x=s,this._y=t,this._z=e,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(s){return this._x=s.x,this._y=s.y,this._z=s.z,this._w=s.w,this._onChangeCallback(),this}setFromEuler(s,t){const e=s._x,n=s._y,i=s._z,r=s._order,o=Math.cos,a=Math.sin,l=o(e/2),c=o(n/2),h=o(i/2),u=a(e/2),d=a(n/2),p=a(i/2);switch(r){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(s,t){const e=t/2,n=Math.sin(e);return this._x=s.x*n,this._y=s.y*n,this._z=s.z*n,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(s){const t=s.elements,e=t[0],n=t[4],i=t[8],r=t[1],o=t[5],a=t[9],l=t[2],c=t[6],h=t[10],u=e+o+h;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(c-a)*d,this._y=(i-l)*d,this._z=(r-n)*d}else if(e>o&&e>h){const d=2*Math.sqrt(1+e-o-h);this._w=(c-a)/d,this._x=.25*d,this._y=(n+r)/d,this._z=(i+l)/d}else if(o>h){const d=2*Math.sqrt(1+o-e-h);this._w=(i-l)/d,this._x=(n+r)/d,this._y=.25*d,this._z=(a+c)/d}else{const d=2*Math.sqrt(1+h-e-o);this._w=(r-n)/d,this._x=(i+l)/d,this._y=(a+c)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(s,t){let e=s.dot(t)+1;return e<Number.EPSILON?(e=0,Math.abs(s.x)>Math.abs(s.z)?(this._x=-s.y,this._y=s.x,this._z=0,this._w=e):(this._x=0,this._y=-s.z,this._z=s.y,this._w=e)):(this._x=s.y*t.z-s.z*t.y,this._y=s.z*t.x-s.x*t.z,this._z=s.x*t.y-s.y*t.x,this._w=e),this.normalize()}angleTo(s){return 2*Math.acos(Math.abs(an(this.dot(s),-1,1)))}rotateTowards(s,t){const e=this.angleTo(s);if(e===0)return this;const n=Math.min(1,t/e);return this.slerp(s,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(s){return this._x*s._x+this._y*s._y+this._z*s._z+this._w*s._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let s=this.length();return s===0?(this._x=0,this._y=0,this._z=0,this._w=1):(s=1/s,this._x=this._x*s,this._y=this._y*s,this._z=this._z*s,this._w=this._w*s),this._onChangeCallback(),this}multiply(s){return this.multiplyQuaternions(this,s)}premultiply(s){return this.multiplyQuaternions(s,this)}multiplyQuaternions(s,t){const e=s._x,n=s._y,i=s._z,r=s._w,o=t._x,a=t._y,l=t._z,c=t._w;return this._x=e*c+r*o+n*l-i*a,this._y=n*c+r*a+i*o-e*l,this._z=i*c+r*l+e*a-n*o,this._w=r*c-e*o-n*a-i*l,this._onChangeCallback(),this}slerp(s,t){if(t===0)return this;if(t===1)return this.copy(s);const e=this._x,n=this._y,i=this._z,r=this._w;let o=r*s._w+e*s._x+n*s._y+i*s._z;if(o<0?(this._w=-s._w,this._x=-s._x,this._y=-s._y,this._z=-s._z,o=-o):this.copy(s),o>=1)return this._w=r,this._x=e,this._y=n,this._z=i,this;const a=1-o*o;if(a<=Number.EPSILON){const d=1-t;return this._w=d*r+t*this._w,this._x=d*e+t*this._x,this._y=d*n+t*this._y,this._z=d*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(a),c=Math.atan2(l,o),h=Math.sin((1-t)*c)/l,u=Math.sin(t*c)/l;return this._w=r*h+this._w*u,this._x=e*h+this._x*u,this._y=n*h+this._y*u,this._z=i*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(s,t,e){return this.copy(s).slerp(t,e)}random(){const s=Math.random(),t=Math.sqrt(1-s),e=Math.sqrt(s),n=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(n),e*Math.sin(i),e*Math.cos(i),t*Math.sin(n))}equals(s){return s._x===this._x&&s._y===this._y&&s._z===this._z&&s._w===this._w}fromArray(s,t=0){return this._x=s[t],this._y=s[t+1],this._z=s[t+2],this._w=s[t+3],this._onChangeCallback(),this}toArray(s=[],t=0){return s[t]=this._x,s[t+1]=this._y,s[t+2]=this._z,s[t+3]=this._w,s}fromBufferAttribute(s,t){return this._x=s.getX(t),this._y=s.getY(t),this._z=s.getZ(t),this._w=s.getW(t),this}toJSON(){return this.toArray()}_onChange(s){return this._onChangeCallback=s,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}};class H{constructor(t=0,e=0,n=0){H.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(np.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(np.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,h=l*n+a*e-r*i,u=l*i+r*n-o*e,d=-r*e-o*n-a*i;return this.x=c*l+d*-r+h*-a-u*-o,this.y=h*l+d*-o+u*-r-c*-a,this.z=u*l+d*-a+c*-o-h*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-r*a,this.y=r*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Nh.copy(this).projectOnVector(t),this.sub(Nh)}reflect(t){return this.sub(Nh.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(an(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Nh=new H,np=new Ia;class mr{constructor(t=new H(1/0,1/0,1/0),e=new H(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(ki.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(ki.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ki.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){if(t.updateWorldMatrix(!1,!1),t.boundingBox!==void 0)t.boundingBox===null&&t.computeBoundingBox(),Sr.copy(t.boundingBox),Sr.applyMatrix4(t.matrixWorld),this.union(Sr);else{const i=t.geometry;if(i!==void 0)if(e&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let o=0,a=r.count;o<a;o++)ki.fromBufferAttribute(r,o).applyMatrix4(t.matrixWorld),this.expandByPoint(ki)}else i.boundingBox===null&&i.computeBoundingBox(),Sr.copy(i.boundingBox),Sr.applyMatrix4(t.matrixWorld),this.union(Sr)}const n=t.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ki),ki.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ko),Za.subVectors(this.max,Ko),Mr.subVectors(t.a,Ko),Tr.subVectors(t.b,Ko),Er.subVectors(t.c,Ko),hs.subVectors(Tr,Mr),us.subVectors(Er,Tr),Us.subVectors(Mr,Er);let e=[0,-hs.z,hs.y,0,-us.z,us.y,0,-Us.z,Us.y,hs.z,0,-hs.x,us.z,0,-us.x,Us.z,0,-Us.x,-hs.y,hs.x,0,-us.y,us.x,0,-Us.y,Us.x,0];return!!kh(e,Mr,Tr,Er,Za)&&(e=[1,0,0,0,1,0,0,0,1],!!kh(e,Mr,Tr,Er,Za)&&(Ka.crossVectors(hs,us),e=[Ka.x,Ka.y,Ka.z],kh(e,Mr,Tr,Er,Za)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ki).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(ki).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(Ni[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ni[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ni[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ni[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ni[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ni[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ni[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ni[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ni)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Ni=[new H,new H,new H,new H,new H,new H,new H,new H],ki=new H,Sr=new mr,Mr=new H,Tr=new H,Er=new H,hs=new H,us=new H,Us=new H,Ko=new H,Za=new H,Ka=new H,zs=new H;function kh(s,t,e,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){zs.fromArray(s,r);const a=i.x*Math.abs(zs.x)+i.y*Math.abs(zs.y)+i.z*Math.abs(zs.z),l=t.dot(zs),c=e.dot(zs),h=n.dot(zs);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const Q_=new mr,Qo=new H,Uh=new H;let La=class{constructor(s=new H,t=-1){this.center=s,this.radius=t}set(s,t){return this.center.copy(s),this.radius=t,this}setFromPoints(s,t){const e=this.center;t!==void 0?e.copy(t):Q_.setFromPoints(s).getCenter(e);let n=0;for(let i=0,r=s.length;i<r;i++)n=Math.max(n,e.distanceToSquared(s[i]));return this.radius=Math.sqrt(n),this}copy(s){return this.center.copy(s.center),this.radius=s.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(s){return s.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(s){return s.distanceTo(this.center)-this.radius}intersectsSphere(s){const t=this.radius+s.radius;return s.center.distanceToSquared(this.center)<=t*t}intersectsBox(s){return s.intersectsSphere(this)}intersectsPlane(s){return Math.abs(s.distanceToPoint(this.center))<=this.radius}clampPoint(s,t){const e=this.center.distanceToSquared(s);return t.copy(s),e>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(s){return this.isEmpty()?(s.makeEmpty(),s):(s.set(this.center,this.center),s.expandByScalar(this.radius),s)}applyMatrix4(s){return this.center.applyMatrix4(s),this.radius=this.radius*s.getMaxScaleOnAxis(),this}translate(s){return this.center.add(s),this}expandByPoint(s){if(this.isEmpty())return this.center.copy(s),this.radius=0,this;Qo.subVectors(s,this.center);const t=Qo.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(Qo,n/e),this.radius+=n}return this}union(s){return s.isEmpty()?this:this.isEmpty()?(this.copy(s),this):(this.center.equals(s.center)===!0?this.radius=Math.max(this.radius,s.radius):(Uh.subVectors(s.center,this.center).setLength(s.radius),this.expandByPoint(Qo.copy(s.center).add(Uh)),this.expandByPoint(Qo.copy(s.center).sub(Uh))),this)}equals(s){return s.center.equals(this.center)&&s.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Ui=new H,zh=new H,Qa=new H,ds=new H,Bh=new H,Ja=new H,Vh=new H;class xe{constructor(t,e,n,i,r,o,a,l,c,h,u,d,p,f,g,m){xe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,o,a,l,c,h,u,d,p,f,g,m)}set(t,e,n,i,r,o,a,l,c,h,u,d,p,f,g,m){const x=this.elements;return x[0]=t,x[4]=e,x[8]=n,x[12]=i,x[1]=r,x[5]=o,x[9]=a,x[13]=l,x[2]=c,x[6]=h,x[10]=u,x[14]=d,x[3]=p,x[7]=f,x[11]=g,x[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new xe().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Ar.setFromMatrixColumn(t,0).length(),r=1/Ar.setFromMatrixColumn(t,1).length(),o=1/Ar.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const d=o*h,p=o*u,f=a*h,g=a*u;e[0]=l*h,e[4]=-l*u,e[8]=c,e[1]=p+f*c,e[5]=d-g*c,e[9]=-a*l,e[2]=g-d*c,e[6]=f+p*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*h,p=l*u,f=c*h,g=c*u;e[0]=d+g*a,e[4]=f*a-p,e[8]=o*c,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=p*a-f,e[6]=g+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*h,p=l*u,f=c*h,g=c*u;e[0]=d-g*a,e[4]=-o*u,e[8]=f+p*a,e[1]=p+f*a,e[5]=o*h,e[9]=g-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*h,p=o*u,f=a*h,g=a*u;e[0]=l*h,e[4]=f*c-p,e[8]=d*c+g,e[1]=l*u,e[5]=g*c+d,e[9]=p*c-f,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,p=o*c,f=a*l,g=a*c;e[0]=l*h,e[4]=g-d*u,e[8]=f*u+p,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-c*h,e[6]=p*u+f,e[10]=d-g*u}else if(t.order==="XZY"){const d=o*l,p=o*c,f=a*l,g=a*c;e[0]=l*h,e[4]=-u,e[8]=c*h,e[1]=d*u+g,e[5]=o*h,e[9]=p*u-f,e[2]=f*u-p,e[6]=a*h,e[10]=g*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(J_,t,tv)}lookAt(t,e,n){const i=this.elements;return Tn.subVectors(t,e),Tn.lengthSq()===0&&(Tn.z=1),Tn.normalize(),ps.crossVectors(n,Tn),ps.lengthSq()===0&&(Math.abs(n.z)===1?Tn.x+=1e-4:Tn.z+=1e-4,Tn.normalize(),ps.crossVectors(n,Tn)),ps.normalize(),tl.crossVectors(Tn,ps),i[0]=ps.x,i[4]=tl.x,i[8]=Tn.x,i[1]=ps.y,i[5]=tl.y,i[9]=Tn.y,i[2]=ps.z,i[6]=tl.z,i[10]=Tn.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],d=n[9],p=n[13],f=n[2],g=n[6],m=n[10],x=n[14],_=n[3],y=n[7],A=n[11],b=n[15],v=i[0],w=i[4],M=i[8],C=i[12],T=i[1],E=i[5],D=i[9],R=i[13],P=i[2],k=i[6],F=i[10],z=i[14],q=i[3],B=i[7],W=i[11],Q=i[15];return r[0]=o*v+a*T+l*P+c*q,r[4]=o*w+a*E+l*k+c*B,r[8]=o*M+a*D+l*F+c*W,r[12]=o*C+a*R+l*z+c*Q,r[1]=h*v+u*T+d*P+p*q,r[5]=h*w+u*E+d*k+p*B,r[9]=h*M+u*D+d*F+p*W,r[13]=h*C+u*R+d*z+p*Q,r[2]=f*v+g*T+m*P+x*q,r[6]=f*w+g*E+m*k+x*B,r[10]=f*M+g*D+m*F+x*W,r[14]=f*C+g*R+m*z+x*Q,r[3]=_*v+y*T+A*P+b*q,r[7]=_*w+y*E+A*k+b*B,r[11]=_*M+y*D+A*F+b*W,r[15]=_*C+y*R+A*z+b*Q,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],o=t[1],a=t[5],l=t[9],c=t[13],h=t[2],u=t[6],d=t[10],p=t[14];return t[3]*(+r*l*u-i*c*u-r*a*d+n*c*d+i*a*p-n*l*p)+t[7]*(+e*l*p-e*c*d+r*o*d-i*o*p+i*c*h-r*l*h)+t[11]*(+e*c*u-e*a*p-r*o*u+n*o*p+r*a*h-n*c*h)+t[15]*(-i*a*h-e*l*u+e*a*d+i*o*u-n*o*d+n*l*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=t[9],d=t[10],p=t[11],f=t[12],g=t[13],m=t[14],x=t[15],_=u*m*c-g*d*c+g*l*p-a*m*p-u*l*x+a*d*x,y=f*d*c-h*m*c-f*l*p+o*m*p+h*l*x-o*d*x,A=h*g*c-f*u*c+f*a*p-o*g*p-h*a*x+o*u*x,b=f*u*l-h*g*l-f*a*d+o*g*d+h*a*m-o*u*m,v=e*_+n*y+i*A+r*b;if(v===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/v;return t[0]=_*w,t[1]=(g*d*r-u*m*r-g*i*p+n*m*p+u*i*x-n*d*x)*w,t[2]=(a*m*r-g*l*r+g*i*c-n*m*c-a*i*x+n*l*x)*w,t[3]=(u*l*r-a*d*r-u*i*c+n*d*c+a*i*p-n*l*p)*w,t[4]=y*w,t[5]=(h*m*r-f*d*r+f*i*p-e*m*p-h*i*x+e*d*x)*w,t[6]=(f*l*r-o*m*r-f*i*c+e*m*c+o*i*x-e*l*x)*w,t[7]=(o*d*r-h*l*r+h*i*c-e*d*c-o*i*p+e*l*p)*w,t[8]=A*w,t[9]=(f*u*r-h*g*r-f*n*p+e*g*p+h*n*x-e*u*x)*w,t[10]=(o*g*r-f*a*r+f*n*c-e*g*c-o*n*x+e*a*x)*w,t[11]=(h*a*r-o*u*r-h*n*c+e*u*c+o*n*p-e*a*p)*w,t[12]=b*w,t[13]=(h*g*i-f*u*i+f*n*d-e*g*d-h*n*m+e*u*m)*w,t[14]=(f*a*i-o*g*i-f*n*l+e*g*l+o*n*m-e*a*m)*w,t[15]=(o*u*i-h*a*i+h*n*l-e*u*l-o*n*d+e*a*d)*w,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,o=t.x,a=t.y,l=t.z,c=r*o,h=r*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,h*a+n,h*l-i*o,0,c*l-i*a,h*l+i*o,r*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,o){return this.set(1,n,r,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,o=e._y,a=e._z,l=e._w,c=r+r,h=o+o,u=a+a,d=r*c,p=r*h,f=r*u,g=o*h,m=o*u,x=a*u,_=l*c,y=l*h,A=l*u,b=n.x,v=n.y,w=n.z;return i[0]=(1-(g+x))*b,i[1]=(p+A)*b,i[2]=(f-y)*b,i[3]=0,i[4]=(p-A)*v,i[5]=(1-(d+x))*v,i[6]=(m+_)*v,i[7]=0,i[8]=(f+y)*w,i[9]=(m-_)*w,i[10]=(1-(d+g))*w,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Ar.set(i[0],i[1],i[2]).length();const o=Ar.set(i[4],i[5],i[6]).length(),a=Ar.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],$n.copy(this);const l=1/r,c=1/o,h=1/a;return $n.elements[0]*=l,$n.elements[1]*=l,$n.elements[2]*=l,$n.elements[4]*=c,$n.elements[5]*=c,$n.elements[6]*=c,$n.elements[8]*=h,$n.elements[9]*=h,$n.elements[10]*=h,e.setFromRotationMatrix($n),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,i,r,o,a=2e3){const l=this.elements,c=2*r/(e-t),h=2*r/(n-i),u=(e+t)/(e-t),d=(n+i)/(n-i);let p,f;if(a===to)p=-(o+r)/(o-r),f=-2*o*r/(o-r);else{if(a!==Xl)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);p=-o/(o-r),f=-o*r/(o-r)}return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=p,l[14]=f,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,n,i,r,o,a=2e3){const l=this.elements,c=1/(e-t),h=1/(n-i),u=1/(o-r),d=(e+t)*c,p=(n+i)*h;let f,g;if(a===to)f=(o+r)*u,g=-2*u;else{if(a!==Xl)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);f=r*u,g=-1*u}return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-p,l[2]=0,l[6]=0,l[10]=g,l[14]=-f,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Ar=new H,$n=new xe,J_=new H(0,0,0),tv=new H(1,1,1),ps=new H,tl=new H,Tn=new H,ip=new xe,sp=new Ia;class oh{constructor(t=0,e=0,n=0,i=oh.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],o=i[4],a=i[8],l=i[1],c=i[5],h=i[9],u=i[2],d=i[6],p=i[10];switch(e){case"XYZ":this._y=Math.asin(an(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-an(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(an(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-an(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(an(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-an(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,p),this._y=0)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ip.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ip,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return sp.setFromEuler(this),this.setFromQuaternion(sp,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}oh.DEFAULT_ORDER="XYZ";class gf{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return!!(this.mask&1<<t)}}let ev=0;const rp=new H,Cr=new Ia,zi=new xe,el=new H,Jo=new H,nv=new H,iv=new Ia,op=new H(1,0,0),ap=new H(0,1,0),lp=new H(0,0,1),sv={type:"added"},cp={type:"removed"};class we extends Lo{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ev++}),this.uuid=Oo(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=we.DEFAULT_UP.clone();const t=new H,e=new oh,n=new Ia,i=new H(1,1,1);e._onChange(function(){n.setFromEuler(e,!1)}),n._onChange(function(){e.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new xe},normalMatrix:{value:new Bt}}),this.matrix=new xe,this.matrixWorld=new xe,this.matrixAutoUpdate=we.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=we.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new gf,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Cr.setFromAxisAngle(t,e),this.quaternion.multiply(Cr),this}rotateOnWorldAxis(t,e){return Cr.setFromAxisAngle(t,e),this.quaternion.premultiply(Cr),this}rotateX(t){return this.rotateOnAxis(op,t)}rotateY(t){return this.rotateOnAxis(ap,t)}rotateZ(t){return this.rotateOnAxis(lp,t)}translateOnAxis(t,e){return rp.copy(t).applyQuaternion(this.quaternion),this.position.add(rp.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(op,t)}translateY(t){return this.translateOnAxis(ap,t)}translateZ(t){return this.translateOnAxis(lp,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(zi.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?el.copy(t):el.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Jo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?zi.lookAt(Jo,el,this.up):zi.lookAt(el,Jo,this.up),this.quaternion.setFromRotationMatrix(zi),i&&(zi.extractRotation(i.matrixWorld),Cr.setFromRotationMatrix(zi),this.quaternion.premultiply(Cr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?this:(t&&t.isObject3D&&(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(sv)),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(cp)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(cp)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),zi.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),zi.multiply(t.parent.matrixWorld)),t.applyMatrix4(zi),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n].getObjectByProperty(t,e);if(r!==void 0)return r}}getObjectsByProperty(t,e){let n=[];this[t]===e&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectsByProperty(t,e);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jo,t,nv),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jo,iv,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const r=e[n];r.matrixWorldAutoUpdate!==!0&&t!==!0||r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const a=i[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};function r(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(t.shapes,u)}else r(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(r(t.materials,this.material[l]));i.material=a}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(r(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),h=o(t.images),u=o(t.shapes),d=o(t.skeletons),p=o(t.animations),f=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),p.length>0&&(n.animations=p),f.length>0&&(n.nodes=f)}return n.object=i,n;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}we.DEFAULT_UP=new H(0,1,0),we.DEFAULT_MATRIX_AUTO_UPDATE=!0,we.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Zn=new H,Bi=new H,qh=new H,Vi=new H,Rr=new H,Dr=new H,hp=new H,Wh=new H,Gh=new H,Hh=new H;let nl=!1;class ei{constructor(t=new H,e=new H,n=new H){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Zn.subVectors(t,e),i.cross(Zn);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Zn.subVectors(i,e),Bi.subVectors(n,e),qh.subVectors(t,e);const o=Zn.dot(Zn),a=Zn.dot(Bi),l=Zn.dot(qh),c=Bi.dot(Bi),h=Bi.dot(qh),u=o*c-a*a;if(u===0)return r.set(-2,-1,-1);const d=1/u,p=(c*l-a*h)*d,f=(o*h-a*l)*d;return r.set(1-p-f,f,p)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Vi),Vi.x>=0&&Vi.y>=0&&Vi.x+Vi.y<=1}static getUV(t,e,n,i,r,o,a,l){return nl===!1&&(nl=!0),this.getInterpolation(t,e,n,i,r,o,a,l)}static getInterpolation(t,e,n,i,r,o,a,l){return this.getBarycoord(t,e,n,i,Vi),l.setScalar(0),l.addScaledVector(r,Vi.x),l.addScaledVector(o,Vi.y),l.addScaledVector(a,Vi.z),l}static isFrontFacing(t,e,n,i){return Zn.subVectors(n,e),Bi.subVectors(t,e),Zn.cross(Bi).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Zn.subVectors(this.c,this.b),Bi.subVectors(this.a,this.b),.5*Zn.cross(Bi).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ei.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ei.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return nl===!1&&(nl=!0),ei.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}getInterpolation(t,e,n,i,r){return ei.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return ei.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ei.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let o,a;Rr.subVectors(i,n),Dr.subVectors(r,n),Wh.subVectors(t,n);const l=Rr.dot(Wh),c=Dr.dot(Wh);if(l<=0&&c<=0)return e.copy(n);Gh.subVectors(t,i);const h=Rr.dot(Gh),u=Dr.dot(Gh);if(h>=0&&u<=h)return e.copy(i);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),e.copy(n).addScaledVector(Rr,o);Hh.subVectors(t,r);const p=Rr.dot(Hh),f=Dr.dot(Hh);if(f>=0&&p<=f)return e.copy(r);const g=p*c-l*f;if(g<=0&&c>=0&&f<=0)return a=c/(c-f),e.copy(n).addScaledVector(Dr,a);const m=h*f-p*u;if(m<=0&&u-h>=0&&p-f>=0)return hp.subVectors(r,i),a=(u-h)/(u-h+(p-f)),e.copy(i).addScaledVector(hp,a);const x=1/(m+g+d);return o=g*x,a=d*x,e.copy(n).addScaledVector(Rr,o).addScaledVector(Dr,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let rv=0,Fo=class extends Lo{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:rv++}),this.uuid=Oo(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=Vr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ih,this.stencilZFail=Ih,this.stencilZPass=Ih,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(s){this._alphaTest>0!=s>0&&this.version++,this._alphaTest=s}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(s){if(s!==void 0)for(const t in s){const e=s[t];if(e===void 0)continue;const n=this[t];n!==void 0&&(n&&n.isColor?n.set(e):n&&n.isVector3&&e&&e.isVector3?n.copy(e):this[t]=e)}}toJSON(s){const t=s===void 0||typeof s=="string";t&&(s={textures:{},images:{}});const e={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(i){const r=[];for(const o in i){const a=i[o];delete a.metadata,r.push(a)}return r}if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),this.roughness!==void 0&&(e.roughness=this.roughness),this.metalness!==void 0&&(e.metalness=this.metalness),this.sheen!==void 0&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(e.shininess=this.shininess),this.clearcoat!==void 0&&(e.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(s).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(s).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(s).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(e.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(e.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(e.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(e.iridescenceMap=this.iridescenceMap.toJSON(s).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(e.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(s).uuid),this.anisotropy!==void 0&&(e.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(e.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(e.anisotropyMap=this.anisotropyMap.toJSON(s).uuid),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(s).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(s).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(s).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(s).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(s).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(s).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(s).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(s).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(s).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(s).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(s).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(s).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(s).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(s).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(s).uuid,this.combine!==void 0&&(e.combine=this.combine)),this.envMapIntensity!==void 0&&(e.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(e.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(s).uuid),this.transmission!==void 0&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(s).uuid),this.thickness!==void 0&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(s).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(e.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(e.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(e.size=this.size),this.shadowSide!==null&&(e.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(e.blending=this.blending),this.side!==0&&(e.side=this.side),this.vertexColors&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),this.transparent===!0&&(e.transparent=this.transparent),e.depthFunc=this.depthFunc,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.colorWrite=this.colorWrite,e.stencilWrite=this.stencilWrite,e.stencilWriteMask=this.stencilWriteMask,e.stencilFunc=this.stencilFunc,e.stencilRef=this.stencilRef,e.stencilFuncMask=this.stencilFuncMask,e.stencilFail=this.stencilFail,e.stencilZFail=this.stencilZFail,e.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(e.rotation=this.rotation),this.polygonOffset===!0&&(e.polygonOffset=!0),this.polygonOffsetFactor!==0&&(e.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(e.linewidth=this.linewidth),this.dashSize!==void 0&&(e.dashSize=this.dashSize),this.gapSize!==void 0&&(e.gapSize=this.gapSize),this.scale!==void 0&&(e.scale=this.scale),this.dithering===!0&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(e.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(e.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(e.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(e.wireframe=this.wireframe),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(e.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(e.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(e.flatShading=this.flatShading),this.visible===!1&&(e.visible=!1),this.toneMapped===!1&&(e.toneMapped=!1),this.fog===!1&&(e.fog=!1),Object.keys(this.userData).length>0&&(e.userData=this.userData),t){const i=n(s.textures),r=n(s.images);i.length>0&&(e.textures=i),r.length>0&&(e.images=r)}return e}clone(){return new this.constructor().copy(this)}copy(s){this.name=s.name,this.blending=s.blending,this.side=s.side,this.vertexColors=s.vertexColors,this.opacity=s.opacity,this.transparent=s.transparent,this.blendSrc=s.blendSrc,this.blendDst=s.blendDst,this.blendEquation=s.blendEquation,this.blendSrcAlpha=s.blendSrcAlpha,this.blendDstAlpha=s.blendDstAlpha,this.blendEquationAlpha=s.blendEquationAlpha,this.depthFunc=s.depthFunc,this.depthTest=s.depthTest,this.depthWrite=s.depthWrite,this.stencilWriteMask=s.stencilWriteMask,this.stencilFunc=s.stencilFunc,this.stencilRef=s.stencilRef,this.stencilFuncMask=s.stencilFuncMask,this.stencilFail=s.stencilFail,this.stencilZFail=s.stencilZFail,this.stencilZPass=s.stencilZPass,this.stencilWrite=s.stencilWrite;const t=s.clippingPlanes;let e=null;if(t!==null){const n=t.length;e=new Array(n);for(let i=0;i!==n;++i)e[i]=t[i].clone()}return this.clippingPlanes=e,this.clipIntersection=s.clipIntersection,this.clipShadows=s.clipShadows,this.shadowSide=s.shadowSide,this.colorWrite=s.colorWrite,this.precision=s.precision,this.polygonOffset=s.polygonOffset,this.polygonOffsetFactor=s.polygonOffsetFactor,this.polygonOffsetUnits=s.polygonOffsetUnits,this.dithering=s.dithering,this.alphaTest=s.alphaTest,this.alphaToCoverage=s.alphaToCoverage,this.premultipliedAlpha=s.premultipliedAlpha,this.forceSinglePass=s.forceSinglePass,this.visible=s.visible,this.toneMapped=s.toneMapped,this.userData=JSON.parse(JSON.stringify(s.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(s){s===!0&&this.version++}};const _f={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Kn={h:0,s:0,l:0},il={h:0,s:0,l:0};function jh(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+6*(t-s)*e:e<.5?t:e<2/3?s+6*(t-s)*(2/3-e):s}class Vt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Nt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Yn.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Yn.workingColorSpace){return this.r=t,this.g=e,this.b=n,Yn.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Yn.workingColorSpace){if(t=fu(t,1),e=an(e,0,1),n=an(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=jh(o,r,t+1/3),this.g=jh(o,r,t),this.b=jh(o,r,t-1/3)}return Yn.toWorkingColorSpace(this,i),this}setStyle(t,e=Nt){function n(r){r!==void 0&&parseFloat(r)<1}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(r,16),e)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Nt){const n=_f[t.toLowerCase()];return n!==void 0&&this.setHex(n,e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Xr(t.r),this.g=Xr(t.g),this.b=Xr(t.b),this}copyLinearToSRGB(t){return this.r=Oh(t.r),this.g=Oh(t.g),this.b=Oh(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Nt){return Yn.fromWorkingColorSpace(Je.copy(this),t),65536*Math.round(an(255*Je.r,0,255))+256*Math.round(an(255*Je.g,0,255))+Math.round(an(255*Je.b,0,255))}getHexString(t=Nt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Yn.workingColorSpace){Yn.fromWorkingColorSpace(Je.copy(this),e);const n=Je.r,i=Je.g,r=Je.b,o=Math.max(n,i,r),a=Math.min(n,i,r);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case n:l=(i-r)/u+(i<r?6:0);break;case i:l=(r-n)/u+2;break;case r:l=(n-i)/u+4}l/=6}return t.h=l,t.s=c,t.l=h,t}getRGB(t,e=Yn.workingColorSpace){return Yn.fromWorkingColorSpace(Je.copy(this),e),t.r=Je.r,t.g=Je.g,t.b=Je.b,t}getStyle(t=Nt){Yn.fromWorkingColorSpace(Je.copy(this),t);const e=Je.r,n=Je.g,i=Je.b;return t!==Nt?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(t,e,n){return this.getHSL(Kn),Kn.h+=t,Kn.s+=e,Kn.l+=n,this.setHSL(Kn.h,Kn.s,Kn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Kn),t.getHSL(il);const n=ga(Kn.h,il.h,e),i=ga(Kn.s,il.s,e),r=ga(Kn.l,il.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Je=new Vt;Vt.NAMES=_f;class vf extends Fo{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Vt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Ce=new H,sl=new Xt;class li{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=35044,this.updateRange={offset:0,count:-1},this.gpuType=bs,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)sl.fromBufferAttribute(this,e),sl.applyMatrix3(t),this.setXY(e,sl.x,sl.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Ce.fromBufferAttribute(this,e),Ce.applyMatrix3(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Ce.fromBufferAttribute(this,e),Ce.applyMatrix4(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ce.fromBufferAttribute(this,e),Ce.applyNormalMatrix(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ce.fromBufferAttribute(this,e),Ce.transformDirection(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=pa(e,this.array)),e}setX(t,e){return this.normalized&&(e=gn(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=pa(e,this.array)),e}setY(t,e){return this.normalized&&(e=gn(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=pa(e,this.array)),e}setZ(t,e){return this.normalized&&(e=gn(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=pa(e,this.array)),e}setW(t,e){return this.normalized&&(e=gn(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=gn(e,this.array),n=gn(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=gn(e,this.array),n=gn(n,this.array),i=gn(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=gn(e,this.array),n=gn(n,this.array),i=gn(i,this.array),r=gn(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),this.updateRange.offset===0&&this.updateRange.count===-1||(t.updateRange=this.updateRange),t}copyColorsArray(){}copyVector2sArray(){}copyVector3sArray(){}copyVector4sArray(){}}class yf extends li{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class xf extends li{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Oe extends li{constructor(t,e,n){super(new Float32Array(t),e,n)}}let ov=0;const Nn=new xe,Xh=new we,Pr=new H,En=new mr,ta=new mr,Be=new H;class pi extends Lo{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ov++}),this.uuid=Oo(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(df(t)?xf:yf)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Bt().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Nn.makeRotationFromQuaternion(t),this.applyMatrix4(Nn),this}rotateX(t){return Nn.makeRotationX(t),this.applyMatrix4(Nn),this}rotateY(t){return Nn.makeRotationY(t),this.applyMatrix4(Nn),this}rotateZ(t){return Nn.makeRotationZ(t),this.applyMatrix4(Nn),this}translate(t,e,n){return Nn.makeTranslation(t,e,n),this.applyMatrix4(Nn),this}scale(t,e,n){return Nn.makeScale(t,e,n),this.applyMatrix4(Nn),this}lookAt(t){return Xh.lookAt(t),Xh.updateMatrix(),this.applyMatrix4(Xh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Pr).negate(),this.translate(Pr.x,Pr.y,Pr.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Oe(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return this.boundingBox.set(new H(-1/0,-1/0,-1/0),new H(1/0,1/0,1/0)),void 0;if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];En.setFromBufferAttribute(r),this.morphTargetsRelative?(Be.addVectors(this.boundingBox.min,En.min),this.boundingBox.expandByPoint(Be),Be.addVectors(this.boundingBox.max,En.max),this.boundingBox.expandByPoint(Be)):(this.boundingBox.expandByPoint(En.min),this.boundingBox.expandByPoint(En.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new La);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return this.boundingSphere.set(new H,1/0),void 0;if(t){const n=this.boundingSphere.center;if(En.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];ta.setFromBufferAttribute(a),this.morphTargetsRelative?(Be.addVectors(En.min,ta.min),En.expandByPoint(Be),Be.addVectors(En.max,ta.max),En.expandByPoint(Be)):(En.expandByPoint(ta.min),En.expandByPoint(ta.max))}En.getCenter(n);let i=0;for(let r=0,o=t.count;r<o;r++)Be.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Be));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Be.fromBufferAttribute(a,c),l&&(Pr.fromBufferAttribute(t,c),Be.add(Pr)),i=Math.max(i,n.distanceToSquared(Be))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0)return;const n=t.array,i=e.position.array,r=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new li(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let T=0;T<a;T++)c[T]=new H,h[T]=new H;const u=new H,d=new H,p=new H,f=new Xt,g=new Xt,m=new Xt,x=new H,_=new H;function y(T,E,D){u.fromArray(i,3*T),d.fromArray(i,3*E),p.fromArray(i,3*D),f.fromArray(o,2*T),g.fromArray(o,2*E),m.fromArray(o,2*D),d.sub(u),p.sub(u),g.sub(f),m.sub(f);const R=1/(g.x*m.y-m.x*g.y);isFinite(R)&&(x.copy(d).multiplyScalar(m.y).addScaledVector(p,-g.y).multiplyScalar(R),_.copy(p).multiplyScalar(g.x).addScaledVector(d,-m.x).multiplyScalar(R),c[T].add(x),c[E].add(x),c[D].add(x),h[T].add(_),h[E].add(_),h[D].add(_))}let A=this.groups;A.length===0&&(A=[{start:0,count:n.length}]);for(let T=0,E=A.length;T<E;++T){const D=A[T],R=D.start;for(let P=R,k=R+D.count;P<k;P+=3)y(n[P+0],n[P+1],n[P+2])}const b=new H,v=new H,w=new H,M=new H;function C(T){w.fromArray(r,3*T),M.copy(w);const E=c[T];b.copy(E),b.sub(w.multiplyScalar(w.dot(E))).normalize(),v.crossVectors(M,E);const D=v.dot(h[T])<0?-1:1;l[4*T]=b.x,l[4*T+1]=b.y,l[4*T+2]=b.z,l[4*T+3]=D}for(let T=0,E=A.length;T<E;++T){const D=A[T],R=D.start;for(let P=R,k=R+D.count;P<k;P+=3)C(n[P+0]),C(n[P+1]),C(n[P+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new li(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let d=0,p=n.count;d<p;d++)n.setXYZ(d,0,0,0);const i=new H,r=new H,o=new H,a=new H,l=new H,c=new H,h=new H,u=new H;if(t)for(let d=0,p=t.count;d<p;d+=3){const f=t.getX(d+0),g=t.getX(d+1),m=t.getX(d+2);i.fromBufferAttribute(e,f),r.fromBufferAttribute(e,g),o.fromBufferAttribute(e,m),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),a.fromBufferAttribute(n,f),l.fromBufferAttribute(n,g),c.fromBufferAttribute(n,m),a.add(h),l.add(h),c.add(h),n.setXYZ(f,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,p=e.count;d<p;d+=3)i.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),h.subVectors(o,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Be.fromBufferAttribute(t,e),Be.normalize(),t.setXYZ(e,Be.x,Be.y,Be.z)}toNonIndexed(){function t(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let p=0,f=0;for(let g=0,m=l.length;g<m;g++){p=a.isInterleavedBufferAttribute?l[g]*a.data.stride+a.offset:l[g]*h;for(let x=0;x<h;x++)d[f++]=c[p++]}return new li(d,h,u)}if(this.index===null)return this;const e=new pi,n=this.index.array,i=this.attributes;for(const a in i){const l=t(i[a],n);e.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const l=[],c=r[a];for(let h=0,u=c.length;h<u;h++){const d=t(c[h],n);l.push(d)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const p=c[u];h.push(p.toJSON(t.data))}h.length>0&&(i[l]=h,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(e))}const r=t.morphAttributes;for(const c in r){const h=[],u=r[c];for(let d=0,p=u.length;d<p;d++)h.push(u[d].clone(e));this.morphAttributes[c]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const up=new xe,Bs=new class{constructor(s=new H,t=new H(0,0,-1)){this.origin=s,this.direction=t}set(s,t){return this.origin.copy(s),this.direction.copy(t),this}copy(s){return this.origin.copy(s.origin),this.direction.copy(s.direction),this}at(s,t){return t.copy(this.origin).addScaledVector(this.direction,s)}lookAt(s){return this.direction.copy(s).sub(this.origin).normalize(),this}recast(s){return this.origin.copy(this.at(s,Ui)),this}closestPointToPoint(s,t){t.subVectors(s,this.origin);const e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,e)}distanceToPoint(s){return Math.sqrt(this.distanceSqToPoint(s))}distanceSqToPoint(s){const t=Ui.subVectors(s,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(s):(Ui.copy(this.origin).addScaledVector(this.direction,t),Ui.distanceToSquared(s))}distanceSqToSegment(s,t,e,n){zh.copy(s).add(t).multiplyScalar(.5),Qa.copy(t).sub(s).normalize(),ds.copy(this.origin).sub(zh);const i=.5*s.distanceTo(t),r=-this.direction.dot(Qa),o=ds.dot(this.direction),a=-ds.dot(Qa),l=ds.lengthSq(),c=Math.abs(1-r*r);let h,u,d,p;if(c>0)if(h=r*a-o,u=r*o-a,p=i*c,h>=0)if(u>=-p)if(u<=p){const f=1/c;h*=f,u*=f,d=h*(h+r*u+2*o)+u*(r*h+u+2*a)+l}else u=i,h=Math.max(0,-(r*u+o)),d=-h*h+u*(u+2*a)+l;else u=-i,h=Math.max(0,-(r*u+o)),d=-h*h+u*(u+2*a)+l;else u<=-p?(h=Math.max(0,-(-r*i+o)),u=h>0?-i:Math.min(Math.max(-i,-a),i),d=-h*h+u*(u+2*a)+l):u<=p?(h=0,u=Math.min(Math.max(-i,-a),i),d=u*(u+2*a)+l):(h=Math.max(0,-(r*i+o)),u=h>0?i:Math.min(Math.max(-i,-a),i),d=-h*h+u*(u+2*a)+l);else u=r>0?-i:i,h=Math.max(0,-(r*u+o)),d=-h*h+u*(u+2*a)+l;return e&&e.copy(this.origin).addScaledVector(this.direction,h),n&&n.copy(zh).addScaledVector(Qa,u),d}intersectSphere(s,t){Ui.subVectors(s.center,this.origin);const e=Ui.dot(this.direction),n=Ui.dot(Ui)-e*e,i=s.radius*s.radius;if(n>i)return null;const r=Math.sqrt(i-n),o=e-r,a=e+r;return a<0?null:o<0?this.at(a,t):this.at(o,t)}intersectsSphere(s){return this.distanceSqToPoint(s.center)<=s.radius*s.radius}distanceToPlane(s){const t=s.normal.dot(this.direction);if(t===0)return s.distanceToPoint(this.origin)===0?0:null;const e=-(this.origin.dot(s.normal)+s.constant)/t;return e>=0?e:null}intersectPlane(s,t){const e=this.distanceToPlane(s);return e===null?null:this.at(e,t)}intersectsPlane(s){const t=s.distanceToPoint(this.origin);return t===0?!0:s.normal.dot(this.direction)*t<0}intersectBox(s,t){let e,n,i,r,o,a;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(e=(s.min.x-u.x)*l,n=(s.max.x-u.x)*l):(e=(s.max.x-u.x)*l,n=(s.min.x-u.x)*l),c>=0?(i=(s.min.y-u.y)*c,r=(s.max.y-u.y)*c):(i=(s.max.y-u.y)*c,r=(s.min.y-u.y)*c),e>r||i>n?null:((i>e||isNaN(e))&&(e=i),(r<n||isNaN(n))&&(n=r),h>=0?(o=(s.min.z-u.z)*h,a=(s.max.z-u.z)*h):(o=(s.max.z-u.z)*h,a=(s.min.z-u.z)*h),e>a||o>n?null:((o>e||e!=e)&&(e=o),(a<n||n!=n)&&(n=a),n<0?null:this.at(e>=0?e:n,t)))}intersectsBox(s){return this.intersectBox(s,Ui)!==null}intersectTriangle(s,t,e,n,i){Bh.subVectors(t,s),Ja.subVectors(e,s),Vh.crossVectors(Bh,Ja);let r,o=this.direction.dot(Vh);if(o>0){if(n)return null;r=1}else{if(!(o<0))return null;r=-1,o=-o}ds.subVectors(this.origin,s);const a=r*this.direction.dot(Ja.crossVectors(ds,Ja));if(a<0)return null;const l=r*this.direction.dot(Bh.cross(ds));if(l<0||a+l>o)return null;const c=-r*ds.dot(Vh);return c<0?null:this.at(c/o,i)}applyMatrix4(s){return this.origin.applyMatrix4(s),this.direction.transformDirection(s),this}equals(s){return s.origin.equals(this.origin)&&s.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},rl=new La,dp=new H,Ir=new H,Lr=new H,Or=new H,Yh=new H,ol=new H,al=new Xt,ll=new Xt,cl=new Xt,pp=new H,mp=new H,fp=new H,hl=new H,ul=new H;class wt extends we{constructor(t=new pi,e=new vf){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,r=n.length;i<r;i++){const o=n[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=i}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(r&&a){ol.set(0,0,0);for(let l=0,c=r.length;l<c;l++){const h=a[l],u=r[l];h!==0&&(Yh.fromBufferAttribute(u,t),o?ol.addScaledVector(Yh,h):ol.addScaledVector(Yh.sub(e),h))}e.add(ol)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i!==void 0){if(n.boundingSphere===null&&n.computeBoundingSphere(),rl.copy(n.boundingSphere),rl.applyMatrix4(r),Bs.copy(t.ray).recast(t.near),rl.containsPoint(Bs.origin)===!1&&(Bs.intersectSphere(rl,dp)===null||Bs.origin.distanceToSquared(dp)>(t.far-t.near)**2))return;up.copy(r).invert(),Bs.copy(t.ray).applyMatrix4(up),n.boundingBox!==null&&Bs.intersectsBox(n.boundingBox)===!1||this._computeIntersections(t,e,Bs)}}_computeIntersections(t,e,n){let i;const r=this.geometry,o=this.material,a=r.index,l=r.attributes.position,c=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,p=r.drawRange;if(a!==null)if(Array.isArray(o))for(let f=0,g=d.length;f<g;f++){const m=d[f],x=o[m.materialIndex];for(let _=Math.max(m.start,p.start),y=Math.min(a.count,Math.min(m.start+m.count,p.start+p.count));_<y;_+=3)i=dl(this,x,t,n,c,h,u,a.getX(_),a.getX(_+1),a.getX(_+2)),i&&(i.faceIndex=Math.floor(_/3),i.face.materialIndex=m.materialIndex,e.push(i))}else for(let f=Math.max(0,p.start),g=Math.min(a.count,p.start+p.count);f<g;f+=3)i=dl(this,o,t,n,c,h,u,a.getX(f),a.getX(f+1),a.getX(f+2)),i&&(i.faceIndex=Math.floor(f/3),e.push(i));else if(l!==void 0)if(Array.isArray(o))for(let f=0,g=d.length;f<g;f++){const m=d[f],x=o[m.materialIndex];for(let _=Math.max(m.start,p.start),y=Math.min(l.count,Math.min(m.start+m.count,p.start+p.count));_<y;_+=3)i=dl(this,x,t,n,c,h,u,_,_+1,_+2),i&&(i.faceIndex=Math.floor(_/3),i.face.materialIndex=m.materialIndex,e.push(i))}else for(let f=Math.max(0,p.start),g=Math.min(l.count,p.start+p.count);f<g;f+=3)i=dl(this,o,t,n,c,h,u,f,f+1,f+2),i&&(i.faceIndex=Math.floor(f/3),e.push(i))}}function dl(s,t,e,n,i,r,o,a,l,c){s.getVertexPosition(a,Ir),s.getVertexPosition(l,Lr),s.getVertexPosition(c,Or);const h=function(u,d,p,f,g,m,x,_){let y;if(y=d.side===1?f.intersectTriangle(x,m,g,!0,_):f.intersectTriangle(g,m,x,d.side===0,_),y===null)return null;ul.copy(_),ul.applyMatrix4(u.matrixWorld);const A=p.ray.origin.distanceTo(ul);return A<p.near||A>p.far?null:{distance:A,point:ul.clone(),object:u}}(s,t,e,n,Ir,Lr,Or,hl);if(h){i&&(al.fromBufferAttribute(i,a),ll.fromBufferAttribute(i,l),cl.fromBufferAttribute(i,c),h.uv=ei.getInterpolation(hl,Ir,Lr,Or,al,ll,cl,new Xt)),r&&(al.fromBufferAttribute(r,a),ll.fromBufferAttribute(r,l),cl.fromBufferAttribute(r,c),h.uv1=ei.getInterpolation(hl,Ir,Lr,Or,al,ll,cl,new Xt),h.uv2=h.uv1),o&&(pp.fromBufferAttribute(o,a),mp.fromBufferAttribute(o,l),fp.fromBufferAttribute(o,c),h.normal=ei.getInterpolation(hl,Ir,Lr,Or,pp,mp,fp,new H),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const u={a,b:l,c,normal:new H,materialIndex:0};ei.getNormal(Ir,Lr,Or,u.normal),h.face=u}return h}class oe extends pi{constructor(t=1,e=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const a=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,p=0;function f(g,m,x,_,y,A,b,v,w,M,C){const T=A/w,E=b/M,D=A/2,R=b/2,P=v/2,k=w+1,F=M+1;let z=0,q=0;const B=new H;for(let W=0;W<F;W++){const Q=W*E-R;for(let j=0;j<k;j++){const dt=j*T-D;B[g]=dt*_,B[m]=Q*y,B[x]=P,c.push(B.x,B.y,B.z),B[g]=0,B[m]=0,B[x]=v>0?1:-1,h.push(B.x,B.y,B.z),u.push(j/w),u.push(1-W/M),z+=1}}for(let W=0;W<M;W++)for(let Q=0;Q<w;Q++){const j=d+Q+k*W,dt=d+Q+k*(W+1),ct=d+(Q+1)+k*(W+1),rt=d+(Q+1)+k*W;l.push(j,dt,rt),l.push(dt,ct,rt),q+=6}a.addGroup(p,q,C),p+=q,d+=z}f("z","y","x",-1,-1,n,e,t,o,r,0),f("z","y","x",1,-1,n,e,-t,o,r,1),f("x","z","y",1,1,t,n,e,i,o,2),f("x","z","y",1,-1,t,n,-e,i,o,3),f("x","y","z",1,-1,t,e,n,i,r,4),f("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new Oe(c,3)),this.setAttribute("normal",new Oe(h,3)),this.setAttribute("uv",new Oe(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new oe(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function eo(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?t[e][n]=null:t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function sn(s){const t={};for(let e=0;e<s.length;e++){const n=eo(s[e]);for(const i in n)t[i]=n[i]}return t}function wf(s){return s.getRenderTarget()===null?s.outputColorSpace:Ei}const av={clone:eo,merge:sn};class rr extends Fo{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,this.fragmentShader=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=eo(t.uniforms),this.uniformsGroups=function(e){const n=[];for(let i=0;i<e.length;i++)n.push(e[i].clone());return n}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?e.uniforms[i]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[i]={type:"m4",value:r.toArray()}:e.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class bf extends we{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new xe,this.projectionMatrix=new xe,this.projectionMatrixInverse=new xe,this.coordinateSystem=to}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class kn extends bf{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Ma*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*fa*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*Ma*Math.atan(Math.tan(.5*fa*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*fa*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Fr=-90;class lv extends we{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new kn(Fr,1,t,e);i.layers=this.layers,this.add(i);const r=new kn(Fr,1,t,e);r.layers=this.layers,this.add(r);const o=new kn(Fr,1,t,e);o.layers=this.layers,this.add(o);const a=new kn(Fr,1,t,e);a.layers=this.layers,this.add(a);const l=new kn(Fr,1,t,e);l.layers=this.layers,this.add(l);const c=new kn(Fr,1,t,e);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,o,a,l]=e;for(const c of e)this.remove(c);if(t===to)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else{if(t!==Xl)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1)}for(const c of e)this.add(c),c.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[i,r,o,a,l,c]=this.children,h=t.getRenderTarget(),u=t.toneMapping,d=t.xr.enabled;t.toneMapping=0,t.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=p,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(h),t.toneMapping=u,t.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Sf extends yn{constructor(t,e,n,i,r,o,a,l,c,h){super(t=t!==void 0?t:[],e=e!==void 0?e:Kr,n,i,r,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class cv extends sr{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];e.encoding!==void 0&&(_a("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),e.colorSpace=e.encoding===er?Nt:Sa),this.texture=new Sf(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0&&e.generateMipmaps,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:ti}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new oe(5,5,5),r=new rr({name:"CubemapFromEquirect",uniforms:eo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=e;const o=new wt(i,r),a=e.minFilter;return e.minFilter===jl&&(e.minFilter=ti),new lv(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(r)}}const $h=new H,hv=new H,uv=new Bt;let js=class{constructor(s=new H(1,0,0),t=0){this.isPlane=!0,this.normal=s,this.constant=t}set(s,t){return this.normal.copy(s),this.constant=t,this}setComponents(s,t,e,n){return this.normal.set(s,t,e),this.constant=n,this}setFromNormalAndCoplanarPoint(s,t){return this.normal.copy(s),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(s,t,e){const n=$h.subVectors(e,t).cross(hv.subVectors(s,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,s),this}copy(s){return this.normal.copy(s.normal),this.constant=s.constant,this}normalize(){const s=1/this.normal.length();return this.normal.multiplyScalar(s),this.constant*=s,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(s){return this.normal.dot(s)+this.constant}distanceToSphere(s){return this.distanceToPoint(s.center)-s.radius}projectPoint(s,t){return t.copy(s).addScaledVector(this.normal,-this.distanceToPoint(s))}intersectLine(s,t){const e=s.delta($h),n=this.normal.dot(e);if(n===0)return this.distanceToPoint(s.start)===0?t.copy(s.start):null;const i=-(s.start.dot(this.normal)+this.constant)/n;return i<0||i>1?null:t.copy(s.start).addScaledVector(e,i)}intersectsLine(s){const t=this.distanceToPoint(s.start),e=this.distanceToPoint(s.end);return t<0&&e>0||e<0&&t>0}intersectsBox(s){return s.intersectsPlane(this)}intersectsSphere(s){return s.intersectsPlane(this)}coplanarPoint(s){return s.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(s,t){const e=t||uv.getNormalMatrix(s),n=this.coplanarPoint($h).applyMatrix4(s),i=this.normal.applyMatrix3(e).normalize();return this.constant=-n.dot(i),this}translate(s){return this.constant-=s.dot(this.normal),this}equals(s){return s.normal.equals(this.normal)&&s.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Vs=new La,pl=new H;class ah{constructor(t=new js,e=new js,n=new js,i=new js,r=new js,o=new js){this.planes=[t,e,n,i,r,o]}set(t,e,n,i,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=2e3){const n=this.planes,i=t.elements,r=i[0],o=i[1],a=i[2],l=i[3],c=i[4],h=i[5],u=i[6],d=i[7],p=i[8],f=i[9],g=i[10],m=i[11],x=i[12],_=i[13],y=i[14],A=i[15];if(n[0].setComponents(l-r,d-c,m-p,A-x).normalize(),n[1].setComponents(l+r,d+c,m+p,A+x).normalize(),n[2].setComponents(l+o,d+h,m+f,A+_).normalize(),n[3].setComponents(l-o,d-h,m-f,A-_).normalize(),n[4].setComponents(l-a,d-u,m-g,A-y).normalize(),e===to)n[5].setComponents(l+a,d+u,m+g,A+y).normalize();else{if(e!==Xl)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);n[5].setComponents(a,u,g,y).normalize()}return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Vs.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Vs.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Vs)}intersectsSprite(t){return Vs.center.set(0,0,0),Vs.radius=.7071067811865476,Vs.applyMatrix4(t.matrixWorld),this.intersectsSphere(Vs)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(pl.x=i.normal.x>0?t.max.x:t.min.x,pl.y=i.normal.y>0?t.max.y:t.min.y,pl.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(pl)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Mf(){let s=null,t=!1,e=null,n=null;function i(r,o){e(r,o),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function dv(s,t){const e=t.isWebGL2,n=new WeakMap;return{get:function(i){return i.isInterleavedBufferAttribute&&(i=i.data),n.get(i)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);const r=n.get(i);r&&(s.deleteBuffer(r.buffer),n.delete(i))},update:function(i,r){if(i.isGLBufferAttribute){const a=n.get(i);return(!a||a.version<i.version)&&n.set(i,{buffer:i.buffer,type:i.type,bytesPerElement:i.elementSize,version:i.version}),void 0}i.isInterleavedBufferAttribute&&(i=i.data);const o=n.get(i);o===void 0?n.set(i,function(a,l){const c=a.array,h=a.usage,u=s.createBuffer();let d;if(s.bindBuffer(l,u),s.bufferData(l,c,h),a.onUploadCallback(),c instanceof Float32Array)d=s.FLOAT;else if(c instanceof Uint16Array)if(a.isFloat16BufferAttribute){if(!e)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");d=s.HALF_FLOAT}else d=s.UNSIGNED_SHORT;else if(c instanceof Int16Array)d=s.SHORT;else if(c instanceof Uint32Array)d=s.UNSIGNED_INT;else if(c instanceof Int32Array)d=s.INT;else if(c instanceof Int8Array)d=s.BYTE;else if(c instanceof Uint8Array)d=s.UNSIGNED_BYTE;else{if(!(c instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);d=s.UNSIGNED_BYTE}return{buffer:u,type:d,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version}}(i,r)):o.version<i.version&&(function(a,l,c){const h=l.array,u=l.updateRange;s.bindBuffer(c,a),u.count===-1?s.bufferSubData(c,0,h):(e?s.bufferSubData(c,u.offset*h.BYTES_PER_ELEMENT,h,u.offset,u.count):s.bufferSubData(c,u.offset*h.BYTES_PER_ELEMENT,h.subarray(u.offset,u.offset+u.count)),u.count=-1),l.onUploadCallback()}(o.buffer,i,r),o.version=i.version)}}}class lh extends pi{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,h=l+1,u=t/a,d=e/l,p=[],f=[],g=[],m=[];for(let x=0;x<h;x++){const _=x*d-o;for(let y=0;y<c;y++){const A=y*u-r;f.push(A,-_,0),g.push(0,0,1),m.push(y/a),m.push(1-x/l)}}for(let x=0;x<l;x++)for(let _=0;_<a;_++){const y=_+c*x,A=_+c*(x+1),b=_+1+c*(x+1),v=_+1+c*x;p.push(y,A,v),p.push(A,b,v)}this.setIndex(p),this.setAttribute("position",new Oe(f,3)),this.setAttribute("normal",new Oe(g,3)),this.setAttribute("uv",new Oe(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new lh(t.width,t.height,t.widthSegments,t.heightSegments)}}const kt={alphamap_fragment:`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,alphamap_pars_fragment:`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,alphatest_fragment:`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,alphatest_pars_fragment:`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,aomap_fragment:`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,aomap_pars_fragment:`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bsdfs:`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,iridescence_fragment:`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,bumpmap_pars_fragment:`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,clipping_planes_fragment:`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,clipping_planes_pars_fragment:`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,clipping_planes_pars_vertex:`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,clipping_planes_vertex:`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,color_fragment:`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,color_pars_fragment:`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,color_pars_vertex:`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,color_vertex:`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,common:`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,cube_uv_reflection_fragment:`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,defaultnormal_vertex:`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,displacementmap_pars_vertex:`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,displacementmap_vertex:`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,emissivemap_fragment:`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,emissivemap_pars_fragment:`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,envmap_fragment:`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,envmap_common_pars_fragment:`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,envmap_pars_fragment:`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,envmap_pars_vertex:`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,envmap_physical_pars_fragment:`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,envmap_vertex:`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,fog_vertex:`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fog_pars_vertex:`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,fog_fragment:`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fog_pars_fragment:`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gradientmap_pars_fragment:`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,lightmap_fragment:`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,lightmap_pars_fragment:`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lights_lambert_fragment:`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,lights_lambert_pars_fragment:`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,lights_pars_begin:`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,lights_toon_fragment:`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,lights_toon_pars_fragment:`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,lights_phong_fragment:`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,lights_phong_pars_fragment:`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,lights_physical_fragment:`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,lights_physical_pars_fragment:`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,lights_fragment_begin:`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lights_fragment_maps:`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lights_fragment_end:`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,logdepthbuf_fragment:`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,logdepthbuf_pars_fragment:`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,logdepthbuf_pars_vertex:`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,logdepthbuf_vertex:`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,map_fragment:`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,map_pars_fragment:`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,map_particle_fragment:`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,map_particle_pars_fragment:`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,metalnessmap_fragment:`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,metalnessmap_pars_fragment:`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,morphcolor_vertex:`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,morphnormal_vertex:`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,morphtarget_pars_vertex:`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,morphtarget_vertex:`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,normal_fragment_begin:`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,normal_fragment_maps:`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,normal_pars_fragment:`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_pars_vertex:`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,normal_vertex:`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,normalmap_pars_fragment:`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,clearcoat_normal_fragment_begin:`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,clearcoat_normal_fragment_maps:`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,clearcoat_pars_fragment:`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,iridescence_pars_fragment:`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,output_fragment:`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,packing:`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,premultiplied_alpha_fragment:`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,project_vertex:`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dithering_fragment:`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,dithering_pars_fragment:`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,roughnessmap_fragment:`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,roughnessmap_pars_fragment:`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,shadowmap_pars_fragment:`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,shadowmap_pars_vertex:`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,shadowmap_vertex:`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,shadowmask_pars_fragment:`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,skinbase_vertex:`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,skinning_pars_vertex:`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,skinning_vertex:`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,skinnormal_vertex:`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,specularmap_fragment:`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,specularmap_pars_fragment:`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,tonemapping_fragment:`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,tonemapping_pars_fragment:`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,transmission_fragment:`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,transmission_pars_fragment:`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,uv_pars_fragment:`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uv_pars_vertex:`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uv_vertex:`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,worldpos_vertex:`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,backgroundCube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,backgroundCube_frag:`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,depth_vert:`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`},ft={common:{diffuse:{value:new Vt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Bt},alphaMap:{value:null},alphaMapTransform:{value:new Bt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Bt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Bt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Bt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Bt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Bt},normalScale:{value:new Xt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Bt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Bt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Bt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Bt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Vt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Vt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Bt},alphaTest:{value:0},uvTransform:{value:new Bt}},sprite:{diffuse:{value:new Vt(16777215)},opacity:{value:1},center:{value:new Xt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Bt},alphaMap:{value:null},alphaMapTransform:{value:new Bt},alphaTest:{value:0}}},wi={basic:{uniforms:sn([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.fog]),vertexShader:kt.meshbasic_vert,fragmentShader:kt.meshbasic_frag},lambert:{uniforms:sn([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.fog,ft.lights,{emissive:{value:new Vt(0)}}]),vertexShader:kt.meshlambert_vert,fragmentShader:kt.meshlambert_frag},phong:{uniforms:sn([ft.common,ft.specularmap,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.fog,ft.lights,{emissive:{value:new Vt(0)},specular:{value:new Vt(1118481)},shininess:{value:30}}]),vertexShader:kt.meshphong_vert,fragmentShader:kt.meshphong_frag},standard:{uniforms:sn([ft.common,ft.envmap,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.roughnessmap,ft.metalnessmap,ft.fog,ft.lights,{emissive:{value:new Vt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:kt.meshphysical_vert,fragmentShader:kt.meshphysical_frag},toon:{uniforms:sn([ft.common,ft.aomap,ft.lightmap,ft.emissivemap,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.gradientmap,ft.fog,ft.lights,{emissive:{value:new Vt(0)}}]),vertexShader:kt.meshtoon_vert,fragmentShader:kt.meshtoon_frag},matcap:{uniforms:sn([ft.common,ft.bumpmap,ft.normalmap,ft.displacementmap,ft.fog,{matcap:{value:null}}]),vertexShader:kt.meshmatcap_vert,fragmentShader:kt.meshmatcap_frag},points:{uniforms:sn([ft.points,ft.fog]),vertexShader:kt.points_vert,fragmentShader:kt.points_frag},dashed:{uniforms:sn([ft.common,ft.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:kt.linedashed_vert,fragmentShader:kt.linedashed_frag},depth:{uniforms:sn([ft.common,ft.displacementmap]),vertexShader:kt.depth_vert,fragmentShader:kt.depth_frag},normal:{uniforms:sn([ft.common,ft.bumpmap,ft.normalmap,ft.displacementmap,{opacity:{value:1}}]),vertexShader:kt.meshnormal_vert,fragmentShader:kt.meshnormal_frag},sprite:{uniforms:sn([ft.sprite,ft.fog]),vertexShader:kt.sprite_vert,fragmentShader:kt.sprite_frag},background:{uniforms:{uvTransform:{value:new Bt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:kt.background_vert,fragmentShader:kt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:kt.backgroundCube_vert,fragmentShader:kt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:kt.cube_vert,fragmentShader:kt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:kt.equirect_vert,fragmentShader:kt.equirect_frag},distanceRGBA:{uniforms:sn([ft.common,ft.displacementmap,{referencePosition:{value:new H},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:kt.distanceRGBA_vert,fragmentShader:kt.distanceRGBA_frag},shadow:{uniforms:sn([ft.lights,ft.fog,{color:{value:new Vt(0)},opacity:{value:1}}]),vertexShader:kt.shadow_vert,fragmentShader:kt.shadow_frag}};wi.physical={uniforms:sn([wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Bt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Bt},clearcoatNormalScale:{value:new Xt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Bt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Bt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Bt},sheen:{value:0},sheenColor:{value:new Vt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Bt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Bt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Bt},transmissionSamplerSize:{value:new Xt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Bt},attenuationDistance:{value:0},attenuationColor:{value:new Vt(0)},specularColor:{value:new Vt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Bt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Bt},anisotropyVector:{value:new Xt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Bt}}]),vertexShader:kt.meshphysical_vert,fragmentShader:kt.meshphysical_frag};const ml={r:0,b:0,g:0};function pv(s,t,e,n,i,r,o){const a=new Vt(0);let l,c,h=r===!0?0:1,u=null,d=0,p=null;function f(g,m){g.getRGB(ml,wf(s)),n.buffers.color.setClear(ml.r,ml.g,ml.b,m,o)}return{getClearColor:function(){return a},setClearColor:function(g,m=1){a.set(g),h=m,f(a,h)},getClearAlpha:function(){return h},setClearAlpha:function(g){h=g,f(a,h)},render:function(g,m){let x=!1,_=m.isScene===!0?m.background:null;switch(_&&_.isTexture&&(_=(m.backgroundBlurriness>0?e:t).get(_)),_===null?f(a,h):_&&_.isColor&&(f(_,1),x=!0),s.xr.getEnvironmentBlendMode()){case"opaque":x=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,o),x=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,o),x=!0}(s.autoClear||x)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),_&&(_.isCubeTexture||_.mapping===rh)?(c===void 0&&(c=new wt(new oe(1,1,1),new rr({name:"BackgroundCubeMaterial",uniforms:eo(wi.backgroundCube.uniforms),vertexShader:wi.backgroundCube.vertexShader,fragmentShader:wi.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(y,A,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=m.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,c.material.toneMapped=_.colorSpace!==Nt,u===_&&d===_.version&&p===s.toneMapping||(c.material.needsUpdate=!0,u=_,d=_.version,p=s.toneMapping),c.layers.enableAll(),g.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(l===void 0&&(l=new wt(new lh(2,2),new rr({name:"BackgroundMaterial",uniforms:eo(wi.background.uniforms),vertexShader:wi.background.vertexShader,fragmentShader:wi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=_,l.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,l.material.toneMapped=_.colorSpace!==Nt,_.matrixAutoUpdate===!0&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),u===_&&d===_.version&&p===s.toneMapping||(l.material.needsUpdate=!0,u=_,d=_.version,p=s.toneMapping),l.layers.enableAll(),g.unshift(l,l.geometry,l.material,0,0,null))}}}function mv(s,t,e,n){const i=s.getParameter(s.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},l=p(null);let c=l,h=!1;function u(b){return n.isWebGL2?s.bindVertexArray(b):r.bindVertexArrayOES(b)}function d(b){return n.isWebGL2?s.deleteVertexArray(b):r.deleteVertexArrayOES(b)}function p(b){const v=[],w=[],M=[];for(let C=0;C<i;C++)v[C]=0,w[C]=0,M[C]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:v,enabledAttributes:w,attributeDivisors:M,object:b,attributes:{},index:null}}function f(){const b=c.newAttributes;for(let v=0,w=b.length;v<w;v++)b[v]=0}function g(b){m(b,0)}function m(b,v){const w=c.newAttributes,M=c.enabledAttributes,C=c.attributeDivisors;w[b]=1,M[b]===0&&(s.enableVertexAttribArray(b),M[b]=1),C[b]!==v&&((n.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](b,v),C[b]=v)}function x(){const b=c.newAttributes,v=c.enabledAttributes;for(let w=0,M=v.length;w<M;w++)v[w]!==b[w]&&(s.disableVertexAttribArray(w),v[w]=0)}function _(b,v,w,M,C,T,E){E===!0?s.vertexAttribIPointer(b,v,w,C,T):s.vertexAttribPointer(b,v,w,M,C,T)}function y(){A(),h=!0,c!==l&&(c=l,u(c.object))}function A(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(b,v,w,M,C){let T=!1;if(o){const E=function(D,R,P){const k=P.wireframe===!0;let F=a[D.id];F===void 0&&(F={},a[D.id]=F);let z=F[R.id];z===void 0&&(z={},F[R.id]=z);let q=z[k];return q===void 0&&(q=p(n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()),z[k]=q),q}(M,w,v);c!==E&&(c=E,u(c.object)),T=function(D,R,P,k){const F=c.attributes,z=R.attributes;let q=0;const B=P.getAttributes();for(const W in B)if(B[W].location>=0){const Q=F[W];let j=z[W];if(j===void 0&&(W==="instanceMatrix"&&D.instanceMatrix&&(j=D.instanceMatrix),W==="instanceColor"&&D.instanceColor&&(j=D.instanceColor)),Q===void 0||Q.attribute!==j||j&&Q.data!==j.data)return!0;q++}return c.attributesNum!==q||c.index!==k}(b,M,w,C),T&&function(D,R,P,k){const F={},z=R.attributes;let q=0;const B=P.getAttributes();for(const W in B)if(B[W].location>=0){let Q=z[W];Q===void 0&&(W==="instanceMatrix"&&D.instanceMatrix&&(Q=D.instanceMatrix),W==="instanceColor"&&D.instanceColor&&(Q=D.instanceColor));const j={};j.attribute=Q,Q&&Q.data&&(j.data=Q.data),F[W]=j,q++}c.attributes=F,c.attributesNum=q,c.index=k}(b,M,w,C)}else{const E=v.wireframe===!0;c.geometry===M.id&&c.program===w.id&&c.wireframe===E||(c.geometry=M.id,c.program=w.id,c.wireframe=E,T=!0)}C!==null&&e.update(C,s.ELEMENT_ARRAY_BUFFER),(T||h)&&(h=!1,function(E,D,R,P){if(n.isWebGL2===!1&&(E.isInstancedMesh||P.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;f();const k=P.attributes,F=R.getAttributes(),z=D.defaultAttributeValues;for(const q in F){const B=F[q];if(B.location>=0){let W=k[q];if(W===void 0&&(q==="instanceMatrix"&&E.instanceMatrix&&(W=E.instanceMatrix),q==="instanceColor"&&E.instanceColor&&(W=E.instanceColor)),W!==void 0){const Q=W.normalized,j=W.itemSize,dt=e.get(W);if(dt===void 0)continue;const ct=dt.buffer,rt=dt.type,$=dt.bytesPerElement,O=n.isWebGL2===!0&&(rt===s.INT||rt===s.UNSIGNED_INT||W.gpuType===hf);if(W.isInterleavedBufferAttribute){const I=W.data,K=I.stride,at=W.offset;if(I.isInstancedInterleavedBuffer){for(let X=0;X<B.locationSize;X++)m(B.location+X,I.meshPerAttribute);E.isInstancedMesh!==!0&&P._maxInstanceCount===void 0&&(P._maxInstanceCount=I.meshPerAttribute*I.count)}else for(let X=0;X<B.locationSize;X++)g(B.location+X);s.bindBuffer(s.ARRAY_BUFFER,ct);for(let X=0;X<B.locationSize;X++)_(B.location+X,j/B.locationSize,rt,Q,K*$,(at+j/B.locationSize*X)*$,O)}else{if(W.isInstancedBufferAttribute){for(let I=0;I<B.locationSize;I++)m(B.location+I,W.meshPerAttribute);E.isInstancedMesh!==!0&&P._maxInstanceCount===void 0&&(P._maxInstanceCount=W.meshPerAttribute*W.count)}else for(let I=0;I<B.locationSize;I++)g(B.location+I);s.bindBuffer(s.ARRAY_BUFFER,ct);for(let I=0;I<B.locationSize;I++)_(B.location+I,j/B.locationSize,rt,Q,j*$,j/B.locationSize*I*$,O)}}else if(z!==void 0){const Q=z[q];if(Q!==void 0)switch(Q.length){case 2:s.vertexAttrib2fv(B.location,Q);break;case 3:s.vertexAttrib3fv(B.location,Q);break;case 4:s.vertexAttrib4fv(B.location,Q);break;default:s.vertexAttrib1fv(B.location,Q)}}}}x()}(b,v,w,M),C!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,e.get(C).buffer))},reset:y,resetDefaultState:A,dispose:function(){y();for(const b in a){const v=a[b];for(const w in v){const M=v[w];for(const C in M)d(M[C].object),delete M[C];delete v[w]}delete a[b]}},releaseStatesOfGeometry:function(b){if(a[b.id]===void 0)return;const v=a[b.id];for(const w in v){const M=v[w];for(const C in M)d(M[C].object),delete M[C];delete v[w]}delete a[b.id]},releaseStatesOfProgram:function(b){for(const v in a){const w=a[v];if(w[b.id]===void 0)continue;const M=w[b.id];for(const C in M)d(M[C].object),delete M[C];delete w[b.id]}},initAttributes:f,enableAttribute:g,disableUnusedAttributes:x}}function fv(s,t,e,n){const i=n.isWebGL2;let r;this.setMode=function(o){r=o},this.render=function(o,a){s.drawArrays(r,o,a),e.update(a,r,1)},this.renderInstances=function(o,a,l){if(l===0)return;let c,h;if(i)c=s,h="drawArraysInstanced";else if(c=t.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",c===null)return;c[h](r,o,a,l),e.update(a,r,l)}}function gv(s,t,e){let n;function i(A){if(A==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";A="mediump"}return A==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const r=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let o=e.precision!==void 0?e.precision:"highp";const a=i(o);a!==o&&(o=a);const l=r||t.has("WEBGL_draw_buffers"),c=e.logarithmicDepthBuffer===!0,h=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),u=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=s.getParameter(s.MAX_TEXTURE_SIZE),p=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),f=s.getParameter(s.MAX_VERTEX_ATTRIBS),g=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),m=s.getParameter(s.MAX_VARYING_VECTORS),x=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),_=u>0,y=r||t.has("OES_texture_float");return{isWebGL2:r,drawBuffers:l,getMaxAnisotropy:function(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const A=t.get("EXT_texture_filter_anisotropic");n=s.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:g,maxVaryings:m,maxFragmentUniforms:x,vertexTextures:_,floatFragmentTextures:y,floatVertexTextures:_&&y,maxSamples:r?s.getParameter(s.MAX_SAMPLES):0}}function _v(s){const t=this;let e=null,n=0,i=!1,r=!1;const o=new js,a=new Bt,l={value:null,needsUpdate:!1};function c(h,u,d,p){const f=h!==null?h.length:0;let g=null;if(f!==0){if(g=l.value,p!==!0||g===null){const m=d+4*f,x=u.matrixWorldInverse;a.getNormalMatrix(x),(g===null||g.length<m)&&(g=new Float32Array(m));for(let _=0,y=d;_!==f;++_,y+=4)o.copy(h[_]).applyMatrix4(x,a),o.normal.toArray(g,y),g[y+3]=o.constant}l.value=g,l.needsUpdate=!0}return t.numPlanes=f,t.numIntersection=0,g}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,u){const d=h.length!==0||u||n!==0||i;return i=u,n=h.length,d},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(h,u){e=c(h,u,0)},this.setState=function(h,u,d){const p=h.clippingPlanes,f=h.clipIntersection,g=h.clipShadows,m=s.get(h);if(!i||p===null||p.length===0||r&&!g)r?c(null):function(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}();else{const x=r?0:n,_=4*x;let y=m.clippingState||null;l.value=y,y=c(p,u,_,d);for(let A=0;A!==_;++A)y[A]=e[A];m.clippingState=y,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=x}}}function vv(s){let t=new WeakMap;function e(i,r){return r===303?i.mapping=Kr:r===304&&(i.mapping=Qr),i}function n(i){const r=i.target;r.removeEventListener("dispose",n);const o=t.get(r);o!==void 0&&(t.delete(r),o.dispose())}return{get:function(i){if(i&&i.isTexture&&i.isRenderTargetTexture===!1){const r=i.mapping;if(r===303||r===304){if(t.has(i))return e(t.get(i).texture,i.mapping);{const o=i.image;if(o&&o.height>0){const a=new cv(o.height/2);return a.fromEquirectangularTexture(s,i),t.set(i,a),i.addEventListener("dispose",n),e(a.texture,i.mapping)}return null}}}return i},dispose:function(){t=new WeakMap}}}class Tf extends bf{constructor(t=-1,e=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const gp=[.125,.215,.35,.446,.526,.582],ea=20,Zh=new Tf,_p=new Vt;let Kh=null;const Xs=(1+Math.sqrt(5))/2,Nr=1/Xs,vp=[new H(1,1,1),new H(-1,1,1),new H(1,1,-1),new H(-1,1,-1),new H(0,Xs,Nr),new H(0,Xs,-Nr),new H(Nr,0,Xs),new H(-Nr,0,Xs),new H(Xs,Nr,0),new H(-Xs,Nr,0)];class yp{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Kh=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=bp(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=wp(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Kh),t.scissorTest=!1,fl(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Kr||t.mapping===Qr?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Kh=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:ti,minFilter:ti,generateMipmaps:!1,type:ba,format:bi,colorSpace:Ei,depthBuffer:!1},i=xp(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=xp(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(o){const a=[],l=[],c=[];let h=o;const u=o-4+1+gp.length;for(let d=0;d<u;d++){const p=Math.pow(2,h);l.push(p);let f=1/p;d>o-4?f=gp[d-o+4-1]:d===0&&(f=0),c.push(f);const g=1/(p-2),m=-g,x=1+g,_=[m,m,x,m,x,x,m,m,x,x,m,x],y=6,A=6,b=3,v=2,w=1,M=new Float32Array(b*A*y),C=new Float32Array(v*A*y),T=new Float32Array(w*A*y);for(let D=0;D<y;D++){const R=D%3*2/3-1,P=D>2?0:-1,k=[R,P,0,R+2/3,P,0,R+2/3,P+1,0,R,P,0,R+2/3,P+1,0,R,P+1,0];M.set(k,b*A*D),C.set(_,v*A*D);const F=[D,D,D,D,D,D];T.set(F,w*A*D)}const E=new pi;E.setAttribute("position",new li(M,b)),E.setAttribute("uv",new li(C,v)),E.setAttribute("faceIndex",new li(T,w)),a.push(E),h>4&&h--}return{lodPlanes:a,sizeLods:l,sigmas:c}}(r)),this._blurMaterial=function(o,a,l){const c=new Float32Array(ea),h=new H(0,1,0);return new rr({name:"SphericalGaussianBlur",defines:{n:ea,CUBEUV_TEXEL_WIDTH:1/a,CUBEUV_TEXEL_HEIGHT:1/l,CUBEUV_MAX_MIP:`${o}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:c},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:h}},vertexShader:ju(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}(r,t,e)}return i}_compileMaterial(t){const e=new wt(this._lodPlanes[0],t);this._renderer.compile(e,Zh)}_sceneToCubeUV(t,e,n,i){const r=new kn(90,1,e,n),o=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,h=l.toneMapping;l.getClearColor(_p),l.toneMapping=0,l.autoClear=!1;const u=new vf({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),d=new wt(new oe,u);let p=!1;const f=t.background;f?f.isColor&&(u.color.copy(f),t.background=null,p=!0):(u.color.copy(_p),p=!0);for(let g=0;g<6;g++){const m=g%3;m===0?(r.up.set(0,o[g],0),r.lookAt(a[g],0,0)):m===1?(r.up.set(0,0,o[g]),r.lookAt(0,a[g],0)):(r.up.set(0,o[g],0),r.lookAt(0,0,a[g]));const x=this._cubeSize;fl(i,m*x,g>2?x:0,x,x),l.setRenderTarget(i),p&&l.render(d,r),l.render(t,r)}d.geometry.dispose(),d.material.dispose(),l.toneMapping=h,l.autoClear=c,t.background=f}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Kr||t.mapping===Qr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=bp()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=wp());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new wt(this._lodPlanes[0],r);r.uniforms.envMap.value=t;const a=this._cubeSize;fl(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(o,Zh)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=vp[(i-1)%vp.length];this._blur(t,i-1,i,r,o)}e.autoClear=n}_blur(t,e,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",r),this._halfBlur(o,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,o,a){const l=this._renderer,c=this._blurMaterial,h=new wt(this._lodPlanes[i],c),u=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(r)?Math.PI/(2*d):2*Math.PI/39,f=r/p,g=isFinite(r)?1+Math.floor(3*f):ea;g>ea;const m=[];let x=0;for(let A=0;A<ea;++A){const b=A/f,v=Math.exp(-b*b/2);m.push(v),A===0?x+=v:A<g&&(x+=2*v)}for(let A=0;A<m.length;A++)m[A]=m[A]/x;u.envMap.value=t.texture,u.samples.value=g,u.weights.value=m,u.latitudinal.value=o==="latitudinal",a&&(u.poleAxis.value=a);const{_lodMax:_}=this;u.dTheta.value=p,u.mipInt.value=_-n;const y=this._sizeLods[i];fl(e,3*y*(i>_-4?i-_+4:0),4*(this._cubeSize-y),3*y,2*y),l.setRenderTarget(e),l.render(h,Zh)}}function xp(s,t,e){const n=new sr(s,t,e);return n.texture.mapping=rh,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function fl(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function wp(){return new rr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ju(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function bp(){return new rr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ju(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function ju(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function yv(s){let t=new WeakMap,e=null;function n(i){const r=i.target;r.removeEventListener("dispose",n);const o=t.get(r);o!==void 0&&(t.delete(r),o.dispose())}return{get:function(i){if(i&&i.isTexture){const r=i.mapping,o=r===303||r===304,a=r===Kr||r===Qr;if(o||a){if(i.isRenderTargetTexture&&i.needsPMREMUpdate===!0){i.needsPMREMUpdate=!1;let l=t.get(i);return e===null&&(e=new yp(s)),l=o?e.fromEquirectangular(i,l):e.fromCubemap(i,l),t.set(i,l),l.texture}if(t.has(i))return t.get(i).texture;{const l=i.image;if(o&&l&&l.height>0||a&&l&&function(c){let h=0;const u=6;for(let d=0;d<u;d++)c[d]!==void 0&&h++;return h===u}(l)){e===null&&(e=new yp(s));const c=o?e.fromEquirectangular(i):e.fromCubemap(i);return t.set(i,c),i.addEventListener("dispose",n),c.texture}return null}}}return i},dispose:function(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}}}function xv(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i}}}function wv(s,t,e,n){const i={},r=new WeakMap;function o(l){const c=l.target;c.index!==null&&t.remove(c.index);for(const u in c.attributes)t.remove(c.attributes[u]);for(const u in c.morphAttributes){const d=c.morphAttributes[u];for(let p=0,f=d.length;p<f;p++)t.remove(d[p])}c.removeEventListener("dispose",o),delete i[c.id];const h=r.get(c);h&&(t.remove(h),r.delete(c)),n.releaseStatesOfGeometry(c),c.isInstancedBufferGeometry===!0&&delete c._maxInstanceCount,e.memory.geometries--}function a(l){const c=[],h=l.index,u=l.attributes.position;let d=0;if(h!==null){const g=h.array;d=h.version;for(let m=0,x=g.length;m<x;m+=3){const _=g[m+0],y=g[m+1],A=g[m+2];c.push(_,y,y,A,A,_)}}else{const g=u.array;d=u.version;for(let m=0,x=g.length/3-1;m<x;m+=3){const _=m+0,y=m+1,A=m+2;c.push(_,y,y,A,A,_)}}const p=new(df(c)?xf:yf)(c,1);p.version=d;const f=r.get(l);f&&t.remove(f),r.set(l,p)}return{get:function(l,c){return i[c.id]===!0||(c.addEventListener("dispose",o),i[c.id]=!0,e.memory.geometries++),c},update:function(l){const c=l.attributes;for(const u in c)t.update(c[u],s.ARRAY_BUFFER);const h=l.morphAttributes;for(const u in h){const d=h[u];for(let p=0,f=d.length;p<f;p++)t.update(d[p],s.ARRAY_BUFFER)}},getWireframeAttribute:function(l){const c=r.get(l);if(c){const h=l.index;h!==null&&c.version<h.version&&a(l)}else a(l);return r.get(l)}}}function bv(s,t,e,n){const i=n.isWebGL2;let r,o,a;this.setMode=function(l){r=l},this.setIndex=function(l){o=l.type,a=l.bytesPerElement},this.render=function(l,c){s.drawElements(r,c,o,l*a),e.update(c,r,1)},this.renderInstances=function(l,c,h){if(h===0)return;let u,d;if(i)u=s,d="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",u===null)return;u[d](r,c,o,l*a,h),e.update(c,r,h)}}function Sv(s){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,i){switch(t.calls++,n){case s.TRIANGLES:t.triangles+=i*(e/3);break;case s.LINES:t.lines+=i*(e/2);break;case s.LINE_STRIP:t.lines+=i*(e-1);break;case s.LINE_LOOP:t.lines+=i*e;break;case s.POINTS:t.points+=i*e}}}}function Mv(s,t){return s[0]-t[0]}function Tv(s,t){return Math.abs(t[1])-Math.abs(s[1])}function Ev(s,t,e){const n={},i=new Float32Array(8),r=new WeakMap,o=new We,a=[];for(let l=0;l<8;l++)a[l]=[l,0];return{update:function(l,c,h){const u=l.morphTargetInfluences;if(t.isWebGL2===!0){const d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=d!==void 0?d.length:0;let f=r.get(c);if(f===void 0||f.count!==p){let x=function(){D.dispose(),r.delete(c),c.removeEventListener("dispose",x)};f!==void 0&&f.texture.dispose();const _=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,A=c.morphAttributes.color!==void 0,b=c.morphAttributes.position||[],v=c.morphAttributes.normal||[],w=c.morphAttributes.color||[];let M=0;_===!0&&(M=1),y===!0&&(M=2),A===!0&&(M=3);let C=c.attributes.position.count*M,T=1;C>t.maxTextureSize&&(T=Math.ceil(C/t.maxTextureSize),C=t.maxTextureSize);const E=new Float32Array(C*T*4*p),D=new ff(E,C,T,p);D.type=bs,D.needsUpdate=!0;const R=4*M;for(let P=0;P<p;P++){const k=b[P],F=v[P],z=w[P],q=C*T*4*P;for(let B=0;B<k.count;B++){const W=B*R;_===!0&&(o.fromBufferAttribute(k,B),E[q+W+0]=o.x,E[q+W+1]=o.y,E[q+W+2]=o.z,E[q+W+3]=0),y===!0&&(o.fromBufferAttribute(F,B),E[q+W+4]=o.x,E[q+W+5]=o.y,E[q+W+6]=o.z,E[q+W+7]=0),A===!0&&(o.fromBufferAttribute(z,B),E[q+W+8]=o.x,E[q+W+9]=o.y,E[q+W+10]=o.z,E[q+W+11]=z.itemSize===4?o.w:1)}}f={count:p,texture:D,size:new Xt(C,T)},r.set(c,f),c.addEventListener("dispose",x)}let g=0;for(let x=0;x<u.length;x++)g+=u[x];const m=c.morphTargetsRelative?1:1-g;h.getUniforms().setValue(s,"morphTargetBaseInfluence",m),h.getUniforms().setValue(s,"morphTargetInfluences",u),h.getUniforms().setValue(s,"morphTargetsTexture",f.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",f.size)}else{const d=u===void 0?0:u.length;let p=n[c.id];if(p===void 0||p.length!==d){p=[];for(let _=0;_<d;_++)p[_]=[_,0];n[c.id]=p}for(let _=0;_<d;_++){const y=p[_];y[0]=_,y[1]=u[_]}p.sort(Tv);for(let _=0;_<8;_++)_<d&&p[_][1]?(a[_][0]=p[_][0],a[_][1]=p[_][1]):(a[_][0]=Number.MAX_SAFE_INTEGER,a[_][1]=0);a.sort(Mv);const f=c.morphAttributes.position,g=c.morphAttributes.normal;let m=0;for(let _=0;_<8;_++){const y=a[_],A=y[0],b=y[1];A!==Number.MAX_SAFE_INTEGER&&b?(f&&c.getAttribute("morphTarget"+_)!==f[A]&&c.setAttribute("morphTarget"+_,f[A]),g&&c.getAttribute("morphNormal"+_)!==g[A]&&c.setAttribute("morphNormal"+_,g[A]),i[_]=b,m+=b):(f&&c.hasAttribute("morphTarget"+_)===!0&&c.deleteAttribute("morphTarget"+_),g&&c.hasAttribute("morphNormal"+_)===!0&&c.deleteAttribute("morphNormal"+_),i[_]=0)}const x=c.morphTargetsRelative?1:1-m;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",i)}}}}function Av(s,t,e,n){let i=new WeakMap;function r(o){const a=o.target;a.removeEventListener("dispose",r),e.remove(a.instanceMatrix),a.instanceColor!==null&&e.remove(a.instanceColor)}return{update:function(o){const a=n.render.frame,l=o.geometry,c=t.get(o,l);return i.get(c)!==a&&(t.update(c),i.set(c,a)),o.isInstancedMesh&&(o.hasEventListener("dispose",r)===!1&&o.addEventListener("dispose",r),e.update(o.instanceMatrix,s.ARRAY_BUFFER),o.instanceColor!==null&&e.update(o.instanceColor,s.ARRAY_BUFFER)),c},dispose:function(){i=new WeakMap}}}const Ef=new yn,Af=new ff,Cf=new class extends yn{constructor(s=null,t=1,e=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:s,width:t,height:e,depth:n},this.magFilter=rn,this.minFilter=rn,this.wrapR=xs,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},Rf=new Sf,Sp=[],Mp=[],Tp=new Float32Array(16),Ep=new Float32Array(9),Ap=new Float32Array(4);function No(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=Sp[i];if(r===void 0&&(r=new Float32Array(i),Sp[i]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,s[o].toArray(r,a)}return r}function Fe(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Ne(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function ch(s,t){let e=Mp[t];e===void 0&&(e=new Int32Array(t),Mp[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function Cv(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function Rv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y||(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fe(e,t))return;s.uniform2fv(this.addr,t),Ne(e,t)}}function Dv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y&&e[2]===t.z||(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)e[0]===t.r&&e[1]===t.g&&e[2]===t.b||(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Fe(e,t))return;s.uniform3fv(this.addr,t),Ne(e,t)}}function Pv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y&&e[2]===t.z&&e[3]===t.w||(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fe(e,t))return;s.uniform4fv(this.addr,t),Ne(e,t)}}function Iv(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fe(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Ne(e,t)}else{if(Fe(e,n))return;Ap.set(n),s.uniformMatrix2fv(this.addr,!1,Ap),Ne(e,n)}}function Lv(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fe(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Ne(e,t)}else{if(Fe(e,n))return;Ep.set(n),s.uniformMatrix3fv(this.addr,!1,Ep),Ne(e,n)}}function Ov(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(Fe(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Ne(e,t)}else{if(Fe(e,n))return;Tp.set(n),s.uniformMatrix4fv(this.addr,!1,Tp),Ne(e,n)}}function Fv(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function Nv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y||(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fe(e,t))return;s.uniform2iv(this.addr,t),Ne(e,t)}}function kv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y&&e[2]===t.z||(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Fe(e,t))return;s.uniform3iv(this.addr,t),Ne(e,t)}}function Uv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y&&e[2]===t.z&&e[3]===t.w||(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fe(e,t))return;s.uniform4iv(this.addr,t),Ne(e,t)}}function zv(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function Bv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y||(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Fe(e,t))return;s.uniform2uiv(this.addr,t),Ne(e,t)}}function Vv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y&&e[2]===t.z||(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Fe(e,t))return;s.uniform3uiv(this.addr,t),Ne(e,t)}}function qv(s,t){const e=this.cache;if(t.x!==void 0)e[0]===t.x&&e[1]===t.y&&e[2]===t.z&&e[3]===t.w||(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Fe(e,t))return;s.uniform4uiv(this.addr,t),Ne(e,t)}}function Wv(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||Ef,i)}function Gv(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||Cf,i)}function Hv(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||Rf,i)}function jv(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||Af,i)}function Xv(s,t){s.uniform1fv(this.addr,t)}function Yv(s,t){const e=No(t,this.size,2);s.uniform2fv(this.addr,e)}function $v(s,t){const e=No(t,this.size,3);s.uniform3fv(this.addr,e)}function Zv(s,t){const e=No(t,this.size,4);s.uniform4fv(this.addr,e)}function Kv(s,t){const e=No(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function Qv(s,t){const e=No(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function Jv(s,t){const e=No(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function t0(s,t){s.uniform1iv(this.addr,t)}function e0(s,t){s.uniform2iv(this.addr,t)}function n0(s,t){s.uniform3iv(this.addr,t)}function i0(s,t){s.uniform4iv(this.addr,t)}function s0(s,t){s.uniform1uiv(this.addr,t)}function r0(s,t){s.uniform2uiv(this.addr,t)}function o0(s,t){s.uniform3uiv(this.addr,t)}function a0(s,t){s.uniform4uiv(this.addr,t)}function l0(s,t,e){const n=this.cache,i=t.length,r=ch(e,i);Fe(n,r)||(s.uniform1iv(this.addr,r),Ne(n,r));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||Ef,r[o])}function c0(s,t,e){const n=this.cache,i=t.length,r=ch(e,i);Fe(n,r)||(s.uniform1iv(this.addr,r),Ne(n,r));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||Cf,r[o])}function h0(s,t,e){const n=this.cache,i=t.length,r=ch(e,i);Fe(n,r)||(s.uniform1iv(this.addr,r),Ne(n,r));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||Rf,r[o])}function u0(s,t,e){const n=this.cache,i=t.length,r=ch(e,i);Fe(n,r)||(s.uniform1iv(this.addr,r),Ne(n,r));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||Af,r[o])}class d0{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(i){switch(i){case 5126:return Cv;case 35664:return Rv;case 35665:return Dv;case 35666:return Pv;case 35674:return Iv;case 35675:return Lv;case 35676:return Ov;case 5124:case 35670:return Fv;case 35667:case 35671:return Nv;case 35668:case 35672:return kv;case 35669:case 35673:return Uv;case 5125:return zv;case 36294:return Bv;case 36295:return Vv;case 36296:return qv;case 35678:case 36198:case 36298:case 36306:case 35682:return Wv;case 35679:case 36299:case 36307:return Gv;case 35680:case 36300:case 36308:case 36293:return Hv;case 36289:case 36303:case 36311:case 36292:return jv}}(e.type)}}class p0{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(i){switch(i){case 5126:return Xv;case 35664:return Yv;case 35665:return $v;case 35666:return Zv;case 35674:return Kv;case 35675:return Qv;case 35676:return Jv;case 5124:case 35670:return t0;case 35667:case 35671:return e0;case 35668:case 35672:return n0;case 35669:case 35673:return i0;case 5125:return s0;case 36294:return r0;case 36295:return o0;case 36296:return a0;case 35678:case 36198:case 36298:case 36306:case 35682:return l0;case 35679:case 36299:case 36307:return c0;case 35680:case 36300:case 36308:case 36293:return h0;case 36289:case 36303:case 36311:case 36292:return u0}}(e.type)}}class m0{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const Qh=/(\w+)(\])?(\[|\.)?/g;function Cp(s,t){s.seq.push(t),s.map[t.id]=t}function f0(s,t,e){const n=s.name,i=n.length;for(Qh.lastIndex=0;;){const r=Qh.exec(n),o=Qh.lastIndex;let a=r[1];const l=r[2]==="]",c=r[3];if(l&&(a|=0),c===void 0||c==="["&&o+2===i){Cp(e,c===void 0?new d0(a,s,t):new p0(a,s,t));break}{let h=e.map[a];h===void 0&&(h=new m0(a),Cp(e,h)),e=h}}}class Nl{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i);f0(r,t.getUniformLocation(e,r.name),this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,o=e.length;r!==o;++r){const a=e[r],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function Rp(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}let g0=0;function Dp(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+function(a,l){const c=a.split(`
`),h=[],u=Math.max(l-6,0),d=Math.min(l+6,c.length);for(let p=u;p<d;p++){const f=p+1;h.push(`${f===l?">":" "} ${f}: ${c[p]}`)}return h.join(`
`)}(s.getShaderSource(t),o)}return i}function _0(s,t){const e=function(n){switch(n){case Ei:return["Linear","( value )"];case Nt:return["sRGB","( value )"];default:return["Linear","( value )"]}}(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function v0(s,t){let e;switch(t){case 1:e="Linear";break;case 2:e="Reinhard";break;case 3:e="OptimizedCineon";break;case 4:e="ACESFilmic";break;case 5:e="Custom";break;default:e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function na(s){return s!==""}function Pp(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ip(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const y0=/^[ \t]*#include +<([\w\d./]+)>/gm;function _u(s){return s.replace(y0,x0)}function x0(s,t){const e=kt[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return _u(e)}const w0=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Lp(s){return s.replace(w0,b0)}function b0(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Op(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function S0(s,t,e,n){const i=s.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=function(C){let T="SHADOWMAP_TYPE_BASIC";return C.shadowMapType===1?T="SHADOWMAP_TYPE_PCF":C.shadowMapType===2?T="SHADOWMAP_TYPE_PCF_SOFT":C.shadowMapType===3&&(T="SHADOWMAP_TYPE_VSM"),T}(e),c=function(C){let T="ENVMAP_TYPE_CUBE";if(C.envMap)switch(C.envMapMode){case Kr:case Qr:T="ENVMAP_TYPE_CUBE";break;case rh:T="ENVMAP_TYPE_CUBE_UV"}return T}(e),h=function(C){let T="ENVMAP_MODE_REFLECTION";return C.envMap&&C.envMapMode===Qr&&(T="ENVMAP_MODE_REFRACTION"),T}(e),u=function(C){let T="ENVMAP_BLENDING_NONE";if(C.envMap)switch(C.combine){case 0:T="ENVMAP_BLENDING_MULTIPLY";break;case 1:T="ENVMAP_BLENDING_MIX";break;case 2:T="ENVMAP_BLENDING_ADD"}return T}(e),d=function(C){const T=C.envMapCubeUVHeight;if(T===null)return null;const E=Math.log2(T)-2,D=1/T;return{texelWidth:1/(3*Math.max(Math.pow(2,E),112)),texelHeight:D,maxMip:E}}(e),p=e.isWebGL2?"":function(C){return[C.extensionDerivatives||C.envMapCubeUVHeight||C.bumpMap||C.normalMapTangentSpace||C.clearcoatNormalMap||C.flatShading||C.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(C.extensionFragDepth||C.logarithmicDepthBuffer)&&C.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",C.extensionDrawBuffers&&C.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(C.extensionShaderTextureLOD||C.envMap||C.transmission)&&C.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(na).join(`
`)}(e),f=function(C){const T=[];for(const E in C){const D=C[E];D!==!1&&T.push("#define "+E+" "+D)}return T.join(`
`)}(r),g=i.createProgram();let m,x,_=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,f].filter(na).join(`
`),m.length>0&&(m+=`
`),x=[p,"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,f].filter(na).join(`
`),x.length>0&&(x+=`
`)):(m=[Op(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,f,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(na).join(`
`),x=[p,Op(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,f,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==0?"#define TONE_MAPPING":"",e.toneMapping!==0?kt.tonemapping_pars_fragment:"",e.toneMapping!==0?v0("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",kt.encodings_pars_fragment,_0("linearToOutputTexel",e.outputColorSpace),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(na).join(`
`)),o=_u(o),o=Pp(o,e),o=Ip(o,e),a=_u(a),a=Pp(a,e),a=Ip(a,e),o=Lp(o),a=Lp(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=["#define varying in",e.glslVersion===Jd?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Jd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const y=_+m+o,A=_+x+a,b=Rp(i,i.VERTEX_SHADER,y),v=Rp(i,i.FRAGMENT_SHADER,A);if(i.attachShader(g,b),i.attachShader(g,v),e.index0AttributeName!==void 0?i.bindAttribLocation(g,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),s.debug.checkShaderErrors){const C=i.getProgramInfoLog(g).trim(),T=i.getShaderInfoLog(b).trim(),E=i.getShaderInfoLog(v).trim();let D=!0,R=!0;i.getProgramParameter(g,i.LINK_STATUS)===!1?(D=!1,typeof s.debug.onShaderError=="function"?s.debug.onShaderError(i,g,b,v):(Dp(i,b,"vertex"),Dp(i,v,"fragment"))):C!==""||T!==""&&E!==""||(R=!1),R&&(this.diagnostics={runnable:D,programLog:C,vertexShader:{log:T,prefix:m},fragmentShader:{log:E,prefix:x}})}let w,M;return i.deleteShader(b),i.deleteShader(v),this.getUniforms=function(){return w===void 0&&(w=new Nl(i,g)),w},this.getAttributes=function(){return M===void 0&&(M=function(C,T){const E={},D=C.getProgramParameter(T,C.ACTIVE_ATTRIBUTES);for(let R=0;R<D;R++){const P=C.getActiveAttrib(T,R),k=P.name;let F=1;P.type===C.FLOAT_MAT2&&(F=2),P.type===C.FLOAT_MAT3&&(F=3),P.type===C.FLOAT_MAT4&&(F=4),E[k]={type:P.type,location:C.getAttribLocation(T,k),locationSize:F}}return E}(i,g)),M},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=g0++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=v,this}let M0=0;class T0{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new E0(t),e.set(t,n)),n}}class E0{constructor(t){this.id=M0++,this.code=t,this.usedTimes=0}}function A0(s,t,e,n,i,r,o){const a=new gf,l=new T0,c=[],h=i.isWebGL2,u=i.logarithmicDepthBuffer,d=i.vertexTextures;let p=i.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(m){return m===0?"uv":`uv${m}`}return{getParameters:function(m,x,_,y,A){const b=y.fog,v=A.geometry,w=m.isMeshStandardMaterial?y.environment:null,M=(m.isMeshStandardMaterial?e:t).get(m.envMap||w),C=M&&M.mapping===rh?M.image.height:null,T=f[m.type];m.precision!==null&&(p=i.getMaxPrecision(m.precision),m.precision);const E=v.morphAttributes.position||v.morphAttributes.normal||v.morphAttributes.color,D=E!==void 0?E.length:0;let R,P,k,F,z=0;if(v.morphAttributes.position!==void 0&&(z=1),v.morphAttributes.normal!==void 0&&(z=2),v.morphAttributes.color!==void 0&&(z=3),T){const J=wi[T];R=J.vertexShader,P=J.fragmentShader}else R=m.vertexShader,P=m.fragmentShader,l.update(m),k=l.getVertexShaderID(m),F=l.getFragmentShaderID(m);const q=s.getRenderTarget(),B=A.isInstancedMesh===!0,W=!!m.map,Q=!!m.matcap,j=!!M,dt=!!m.aoMap,ct=!!m.lightMap,rt=!!m.bumpMap,$=!!m.normalMap,O=!!m.displacementMap,I=!!m.emissiveMap,K=!!m.metalnessMap,at=!!m.roughnessMap,X=m.anisotropy>0,L=m.clearcoat>0,Y=m.iridescence>0,G=m.sheen>0,N=m.transmission>0,Z=X&&!!m.anisotropyMap,it=L&&!!m.clearcoatMap,nt=L&&!!m.clearcoatNormalMap,pt=L&&!!m.clearcoatRoughnessMap,mt=Y&&!!m.iridescenceMap,_t=Y&&!!m.iridescenceThicknessMap,St=G&&!!m.sheenColorMap,Rt=G&&!!m.sheenRoughnessMap,Kt=!!m.specularMap,Pt=!!m.specularColorMap,Qt=!!m.specularIntensityMap,Se=N&&!!m.transmissionMap,At=N&&!!m.thicknessMap,Yt=!!m.gradientMap,Zt=!!m.alphaMap,ja=m.alphaTest>0,Os=!!m.extensions,Fn=!!v.attributes.uv1,Oi=!!v.attributes.uv2,wr=!!v.attributes.uv3;return{isWebGL2:h,shaderID:T,shaderType:m.type,shaderName:m.name,vertexShader:R,fragmentShader:P,defines:m.defines,customVertexShaderID:k,customFragmentShaderID:F,isRawShaderMaterial:m.isRawShaderMaterial===!0,glslVersion:m.glslVersion,precision:p,instancing:B,instancingColor:B&&A.instanceColor!==null,supportsVertexTextures:d,outputColorSpace:q===null?s.outputColorSpace:q.isXRRenderTarget===!0?q.texture.colorSpace:Ei,map:W,matcap:Q,envMap:j,envMapMode:j&&M.mapping,envMapCubeUVHeight:C,aoMap:dt,lightMap:ct,bumpMap:rt,normalMap:$,displacementMap:d&&O,emissiveMap:I,normalMapObjectSpace:$&&m.normalMapType===1,normalMapTangentSpace:$&&m.normalMapType===0,metalnessMap:K,roughnessMap:at,anisotropy:X,anisotropyMap:Z,clearcoat:L,clearcoatMap:it,clearcoatNormalMap:nt,clearcoatRoughnessMap:pt,iridescence:Y,iridescenceMap:mt,iridescenceThicknessMap:_t,sheen:G,sheenColorMap:St,sheenRoughnessMap:Rt,specularMap:Kt,specularColorMap:Pt,specularIntensityMap:Qt,transmission:N,transmissionMap:Se,thicknessMap:At,gradientMap:Yt,opaque:m.transparent===!1&&m.blending===1,alphaMap:Zt,alphaTest:ja,combine:m.combine,mapUv:W&&g(m.map.channel),aoMapUv:dt&&g(m.aoMap.channel),lightMapUv:ct&&g(m.lightMap.channel),bumpMapUv:rt&&g(m.bumpMap.channel),normalMapUv:$&&g(m.normalMap.channel),displacementMapUv:O&&g(m.displacementMap.channel),emissiveMapUv:I&&g(m.emissiveMap.channel),metalnessMapUv:K&&g(m.metalnessMap.channel),roughnessMapUv:at&&g(m.roughnessMap.channel),anisotropyMapUv:Z&&g(m.anisotropyMap.channel),clearcoatMapUv:it&&g(m.clearcoatMap.channel),clearcoatNormalMapUv:nt&&g(m.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:pt&&g(m.clearcoatRoughnessMap.channel),iridescenceMapUv:mt&&g(m.iridescenceMap.channel),iridescenceThicknessMapUv:_t&&g(m.iridescenceThicknessMap.channel),sheenColorMapUv:St&&g(m.sheenColorMap.channel),sheenRoughnessMapUv:Rt&&g(m.sheenRoughnessMap.channel),specularMapUv:Kt&&g(m.specularMap.channel),specularColorMapUv:Pt&&g(m.specularColorMap.channel),specularIntensityMapUv:Qt&&g(m.specularIntensityMap.channel),transmissionMapUv:Se&&g(m.transmissionMap.channel),thicknessMapUv:At&&g(m.thicknessMap.channel),alphaMapUv:Zt&&g(m.alphaMap.channel),vertexTangents:!!v.attributes.tangent&&($||X),vertexColors:m.vertexColors,vertexAlphas:m.vertexColors===!0&&!!v.attributes.color&&v.attributes.color.itemSize===4,vertexUv1s:Fn,vertexUv2s:Oi,vertexUv3s:wr,pointsUvs:A.isPoints===!0&&!!v.attributes.uv&&(W||Zt),fog:!!b,useFog:m.fog===!0,fogExp2:b&&b.isFogExp2,flatShading:m.flatShading===!0,sizeAttenuation:m.sizeAttenuation===!0,logarithmicDepthBuffer:u,skinning:A.isSkinnedMesh===!0,morphTargets:v.morphAttributes.position!==void 0,morphNormals:v.morphAttributes.normal!==void 0,morphColors:v.morphAttributes.color!==void 0,morphTargetsCount:D,morphTextureStride:z,numDirLights:x.directional.length,numPointLights:x.point.length,numSpotLights:x.spot.length,numSpotLightMaps:x.spotLightMap.length,numRectAreaLights:x.rectArea.length,numHemiLights:x.hemi.length,numDirLightShadows:x.directionalShadowMap.length,numPointLightShadows:x.pointShadowMap.length,numSpotLightShadows:x.spotShadowMap.length,numSpotLightShadowsWithMaps:x.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:m.dithering,shadowMapEnabled:s.shadowMap.enabled&&_.length>0,shadowMapType:s.shadowMap.type,toneMapping:m.toneMapped?s.toneMapping:0,useLegacyLights:s.useLegacyLights,premultipliedAlpha:m.premultipliedAlpha,doubleSided:m.side===2,flipSided:m.side===1,useDepthPacking:m.depthPacking>=0,depthPacking:m.depthPacking||0,index0AttributeName:m.index0AttributeName,extensionDerivatives:Os&&m.extensions.derivatives===!0,extensionFragDepth:Os&&m.extensions.fragDepth===!0,extensionDrawBuffers:Os&&m.extensions.drawBuffers===!0,extensionShaderTextureLOD:Os&&m.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:m.customProgramCacheKey()}},getProgramCacheKey:function(m){const x=[];if(m.shaderID?x.push(m.shaderID):(x.push(m.customVertexShaderID),x.push(m.customFragmentShaderID)),m.defines!==void 0)for(const _ in m.defines)x.push(_),x.push(m.defines[_]);return m.isRawShaderMaterial===!1&&(function(_,y){_.push(y.precision),_.push(y.outputColorSpace),_.push(y.envMapMode),_.push(y.envMapCubeUVHeight),_.push(y.mapUv),_.push(y.alphaMapUv),_.push(y.lightMapUv),_.push(y.aoMapUv),_.push(y.bumpMapUv),_.push(y.normalMapUv),_.push(y.displacementMapUv),_.push(y.emissiveMapUv),_.push(y.metalnessMapUv),_.push(y.roughnessMapUv),_.push(y.anisotropyMapUv),_.push(y.clearcoatMapUv),_.push(y.clearcoatNormalMapUv),_.push(y.clearcoatRoughnessMapUv),_.push(y.iridescenceMapUv),_.push(y.iridescenceThicknessMapUv),_.push(y.sheenColorMapUv),_.push(y.sheenRoughnessMapUv),_.push(y.specularMapUv),_.push(y.specularColorMapUv),_.push(y.specularIntensityMapUv),_.push(y.transmissionMapUv),_.push(y.thicknessMapUv),_.push(y.combine),_.push(y.fogExp2),_.push(y.sizeAttenuation),_.push(y.morphTargetsCount),_.push(y.morphAttributeCount),_.push(y.numDirLights),_.push(y.numPointLights),_.push(y.numSpotLights),_.push(y.numSpotLightMaps),_.push(y.numHemiLights),_.push(y.numRectAreaLights),_.push(y.numDirLightShadows),_.push(y.numPointLightShadows),_.push(y.numSpotLightShadows),_.push(y.numSpotLightShadowsWithMaps),_.push(y.shadowMapType),_.push(y.toneMapping),_.push(y.numClippingPlanes),_.push(y.numClipIntersection),_.push(y.depthPacking)}(x,m),function(_,y){a.disableAll(),y.isWebGL2&&a.enable(0),y.supportsVertexTextures&&a.enable(1),y.instancing&&a.enable(2),y.instancingColor&&a.enable(3),y.matcap&&a.enable(4),y.envMap&&a.enable(5),y.normalMapObjectSpace&&a.enable(6),y.normalMapTangentSpace&&a.enable(7),y.clearcoat&&a.enable(8),y.iridescence&&a.enable(9),y.alphaTest&&a.enable(10),y.vertexColors&&a.enable(11),y.vertexAlphas&&a.enable(12),y.vertexUv1s&&a.enable(13),y.vertexUv2s&&a.enable(14),y.vertexUv3s&&a.enable(15),y.vertexTangents&&a.enable(16),y.anisotropy&&a.enable(17),_.push(a.mask),a.disableAll(),y.fog&&a.enable(0),y.useFog&&a.enable(1),y.flatShading&&a.enable(2),y.logarithmicDepthBuffer&&a.enable(3),y.skinning&&a.enable(4),y.morphTargets&&a.enable(5),y.morphNormals&&a.enable(6),y.morphColors&&a.enable(7),y.premultipliedAlpha&&a.enable(8),y.shadowMapEnabled&&a.enable(9),y.useLegacyLights&&a.enable(10),y.doubleSided&&a.enable(11),y.flipSided&&a.enable(12),y.useDepthPacking&&a.enable(13),y.dithering&&a.enable(14),y.transmission&&a.enable(15),y.sheen&&a.enable(16),y.opaque&&a.enable(17),y.pointsUvs&&a.enable(18),_.push(a.mask)}(x,m),x.push(s.outputColorSpace)),x.push(m.customProgramCacheKey),x.join()},getUniforms:function(m){const x=f[m.type];let _;if(x){const y=wi[x];_=av.clone(y.uniforms)}else _=m.uniforms;return _},acquireProgram:function(m,x){let _;for(let y=0,A=c.length;y<A;y++){const b=c[y];if(b.cacheKey===x){_=b,++_.usedTimes;break}}return _===void 0&&(_=new S0(s,x,m,r),c.push(_)),_},releaseProgram:function(m){if(--m.usedTimes===0){const x=c.indexOf(m);c[x]=c[c.length-1],c.pop(),m.destroy()}},releaseShaderCache:function(m){l.remove(m)},programs:c,dispose:function(){l.dispose()}}}function C0(){let s=new WeakMap;return{get:function(t){let e=s.get(t);return e===void 0&&(e={},s.set(t,e)),e},remove:function(t){s.delete(t)},update:function(t,e,n){s.get(t)[e]=n},dispose:function(){s=new WeakMap}}}function R0(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function Fp(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function Np(){const s=[];let t=0;const e=[],n=[],i=[];function r(o,a,l,c,h,u){let d=s[t];return d===void 0?(d={id:o.id,object:o,geometry:a,material:l,groupOrder:c,renderOrder:o.renderOrder,z:h,group:u},s[t]=d):(d.id=o.id,d.object=o,d.geometry=a,d.material=l,d.groupOrder=c,d.renderOrder=o.renderOrder,d.z=h,d.group=u),t++,d}return{opaque:e,transmissive:n,transparent:i,init:function(){t=0,e.length=0,n.length=0,i.length=0},push:function(o,a,l,c,h,u){const d=r(o,a,l,c,h,u);l.transmission>0?n.push(d):l.transparent===!0?i.push(d):e.push(d)},unshift:function(o,a,l,c,h,u){const d=r(o,a,l,c,h,u);l.transmission>0?n.unshift(d):l.transparent===!0?i.unshift(d):e.unshift(d)},finish:function(){for(let o=t,a=s.length;o<a;o++){const l=s[o];if(l.id===null)break;l.id=null,l.object=null,l.geometry=null,l.material=null,l.group=null}},sort:function(o,a){e.length>1&&e.sort(o||R0),n.length>1&&n.sort(a||Fp),i.length>1&&i.sort(a||Fp)}}}function D0(){let s=new WeakMap;return{get:function(t,e){const n=s.get(t);let i;return n===void 0?(i=new Np,s.set(t,[i])):e>=n.length?(i=new Np,n.push(i)):i=n[e],i},dispose:function(){s=new WeakMap}}}function P0(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new H,color:new Vt};break;case"SpotLight":e={position:new H,direction:new H,color:new Vt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new H,color:new Vt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new H,skyColor:new Vt,groundColor:new Vt};break;case"RectAreaLight":e={color:new Vt,position:new H,halfWidth:new H,halfHeight:new H}}return s[t.id]=e,e}}}let I0=0;function L0(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function O0(s,t){const e=new P0,n=function(){const l={};return{get:function(c){if(l[c.id]!==void 0)return l[c.id];let h;switch(c.type){case"DirectionalLight":case"SpotLight":h={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xt};break;case"PointLight":h={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xt,shadowCameraNear:1,shadowCameraFar:1e3}}return l[c.id]=h,h}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let l=0;l<9;l++)i.probe.push(new H);const r=new H,o=new xe,a=new xe;return{setup:function(l,c){let h=0,u=0,d=0;for(let C=0;C<9;C++)i.probe[C].set(0,0,0);let p=0,f=0,g=0,m=0,x=0,_=0,y=0,A=0,b=0,v=0;l.sort(L0);const w=c===!0?Math.PI:1;for(let C=0,T=l.length;C<T;C++){const E=l[C],D=E.color,R=E.intensity,P=E.distance,k=E.shadow&&E.shadow.map?E.shadow.map.texture:null;if(E.isAmbientLight)h+=D.r*R*w,u+=D.g*R*w,d+=D.b*R*w;else if(E.isLightProbe)for(let F=0;F<9;F++)i.probe[F].addScaledVector(E.sh.coefficients[F],R);else if(E.isDirectionalLight){const F=e.get(E);if(F.color.copy(E.color).multiplyScalar(E.intensity*w),E.castShadow){const z=E.shadow,q=n.get(E);q.shadowBias=z.bias,q.shadowNormalBias=z.normalBias,q.shadowRadius=z.radius,q.shadowMapSize=z.mapSize,i.directionalShadow[p]=q,i.directionalShadowMap[p]=k,i.directionalShadowMatrix[p]=E.shadow.matrix,_++}i.directional[p]=F,p++}else if(E.isSpotLight){const F=e.get(E);F.position.setFromMatrixPosition(E.matrixWorld),F.color.copy(D).multiplyScalar(R*w),F.distance=P,F.coneCos=Math.cos(E.angle),F.penumbraCos=Math.cos(E.angle*(1-E.penumbra)),F.decay=E.decay,i.spot[g]=F;const z=E.shadow;if(E.map&&(i.spotLightMap[b]=E.map,b++,z.updateMatrices(E),E.castShadow&&v++),i.spotLightMatrix[g]=z.matrix,E.castShadow){const q=n.get(E);q.shadowBias=z.bias,q.shadowNormalBias=z.normalBias,q.shadowRadius=z.radius,q.shadowMapSize=z.mapSize,i.spotShadow[g]=q,i.spotShadowMap[g]=k,A++}g++}else if(E.isRectAreaLight){const F=e.get(E);F.color.copy(D).multiplyScalar(R),F.halfWidth.set(.5*E.width,0,0),F.halfHeight.set(0,.5*E.height,0),i.rectArea[m]=F,m++}else if(E.isPointLight){const F=e.get(E);if(F.color.copy(E.color).multiplyScalar(E.intensity*w),F.distance=E.distance,F.decay=E.decay,E.castShadow){const z=E.shadow,q=n.get(E);q.shadowBias=z.bias,q.shadowNormalBias=z.normalBias,q.shadowRadius=z.radius,q.shadowMapSize=z.mapSize,q.shadowCameraNear=z.camera.near,q.shadowCameraFar=z.camera.far,i.pointShadow[f]=q,i.pointShadowMap[f]=k,i.pointShadowMatrix[f]=E.shadow.matrix,y++}i.point[f]=F,f++}else if(E.isHemisphereLight){const F=e.get(E);F.skyColor.copy(E.color).multiplyScalar(R*w),F.groundColor.copy(E.groundColor).multiplyScalar(R*w),i.hemi[x]=F,x++}}m>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ft.LTC_FLOAT_1,i.rectAreaLTC2=ft.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0&&(i.rectAreaLTC1=ft.LTC_HALF_1,i.rectAreaLTC2=ft.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=u,i.ambient[2]=d;const M=i.hash;M.directionalLength===p&&M.pointLength===f&&M.spotLength===g&&M.rectAreaLength===m&&M.hemiLength===x&&M.numDirectionalShadows===_&&M.numPointShadows===y&&M.numSpotShadows===A&&M.numSpotMaps===b||(i.directional.length=p,i.spot.length=g,i.rectArea.length=m,i.point.length=f,i.hemi.length=x,i.directionalShadow.length=_,i.directionalShadowMap.length=_,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=A,i.spotShadowMap.length=A,i.directionalShadowMatrix.length=_,i.pointShadowMatrix.length=y,i.spotLightMatrix.length=A+b-v,i.spotLightMap.length=b,i.numSpotLightShadowsWithMaps=v,M.directionalLength=p,M.pointLength=f,M.spotLength=g,M.rectAreaLength=m,M.hemiLength=x,M.numDirectionalShadows=_,M.numPointShadows=y,M.numSpotShadows=A,M.numSpotMaps=b,i.version=I0++)},setupView:function(l,c){let h=0,u=0,d=0,p=0,f=0;const g=c.matrixWorldInverse;for(let m=0,x=l.length;m<x;m++){const _=l[m];if(_.isDirectionalLight){const y=i.directional[h];y.direction.setFromMatrixPosition(_.matrixWorld),r.setFromMatrixPosition(_.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(g),h++}else if(_.isSpotLight){const y=i.spot[d];y.position.setFromMatrixPosition(_.matrixWorld),y.position.applyMatrix4(g),y.direction.setFromMatrixPosition(_.matrixWorld),r.setFromMatrixPosition(_.target.matrixWorld),y.direction.sub(r),y.direction.transformDirection(g),d++}else if(_.isRectAreaLight){const y=i.rectArea[p];y.position.setFromMatrixPosition(_.matrixWorld),y.position.applyMatrix4(g),a.identity(),o.copy(_.matrixWorld),o.premultiply(g),a.extractRotation(o),y.halfWidth.set(.5*_.width,0,0),y.halfHeight.set(0,.5*_.height,0),y.halfWidth.applyMatrix4(a),y.halfHeight.applyMatrix4(a),p++}else if(_.isPointLight){const y=i.point[u];y.position.setFromMatrixPosition(_.matrixWorld),y.position.applyMatrix4(g),u++}else if(_.isHemisphereLight){const y=i.hemi[f];y.direction.setFromMatrixPosition(_.matrixWorld),y.direction.transformDirection(g),f++}}},state:i}}function kp(s,t){const e=new O0(s,t),n=[],i=[];return{init:function(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:function(r){e.setup(n,r)},setupLightsView:function(r){e.setupView(n,r)},pushLight:function(r){n.push(r)},pushShadow:function(r){i.push(r)}}}function F0(s,t){let e=new WeakMap;return{get:function(n,i=0){const r=e.get(n);let o;return r===void 0?(o=new kp(s,t),e.set(n,[o])):i>=r.length?(o=new kp(s,t),r.push(o)):o=r[i],o},dispose:function(){e=new WeakMap}}}class N0 extends Fo{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class k0 extends Fo{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function U0(s,t,e){let n=new ah;const i=new Xt,r=new Xt,o=new We,a=new N0({depthPacking:3201}),l=new k0,c={},h=e.maxTextureSize,u={[x_]:1,[w_]:0,[b_]:2},d=new rr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Xt},radius:{value:4}},vertexShader:`void main() {
	gl_Position = vec4( position, 1.0 );
}`,fragmentShader:`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const f=new pi;f.setAttribute("position",new li(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new wt(f,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let x=this.type;function _(b,v){const w=t.update(g);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,p.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new sr(i.x,i.y)),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,s.setRenderTarget(b.mapPass),s.clear(),s.renderBufferDirect(v,null,w,d,g,null),p.uniforms.shadow_pass.value=b.mapPass.texture,p.uniforms.resolution.value=b.mapSize,p.uniforms.radius.value=b.radius,s.setRenderTarget(b.map),s.clear(),s.renderBufferDirect(v,null,w,p,g,null)}function y(b,v,w,M){let C=null;const T=w.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(T!==void 0)C=T;else if(C=w.isPointLight===!0?l:a,s.localClippingEnabled&&v.clipShadows===!0&&Array.isArray(v.clippingPlanes)&&v.clippingPlanes.length!==0||v.displacementMap&&v.displacementScale!==0||v.alphaMap&&v.alphaTest>0||v.map&&v.alphaTest>0){const E=C.uuid,D=v.uuid;let R=c[E];R===void 0&&(R={},c[E]=R);let P=R[D];P===void 0&&(P=C.clone(),R[D]=P),C=P}return C.visible=v.visible,C.wireframe=v.wireframe,C.side=M===3?v.shadowSide!==null?v.shadowSide:v.side:v.shadowSide!==null?v.shadowSide:u[v.side],C.alphaMap=v.alphaMap,C.alphaTest=v.alphaTest,C.map=v.map,C.clipShadows=v.clipShadows,C.clippingPlanes=v.clippingPlanes,C.clipIntersection=v.clipIntersection,C.displacementMap=v.displacementMap,C.displacementScale=v.displacementScale,C.displacementBias=v.displacementBias,C.wireframeLinewidth=v.wireframeLinewidth,C.linewidth=v.linewidth,w.isPointLight===!0&&C.isMeshDistanceMaterial===!0&&(s.properties.get(C).light=w),C}function A(b,v,w,M,C){if(b.visible===!1)return;if(b.layers.test(v.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&C===3)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,b.matrixWorld);const E=t.update(b),D=b.material;if(Array.isArray(D)){const R=E.groups;for(let P=0,k=R.length;P<k;P++){const F=R[P],z=D[F.materialIndex];if(z&&z.visible){const q=y(b,z,M,C);s.renderBufferDirect(w,null,E,q,b,F)}}}else if(D.visible){const R=y(b,D,M,C);s.renderBufferDirect(w,null,E,R,b,null)}}const T=b.children;for(let E=0,D=T.length;E<D;E++)A(T[E],v,w,M,C)}this.render=function(b,v,w){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||b.length===0)return;const M=s.getRenderTarget(),C=s.getActiveCubeFace(),T=s.getActiveMipmapLevel(),E=s.state;E.setBlending(0),E.buffers.color.setClear(1,1,1,1),E.buffers.depth.setTest(!0),E.setScissorTest(!1);const D=x!==3&&this.type===3,R=x===3&&this.type!==3;for(let P=0,k=b.length;P<k;P++){const F=b[P],z=F.shadow;if(z===void 0||z.autoUpdate===!1&&z.needsUpdate===!1)continue;i.copy(z.mapSize);const q=z.getFrameExtents();if(i.multiply(q),r.copy(z.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/q.x),i.x=r.x*q.x,z.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/q.y),i.y=r.y*q.y,z.mapSize.y=r.y)),z.map===null||D===!0||R===!0){const W=this.type!==3?{minFilter:rn,magFilter:rn}:{};z.map!==null&&z.map.dispose(),z.map=new sr(i.x,i.y,W),z.map.texture.name=F.name+".shadowMap",z.camera.updateProjectionMatrix()}s.setRenderTarget(z.map),s.clear();const B=z.getViewportCount();for(let W=0;W<B;W++){const Q=z.getViewport(W);o.set(r.x*Q.x,r.y*Q.y,r.x*Q.z,r.y*Q.w),E.viewport(o),z.updateMatrices(F,W),n=z.getFrustum(),A(v,w,z.camera,F,this.type)}z.isPointLightShadow!==!0&&this.type===3&&_(z,w),z.needsUpdate=!1}x=this.type,m.needsUpdate=!1,s.setRenderTarget(M,C,T)}}function z0(s,t,e){const n=e.isWebGL2,i=new function(){let L=!1;const Y=new We;let G=null;const N=new We(0,0,0,0);return{setMask:function(Z){G===Z||L||(s.colorMask(Z,Z,Z,Z),G=Z)},setLocked:function(Z){L=Z},setClear:function(Z,it,nt,pt,mt){mt===!0&&(Z*=pt,it*=pt,nt*=pt),Y.set(Z,it,nt,pt),N.equals(Y)===!1&&(s.clearColor(Z,it,nt,pt),N.copy(Y))},reset:function(){L=!1,G=null,N.set(-1,0,0,0)}}},r=new function(){let L=!1,Y=null,G=null,N=null;return{setTest:function(Z){Z?ct(s.DEPTH_TEST):rt(s.DEPTH_TEST)},setMask:function(Z){Y===Z||L||(s.depthMask(Z),Y=Z)},setFunc:function(Z){if(G!==Z){switch(Z){case 0:s.depthFunc(s.NEVER);break;case 1:s.depthFunc(s.ALWAYS);break;case 2:s.depthFunc(s.LESS);break;case 3:default:s.depthFunc(s.LEQUAL);break;case 4:s.depthFunc(s.EQUAL);break;case 5:s.depthFunc(s.GEQUAL);break;case 6:s.depthFunc(s.GREATER);break;case 7:s.depthFunc(s.NOTEQUAL)}G=Z}},setLocked:function(Z){L=Z},setClear:function(Z){N!==Z&&(s.clearDepth(Z),N=Z)},reset:function(){L=!1,Y=null,G=null,N=null}}},o=new function(){let L=!1,Y=null,G=null,N=null,Z=null,it=null,nt=null,pt=null,mt=null;return{setTest:function(_t){L||(_t?ct(s.STENCIL_TEST):rt(s.STENCIL_TEST))},setMask:function(_t){Y===_t||L||(s.stencilMask(_t),Y=_t)},setFunc:function(_t,St,Rt){G===_t&&N===St&&Z===Rt||(s.stencilFunc(_t,St,Rt),G=_t,N=St,Z=Rt)},setOp:function(_t,St,Rt){it===_t&&nt===St&&pt===Rt||(s.stencilOp(_t,St,Rt),it=_t,nt=St,pt=Rt)},setLocked:function(_t){L=_t},setClear:function(_t){mt!==_t&&(s.clearStencil(_t),mt=_t)},reset:function(){L=!1,Y=null,G=null,N=null,Z=null,it=null,nt=null,pt=null,mt=null}}},a=new WeakMap,l=new WeakMap;let c={},h={},u=new WeakMap,d=[],p=null,f=!1,g=null,m=null,x=null,_=null,y=null,A=null,b=null,v=!1,w=null,M=null,C=null,T=null,E=null;const D=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let R=!1,P=0;const k=s.getParameter(s.VERSION);k.indexOf("WebGL")!==-1?(P=parseFloat(/^WebGL (\d)/.exec(k)[1]),R=P>=1):k.indexOf("OpenGL ES")!==-1&&(P=parseFloat(/^OpenGL ES (\d)/.exec(k)[1]),R=P>=2);let F=null,z={};const q=s.getParameter(s.SCISSOR_BOX),B=s.getParameter(s.VIEWPORT),W=new We().fromArray(q),Q=new We().fromArray(B);function j(L,Y,G,N){const Z=new Uint8Array(4),it=s.createTexture();s.bindTexture(L,it),s.texParameteri(L,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(L,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let nt=0;nt<G;nt++)!n||L!==s.TEXTURE_3D&&L!==s.TEXTURE_2D_ARRAY?s.texImage2D(Y+nt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Z):s.texImage3D(Y,0,s.RGBA,1,1,N,0,s.RGBA,s.UNSIGNED_BYTE,Z);return it}const dt={};function ct(L){c[L]!==!0&&(s.enable(L),c[L]=!0)}function rt(L){c[L]!==!1&&(s.disable(L),c[L]=!1)}dt[s.TEXTURE_2D]=j(s.TEXTURE_2D,s.TEXTURE_2D,1),dt[s.TEXTURE_CUBE_MAP]=j(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(dt[s.TEXTURE_2D_ARRAY]=j(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),dt[s.TEXTURE_3D]=j(s.TEXTURE_3D,s.TEXTURE_3D,1,1)),i.setClear(0,0,0,1),r.setClear(1),o.setClear(0),ct(s.DEPTH_TEST),r.setFunc(3),K(!1),at(1),ct(s.CULL_FACE),I(0);const $={[Vr]:s.FUNC_ADD,[S_]:s.FUNC_SUBTRACT,[M_]:s.FUNC_REVERSE_SUBTRACT};if(n)$[103]=s.MIN,$[104]=s.MAX;else{const L=t.get("EXT_blend_minmax");L!==null&&($[103]=L.MIN_EXT,$[104]=L.MAX_EXT)}const O={[T_]:s.ZERO,[E_]:s.ONE,[A_]:s.SRC_COLOR,[R_]:s.SRC_ALPHA,[F_]:s.SRC_ALPHA_SATURATE,[L_]:s.DST_COLOR,[P_]:s.DST_ALPHA,[C_]:s.ONE_MINUS_SRC_COLOR,[D_]:s.ONE_MINUS_SRC_ALPHA,[O_]:s.ONE_MINUS_DST_COLOR,[I_]:s.ONE_MINUS_DST_ALPHA};function I(L,Y,G,N,Z,it,nt,pt){if(L===0)return f===!0&&(rt(s.BLEND),f=!1),void 0;if(f===!1&&(ct(s.BLEND),f=!0),L===5)Z=Z||Y,it=it||G,nt=nt||N,Y===m&&Z===y||(s.blendEquationSeparate($[Y],$[Z]),m=Y,y=Z),G===x&&N===_&&it===A&&nt===b||(s.blendFuncSeparate(O[G],O[N],O[it],O[nt]),x=G,_=N,A=it,b=nt),g=L,v=!1;else if(L!==g||pt!==v){if(m===Vr&&y===Vr||(s.blendEquation(s.FUNC_ADD),m=Vr,y=Vr),pt)switch(L){case 1:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case 2:s.blendFunc(s.ONE,s.ONE);break;case 3:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case 4:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA)}else switch(L){case 1:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case 2:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case 3:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case 4:s.blendFunc(s.ZERO,s.SRC_COLOR)}x=null,_=null,A=null,b=null,g=L,v=pt}}function K(L){w!==L&&(L?s.frontFace(s.CW):s.frontFace(s.CCW),w=L)}function at(L){L!==0?(ct(s.CULL_FACE),L!==M&&(L===1?s.cullFace(s.BACK):L===2?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):rt(s.CULL_FACE),M=L}function X(L,Y,G){L?(ct(s.POLYGON_OFFSET_FILL),T===Y&&E===G||(s.polygonOffset(Y,G),T=Y,E=G)):rt(s.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:r,stencil:o},enable:ct,disable:rt,bindFramebuffer:function(L,Y){return h[L]!==Y&&(s.bindFramebuffer(L,Y),h[L]=Y,n&&(L===s.DRAW_FRAMEBUFFER&&(h[s.FRAMEBUFFER]=Y),L===s.FRAMEBUFFER&&(h[s.DRAW_FRAMEBUFFER]=Y)),!0)},drawBuffers:function(L,Y){let G=d,N=!1;if(L)if(G=u.get(Y),G===void 0&&(G=[],u.set(Y,G)),L.isWebGLMultipleRenderTargets){const Z=L.texture;if(G.length!==Z.length||G[0]!==s.COLOR_ATTACHMENT0){for(let it=0,nt=Z.length;it<nt;it++)G[it]=s.COLOR_ATTACHMENT0+it;G.length=Z.length,N=!0}}else G[0]!==s.COLOR_ATTACHMENT0&&(G[0]=s.COLOR_ATTACHMENT0,N=!0);else G[0]!==s.BACK&&(G[0]=s.BACK,N=!0);N&&(e.isWebGL2?s.drawBuffers(G):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(G))},useProgram:function(L){return p!==L&&(s.useProgram(L),p=L,!0)},setBlending:I,setMaterial:function(L,Y){L.side===2?rt(s.CULL_FACE):ct(s.CULL_FACE);let G=L.side===1;Y&&(G=!G),K(G),L.blending===1&&L.transparent===!1?I(0):I(L.blending,L.blendEquation,L.blendSrc,L.blendDst,L.blendEquationAlpha,L.blendSrcAlpha,L.blendDstAlpha,L.premultipliedAlpha),r.setFunc(L.depthFunc),r.setTest(L.depthTest),r.setMask(L.depthWrite),i.setMask(L.colorWrite);const N=L.stencilWrite;o.setTest(N),N&&(o.setMask(L.stencilWriteMask),o.setFunc(L.stencilFunc,L.stencilRef,L.stencilFuncMask),o.setOp(L.stencilFail,L.stencilZFail,L.stencilZPass)),X(L.polygonOffset,L.polygonOffsetFactor,L.polygonOffsetUnits),L.alphaToCoverage===!0?ct(s.SAMPLE_ALPHA_TO_COVERAGE):rt(s.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:K,setCullFace:at,setLineWidth:function(L){L!==C&&(R&&s.lineWidth(L),C=L)},setPolygonOffset:X,setScissorTest:function(L){L?ct(s.SCISSOR_TEST):rt(s.SCISSOR_TEST)},activeTexture:function(L){L===void 0&&(L=s.TEXTURE0+D-1),F!==L&&(s.activeTexture(L),F=L)},bindTexture:function(L,Y,G){G===void 0&&(G=F===null?s.TEXTURE0+D-1:F);let N=z[G];N===void 0&&(N={type:void 0,texture:void 0},z[G]=N),N.type===L&&N.texture===Y||(F!==G&&(s.activeTexture(G),F=G),s.bindTexture(L,Y||dt[L]),N.type=L,N.texture=Y)},unbindTexture:function(){const L=z[F];L!==void 0&&L.type!==void 0&&(s.bindTexture(L.type,null),L.type=void 0,L.texture=void 0)},compressedTexImage2D:function(){try{s.compressedTexImage2D.apply(s,arguments)}catch{}},compressedTexImage3D:function(){try{s.compressedTexImage3D.apply(s,arguments)}catch{}},texImage2D:function(){try{s.texImage2D.apply(s,arguments)}catch{}},texImage3D:function(){try{s.texImage3D.apply(s,arguments)}catch{}},updateUBOMapping:function(L,Y){let G=l.get(Y);G===void 0&&(G=new WeakMap,l.set(Y,G));let N=G.get(L);N===void 0&&(N=s.getUniformBlockIndex(Y,L.name),G.set(L,N))},uniformBlockBinding:function(L,Y){const G=l.get(Y).get(L);a.get(Y)!==G&&(s.uniformBlockBinding(Y,G,L.__bindingPointIndex),a.set(Y,G))},texStorage2D:function(){try{s.texStorage2D.apply(s,arguments)}catch{}},texStorage3D:function(){try{s.texStorage3D.apply(s,arguments)}catch{}},texSubImage2D:function(){try{s.texSubImage2D.apply(s,arguments)}catch{}},texSubImage3D:function(){try{s.texSubImage3D.apply(s,arguments)}catch{}},compressedTexSubImage2D:function(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch{}},compressedTexSubImage3D:function(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch{}},scissor:function(L){W.equals(L)===!1&&(s.scissor(L.x,L.y,L.z,L.w),W.copy(L))},viewport:function(L){Q.equals(L)===!1&&(s.viewport(L.x,L.y,L.z,L.w),Q.copy(L))},reset:function(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),n===!0&&(s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),c={},F=null,z={},h={},u=new WeakMap,d=[],p=null,f=!1,g=null,m=null,x=null,_=null,y=null,A=null,b=null,v=!1,w=null,M=null,C=null,T=null,E=null,W.set(0,0,s.canvas.width,s.canvas.height),Q.set(0,0,s.canvas.width,s.canvas.height),i.reset(),r.reset(),o.reset()}}}function B0(s,t,e,n,i,r,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,h=i.maxTextureSize,u=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,p=typeof navigator<"u"&&/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap;let g;const m=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(O,I){return x?new OffscreenCanvas(O,I):$l("canvas")}function y(O,I,K,at){let X=1;if((O.width>at||O.height>at)&&(X=at/Math.max(O.width,O.height)),X<1||I===!0){if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const L=I?Yl:Math.floor,Y=L(X*O.width),G=L(X*O.height);g===void 0&&(g=_(Y,G));const N=K?_(Y,G):g;return N.width=Y,N.height=G,N.getContext("2d").drawImage(O,0,0,Y,G),N}return"data"in O,O}return O}function A(O){return gu(O.width)&&gu(O.height)}function b(O,I){return O.generateMipmaps&&I&&O.minFilter!==rn&&O.minFilter!==ti}function v(O){s.generateMipmap(O)}function w(O,I,K,at,X=!1){if(a===!1)return I;if(O!==null&&s[O]!==void 0)return s[O];let L=I;return I===s.RED&&(K===s.FLOAT&&(L=s.R32F),K===s.HALF_FLOAT&&(L=s.R16F),K===s.UNSIGNED_BYTE&&(L=s.R8)),I===s.RG&&(K===s.FLOAT&&(L=s.RG32F),K===s.HALF_FLOAT&&(L=s.RG16F),K===s.UNSIGNED_BYTE&&(L=s.RG8)),I===s.RGBA&&(K===s.FLOAT&&(L=s.RGBA32F),K===s.HALF_FLOAT&&(L=s.RGBA16F),K===s.UNSIGNED_BYTE&&(L=at===Nt&&X===!1?s.SRGB8_ALPHA8:s.RGBA8),K===s.UNSIGNED_SHORT_4_4_4_4&&(L=s.RGBA4),K===s.UNSIGNED_SHORT_5_5_5_1&&(L=s.RGB5_A1)),L!==s.R16F&&L!==s.R32F&&L!==s.RG16F&&L!==s.RG32F&&L!==s.RGBA16F&&L!==s.RGBA32F||t.get("EXT_color_buffer_float"),L}function M(O,I,K){return b(O,K)===!0||O.isFramebufferTexture&&O.minFilter!==rn&&O.minFilter!==ti?Math.log2(Math.max(I.width,I.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?I.mipmaps.length:1}function C(O){return O===rn||O===1004||O===Eh?s.NEAREST:s.LINEAR}function T(O){const I=O.target;I.removeEventListener("dispose",T),function(K){const at=n.get(K);if(at.__webglInit===void 0)return;const X=K.source,L=m.get(X);if(L){const Y=L[at.__cacheKey];Y.usedTimes--,Y.usedTimes===0&&D(K),Object.keys(L).length===0&&m.delete(X)}n.remove(K)}(I),I.isVideoTexture&&f.delete(I)}function E(O){const I=O.target;I.removeEventListener("dispose",E),function(K){const at=K.texture,X=n.get(K),L=n.get(at);if(L.__webglTexture!==void 0&&(s.deleteTexture(L.__webglTexture),o.memory.textures--),K.depthTexture&&K.depthTexture.dispose(),K.isWebGLCubeRenderTarget)for(let Y=0;Y<6;Y++)s.deleteFramebuffer(X.__webglFramebuffer[Y]),X.__webglDepthbuffer&&s.deleteRenderbuffer(X.__webglDepthbuffer[Y]);else{if(s.deleteFramebuffer(X.__webglFramebuffer),X.__webglDepthbuffer&&s.deleteRenderbuffer(X.__webglDepthbuffer),X.__webglMultisampledFramebuffer&&s.deleteFramebuffer(X.__webglMultisampledFramebuffer),X.__webglColorRenderbuffer)for(let Y=0;Y<X.__webglColorRenderbuffer.length;Y++)X.__webglColorRenderbuffer[Y]&&s.deleteRenderbuffer(X.__webglColorRenderbuffer[Y]);X.__webglDepthRenderbuffer&&s.deleteRenderbuffer(X.__webglDepthRenderbuffer)}if(K.isWebGLMultipleRenderTargets)for(let Y=0,G=at.length;Y<G;Y++){const N=n.get(at[Y]);N.__webglTexture&&(s.deleteTexture(N.__webglTexture),o.memory.textures--),n.remove(at[Y])}n.remove(at),n.remove(K)}(I)}function D(O){const I=n.get(O);s.deleteTexture(I.__webglTexture);const K=O.source;delete m.get(K)[I.__cacheKey],o.memory.textures--}let R=0;function P(O,I){const K=n.get(O);if(O.isVideoTexture&&function(at){const X=o.render.frame;f.get(at)!==X&&(f.set(at,X),at.update())}(O),O.isRenderTargetTexture===!1&&O.version>0&&K.__version!==O.version){const at=O.image;if(at!==null){if(at.complete!==!1)return W(K,O,I),void 0}}e.bindTexture(s.TEXTURE_2D,K.__webglTexture,s.TEXTURE0+I)}const k={[Hl]:s.REPEAT,[xs]:s.CLAMP_TO_EDGE,[pu]:s.MIRRORED_REPEAT},F={[rn]:s.NEAREST,[N_]:s.NEAREST_MIPMAP_NEAREST,[Eh]:s.NEAREST_MIPMAP_LINEAR,[ti]:s.LINEAR,[k_]:s.LINEAR_MIPMAP_NEAREST,[jl]:s.LINEAR_MIPMAP_LINEAR},z={[U_]:s.NEVER,[H_]:s.ALWAYS,[z_]:s.LESS,[V_]:s.LEQUAL,[B_]:s.EQUAL,[G_]:s.GEQUAL,[q_]:s.GREATER,[W_]:s.NOTEQUAL};function q(O,I,K){if(K?(s.texParameteri(O,s.TEXTURE_WRAP_S,k[I.wrapS]),s.texParameteri(O,s.TEXTURE_WRAP_T,k[I.wrapT]),O!==s.TEXTURE_3D&&O!==s.TEXTURE_2D_ARRAY||s.texParameteri(O,s.TEXTURE_WRAP_R,k[I.wrapR]),s.texParameteri(O,s.TEXTURE_MAG_FILTER,F[I.magFilter]),s.texParameteri(O,s.TEXTURE_MIN_FILTER,F[I.minFilter])):(s.texParameteri(O,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(O,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),O!==s.TEXTURE_3D&&O!==s.TEXTURE_2D_ARRAY||s.texParameteri(O,s.TEXTURE_WRAP_R,s.CLAMP_TO_EDGE),I.wrapS===xs&&I.wrapT,s.texParameteri(O,s.TEXTURE_MAG_FILTER,C(I.magFilter)),s.texParameteri(O,s.TEXTURE_MIN_FILTER,C(I.minFilter)),I.minFilter!==rn&&I.minFilter),I.compareFunction&&(s.texParameteri(O,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(O,s.TEXTURE_COMPARE_FUNC,z[I.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){const at=t.get("EXT_texture_filter_anisotropic");if(I.magFilter===rn||I.minFilter!==Eh&&I.minFilter!==jl||I.type===bs&&t.has("OES_texture_float_linear")===!1||a===!1&&I.type===ba&&t.has("OES_texture_half_float_linear")===!1)return;(I.anisotropy>1||n.get(I).__currentAnisotropy)&&(s.texParameterf(O,at.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(I.anisotropy,i.getMaxAnisotropy())),n.get(I).__currentAnisotropy=I.anisotropy)}}function B(O,I){let K=!1;O.__webglInit===void 0&&(O.__webglInit=!0,I.addEventListener("dispose",T));const at=I.source;let X=m.get(at);X===void 0&&(X={},m.set(at,X));const L=function(Y){const G=[];return G.push(Y.wrapS),G.push(Y.wrapT),G.push(Y.wrapR||0),G.push(Y.magFilter),G.push(Y.minFilter),G.push(Y.anisotropy),G.push(Y.internalFormat),G.push(Y.format),G.push(Y.type),G.push(Y.generateMipmaps),G.push(Y.premultiplyAlpha),G.push(Y.flipY),G.push(Y.unpackAlignment),G.push(Y.colorSpace),G.join()}(I);if(L!==O.__cacheKey){X[L]===void 0&&(X[L]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,K=!0),X[L].usedTimes++;const Y=X[O.__cacheKey];Y!==void 0&&(X[O.__cacheKey].usedTimes--,Y.usedTimes===0&&D(I)),O.__cacheKey=L,O.__webglTexture=X[L].texture}return K}function W(O,I,K){let at=s.TEXTURE_2D;(I.isDataArrayTexture||I.isCompressedArrayTexture)&&(at=s.TEXTURE_2D_ARRAY),I.isData3DTexture&&(at=s.TEXTURE_3D);const X=B(O,I),L=I.source;e.bindTexture(at,O.__webglTexture,s.TEXTURE0+K);const Y=n.get(L);if(L.version!==Y.__version||X===!0){e.activeTexture(s.TEXTURE0+K),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,I.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,I.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const G=function(Pt){return!a&&(Pt.wrapS!==xs||Pt.wrapT!==xs||Pt.minFilter!==rn&&Pt.minFilter!==ti)}(I)&&A(I.image)===!1;let N=y(I.image,G,!1,h);N=$(I,N);const Z=A(N)||a,it=r.convert(I.format,I.colorSpace);let nt,pt=r.convert(I.type),mt=w(I.internalFormat,it,pt,I.colorSpace);q(at,I,Z);const _t=I.mipmaps,St=a&&I.isVideoTexture!==!0,Rt=Y.__version===void 0||X===!0,Kt=M(I,N,Z);if(I.isDepthTexture)mt=s.DEPTH_COMPONENT,a?mt=I.type===bs?s.DEPTH_COMPONENT32F:I.type===ws?s.DEPTH_COMPONENT24:I.type===Js?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT16:I.type,I.format===tr&&mt===s.DEPTH_COMPONENT&&I.type!==Hu&&I.type!==ws&&(I.type=ws,pt=r.convert(I.type)),I.format===Jr&&mt===s.DEPTH_COMPONENT&&(mt=s.DEPTH_STENCIL,I.type!==Js&&(I.type=Js,pt=r.convert(I.type))),Rt&&(St?e.texStorage2D(s.TEXTURE_2D,1,mt,N.width,N.height):e.texImage2D(s.TEXTURE_2D,0,mt,N.width,N.height,0,it,pt,null));else if(I.isDataTexture)if(_t.length>0&&Z){St&&Rt&&e.texStorage2D(s.TEXTURE_2D,Kt,mt,_t[0].width,_t[0].height);for(let Pt=0,Qt=_t.length;Pt<Qt;Pt++)nt=_t[Pt],St?e.texSubImage2D(s.TEXTURE_2D,Pt,0,0,nt.width,nt.height,it,pt,nt.data):e.texImage2D(s.TEXTURE_2D,Pt,mt,nt.width,nt.height,0,it,pt,nt.data);I.generateMipmaps=!1}else St?(Rt&&e.texStorage2D(s.TEXTURE_2D,Kt,mt,N.width,N.height),e.texSubImage2D(s.TEXTURE_2D,0,0,0,N.width,N.height,it,pt,N.data)):e.texImage2D(s.TEXTURE_2D,0,mt,N.width,N.height,0,it,pt,N.data);else if(I.isCompressedTexture)if(I.isCompressedArrayTexture){St&&Rt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Kt,mt,_t[0].width,_t[0].height,N.depth);for(let Pt=0,Qt=_t.length;Pt<Qt;Pt++)nt=_t[Pt],I.format!==bi?it!==null&&(St?e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Pt,0,0,0,nt.width,nt.height,N.depth,it,nt.data,0,0):e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Pt,mt,nt.width,nt.height,N.depth,0,nt.data,0,0)):St?e.texSubImage3D(s.TEXTURE_2D_ARRAY,Pt,0,0,0,nt.width,nt.height,N.depth,it,pt,nt.data):e.texImage3D(s.TEXTURE_2D_ARRAY,Pt,mt,nt.width,nt.height,N.depth,0,it,pt,nt.data)}else{St&&Rt&&e.texStorage2D(s.TEXTURE_2D,Kt,mt,_t[0].width,_t[0].height);for(let Pt=0,Qt=_t.length;Pt<Qt;Pt++)nt=_t[Pt],I.format!==bi?it!==null&&(St?e.compressedTexSubImage2D(s.TEXTURE_2D,Pt,0,0,nt.width,nt.height,it,nt.data):e.compressedTexImage2D(s.TEXTURE_2D,Pt,mt,nt.width,nt.height,0,nt.data)):St?e.texSubImage2D(s.TEXTURE_2D,Pt,0,0,nt.width,nt.height,it,pt,nt.data):e.texImage2D(s.TEXTURE_2D,Pt,mt,nt.width,nt.height,0,it,pt,nt.data)}else if(I.isDataArrayTexture)St?(Rt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Kt,mt,N.width,N.height,N.depth),e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,N.width,N.height,N.depth,it,pt,N.data)):e.texImage3D(s.TEXTURE_2D_ARRAY,0,mt,N.width,N.height,N.depth,0,it,pt,N.data);else if(I.isData3DTexture)St?(Rt&&e.texStorage3D(s.TEXTURE_3D,Kt,mt,N.width,N.height,N.depth),e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,N.width,N.height,N.depth,it,pt,N.data)):e.texImage3D(s.TEXTURE_3D,0,mt,N.width,N.height,N.depth,0,it,pt,N.data);else if(I.isFramebufferTexture){if(Rt)if(St)e.texStorage2D(s.TEXTURE_2D,Kt,mt,N.width,N.height);else{let Pt=N.width,Qt=N.height;for(let Se=0;Se<Kt;Se++)e.texImage2D(s.TEXTURE_2D,Se,mt,Pt,Qt,0,it,pt,null),Pt>>=1,Qt>>=1}}else if(_t.length>0&&Z){St&&Rt&&e.texStorage2D(s.TEXTURE_2D,Kt,mt,_t[0].width,_t[0].height);for(let Pt=0,Qt=_t.length;Pt<Qt;Pt++)nt=_t[Pt],St?e.texSubImage2D(s.TEXTURE_2D,Pt,0,0,it,pt,nt):e.texImage2D(s.TEXTURE_2D,Pt,mt,it,pt,nt);I.generateMipmaps=!1}else St?(Rt&&e.texStorage2D(s.TEXTURE_2D,Kt,mt,N.width,N.height),e.texSubImage2D(s.TEXTURE_2D,0,0,0,it,pt,N)):e.texImage2D(s.TEXTURE_2D,0,mt,it,pt,N);b(I,Z)&&v(at),Y.__version=L.version,I.onUpdate&&I.onUpdate(I)}O.__version=I.version}function Q(O,I,K,at,X){const L=r.convert(K.format,K.colorSpace),Y=r.convert(K.type),G=w(K.internalFormat,L,Y,K.colorSpace);n.get(I).__hasExternalTextures||(X===s.TEXTURE_3D||X===s.TEXTURE_2D_ARRAY?e.texImage3D(X,0,G,I.width,I.height,I.depth,0,L,Y,null):e.texImage2D(X,0,G,I.width,I.height,0,L,Y,null)),e.bindFramebuffer(s.FRAMEBUFFER,O),rt(I)?d.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,at,X,n.get(K).__webglTexture,0,ct(I)):(X===s.TEXTURE_2D||X>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&X<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,at,X,n.get(K).__webglTexture,0),e.bindFramebuffer(s.FRAMEBUFFER,null)}function j(O,I,K){if(s.bindRenderbuffer(s.RENDERBUFFER,O),I.depthBuffer&&!I.stencilBuffer){let at=s.DEPTH_COMPONENT16;if(K||rt(I)){const X=I.depthTexture;X&&X.isDepthTexture&&(X.type===bs?at=s.DEPTH_COMPONENT32F:X.type===ws&&(at=s.DEPTH_COMPONENT24));const L=ct(I);rt(I)?d.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,L,at,I.width,I.height):s.renderbufferStorageMultisample(s.RENDERBUFFER,L,at,I.width,I.height)}else s.renderbufferStorage(s.RENDERBUFFER,at,I.width,I.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,O)}else if(I.depthBuffer&&I.stencilBuffer){const at=ct(I);K&&rt(I)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,at,s.DEPTH24_STENCIL8,I.width,I.height):rt(I)?d.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,at,s.DEPTH24_STENCIL8,I.width,I.height):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,I.width,I.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,O)}else{const at=I.isWebGLMultipleRenderTargets===!0?I.texture:[I.texture];for(let X=0;X<at.length;X++){const L=at[X],Y=r.convert(L.format,L.colorSpace),G=r.convert(L.type),N=w(L.internalFormat,Y,G,L.colorSpace),Z=ct(I);K&&rt(I)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Z,N,I.width,I.height):rt(I)?d.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Z,N,I.width,I.height):s.renderbufferStorage(s.RENDERBUFFER,N,I.width,I.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function dt(O){const I=n.get(O),K=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!I.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");(function(at,X){if(X&&X.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,at),!X.depthTexture||!X.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(X.depthTexture).__webglTexture&&X.depthTexture.image.width===X.width&&X.depthTexture.image.height===X.height||(X.depthTexture.image.width=X.width,X.depthTexture.image.height=X.height,X.depthTexture.needsUpdate=!0),P(X.depthTexture,0);const L=n.get(X.depthTexture).__webglTexture,Y=ct(X);if(X.depthTexture.format===tr)rt(X)?d.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,L,0,Y):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,L,0);else{if(X.depthTexture.format!==Jr)throw new Error("Unknown depthTexture format");rt(X)?d.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,L,0,Y):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,L,0)}})(I.__webglFramebuffer,O)}else if(K){I.__webglDepthbuffer=[];for(let at=0;at<6;at++)e.bindFramebuffer(s.FRAMEBUFFER,I.__webglFramebuffer[at]),I.__webglDepthbuffer[at]=s.createRenderbuffer(),j(I.__webglDepthbuffer[at],O,!1)}else e.bindFramebuffer(s.FRAMEBUFFER,I.__webglFramebuffer),I.__webglDepthbuffer=s.createRenderbuffer(),j(I.__webglDepthbuffer,O,!1);e.bindFramebuffer(s.FRAMEBUFFER,null)}function ct(O){return Math.min(u,O.samples)}function rt(O){const I=n.get(O);return a&&O.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&I.__useRenderToTexture!==!1}function $(O,I){const K=O.colorSpace,at=O.format,X=O.type;return O.isCompressedTexture===!0||O.format===mu||K!==Ei&&K!==Sa&&(K===Nt&&a===!1&&(t.has("EXT_sRGB")===!0&&at===bi?(O.format=mu,O.minFilter=ti,O.generateMipmaps=!1):I=pf.sRGBToLinear(I))),I}this.allocateTextureUnit=function(){const O=R;return O>=l,R+=1,O},this.resetTextureUnits=function(){R=0},this.setTexture2D=P,this.setTexture2DArray=function(O,I){const K=n.get(O);if(O.version>0&&K.__version!==O.version)return W(K,O,I),void 0;e.bindTexture(s.TEXTURE_2D_ARRAY,K.__webglTexture,s.TEXTURE0+I)},this.setTexture3D=function(O,I){const K=n.get(O);if(O.version>0&&K.__version!==O.version)return W(K,O,I),void 0;e.bindTexture(s.TEXTURE_3D,K.__webglTexture,s.TEXTURE0+I)},this.setTextureCube=function(O,I){const K=n.get(O);if(O.version>0&&K.__version!==O.version)return function(at,X,L){if(X.image.length!==6)return;const Y=B(at,X),G=X.source;e.bindTexture(s.TEXTURE_CUBE_MAP,at.__webglTexture,s.TEXTURE0+L);const N=n.get(G);if(G.version!==N.__version||Y===!0){e.activeTexture(s.TEXTURE0+L),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,X.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,X.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,X.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const Z=X.isCompressedTexture||X.image[0].isCompressedTexture,it=X.image[0]&&X.image[0].isDataTexture,nt=[];for(let At=0;At<6;At++)nt[At]=Z||it?it?X.image[At].image:X.image[At]:y(X.image[At],!1,!0,c),nt[At]=$(X,nt[At]);const pt=nt[0],mt=A(pt)||a,_t=r.convert(X.format,X.colorSpace),St=r.convert(X.type),Rt=w(X.internalFormat,_t,St,X.colorSpace),Kt=a&&X.isVideoTexture!==!0,Pt=N.__version===void 0||Y===!0;let Qt,Se=M(X,pt,mt);if(q(s.TEXTURE_CUBE_MAP,X,mt),Z){Kt&&Pt&&e.texStorage2D(s.TEXTURE_CUBE_MAP,Se,Rt,pt.width,pt.height);for(let At=0;At<6;At++){Qt=nt[At].mipmaps;for(let Yt=0;Yt<Qt.length;Yt++){const Zt=Qt[Yt];X.format!==bi?_t!==null&&(Kt?e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,Yt,0,0,Zt.width,Zt.height,_t,Zt.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,Yt,Rt,Zt.width,Zt.height,0,Zt.data)):Kt?e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,Yt,0,0,Zt.width,Zt.height,_t,St,Zt.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,Yt,Rt,Zt.width,Zt.height,0,_t,St,Zt.data)}}}else{Qt=X.mipmaps,Kt&&Pt&&(Qt.length>0&&Se++,e.texStorage2D(s.TEXTURE_CUBE_MAP,Se,Rt,nt[0].width,nt[0].height));for(let At=0;At<6;At++)if(it){Kt?e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,0,0,0,nt[At].width,nt[At].height,_t,St,nt[At].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,0,Rt,nt[At].width,nt[At].height,0,_t,St,nt[At].data);for(let Yt=0;Yt<Qt.length;Yt++){const Zt=Qt[Yt].image[At].image;Kt?e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,Yt+1,0,0,Zt.width,Zt.height,_t,St,Zt.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,Yt+1,Rt,Zt.width,Zt.height,0,_t,St,Zt.data)}}else{Kt?e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,0,0,0,_t,St,nt[At]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,0,Rt,_t,St,nt[At]);for(let Yt=0;Yt<Qt.length;Yt++){const Zt=Qt[Yt];Kt?e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,Yt+1,0,0,_t,St,Zt.image[At]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+At,Yt+1,Rt,_t,St,Zt.image[At])}}}b(X,mt)&&v(s.TEXTURE_CUBE_MAP),N.__version=G.version,X.onUpdate&&X.onUpdate(X)}at.__version=X.version}(K,O,I),void 0;e.bindTexture(s.TEXTURE_CUBE_MAP,K.__webglTexture,s.TEXTURE0+I)},this.rebindTextures=function(O,I,K){const at=n.get(O);I!==void 0&&Q(at.__webglFramebuffer,O,O.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D),K!==void 0&&dt(O)},this.setupRenderTarget=function(O){const I=O.texture,K=n.get(O),at=n.get(I);O.addEventListener("dispose",E),O.isWebGLMultipleRenderTargets!==!0&&(at.__webglTexture===void 0&&(at.__webglTexture=s.createTexture()),at.__version=I.version,o.memory.textures++);const X=O.isWebGLCubeRenderTarget===!0,L=O.isWebGLMultipleRenderTargets===!0,Y=A(O)||a;if(X){K.__webglFramebuffer=[];for(let G=0;G<6;G++)K.__webglFramebuffer[G]=s.createFramebuffer()}else{if(K.__webglFramebuffer=s.createFramebuffer(),L&&i.drawBuffers){const G=O.texture;for(let N=0,Z=G.length;N<Z;N++){const it=n.get(G[N]);it.__webglTexture===void 0&&(it.__webglTexture=s.createTexture(),o.memory.textures++)}}if(a&&O.samples>0&&rt(O)===!1){const G=L?I:[I];K.__webglMultisampledFramebuffer=s.createFramebuffer(),K.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let N=0;N<G.length;N++){const Z=G[N];K.__webglColorRenderbuffer[N]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,K.__webglColorRenderbuffer[N]);const it=r.convert(Z.format,Z.colorSpace),nt=r.convert(Z.type),pt=w(Z.internalFormat,it,nt,Z.colorSpace,O.isXRRenderTarget===!0),mt=ct(O);s.renderbufferStorageMultisample(s.RENDERBUFFER,mt,pt,O.width,O.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+N,s.RENDERBUFFER,K.__webglColorRenderbuffer[N])}s.bindRenderbuffer(s.RENDERBUFFER,null),O.depthBuffer&&(K.__webglDepthRenderbuffer=s.createRenderbuffer(),j(K.__webglDepthRenderbuffer,O,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(X){e.bindTexture(s.TEXTURE_CUBE_MAP,at.__webglTexture),q(s.TEXTURE_CUBE_MAP,I,Y);for(let G=0;G<6;G++)Q(K.__webglFramebuffer[G],O,I,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+G);b(I,Y)&&v(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(L){const G=O.texture;for(let N=0,Z=G.length;N<Z;N++){const it=G[N],nt=n.get(it);e.bindTexture(s.TEXTURE_2D,nt.__webglTexture),q(s.TEXTURE_2D,it,Y),Q(K.__webglFramebuffer,O,it,s.COLOR_ATTACHMENT0+N,s.TEXTURE_2D),b(it,Y)&&v(s.TEXTURE_2D)}e.unbindTexture()}else{let G=s.TEXTURE_2D;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(a&&(G=O.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY)),e.bindTexture(G,at.__webglTexture),q(G,I,Y),Q(K.__webglFramebuffer,O,I,s.COLOR_ATTACHMENT0,G),b(I,Y)&&v(G),e.unbindTexture()}O.depthBuffer&&dt(O)},this.updateRenderTargetMipmap=function(O){const I=A(O)||a,K=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let at=0,X=K.length;at<X;at++){const L=K[at];if(b(L,I)){const Y=O.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D,G=n.get(L).__webglTexture;e.bindTexture(Y,G),v(Y),e.unbindTexture()}}},this.updateMultisampleRenderTarget=function(O){if(a&&O.samples>0&&rt(O)===!1){const I=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],K=O.width,at=O.height;let X=s.COLOR_BUFFER_BIT;const L=[],Y=O.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,G=n.get(O),N=O.isWebGLMultipleRenderTargets===!0;if(N)for(let Z=0;Z<I.length;Z++)e.bindFramebuffer(s.FRAMEBUFFER,G.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Z,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,G.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Z,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,G.__webglMultisampledFramebuffer),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,G.__webglFramebuffer);for(let Z=0;Z<I.length;Z++){L.push(s.COLOR_ATTACHMENT0+Z),O.depthBuffer&&L.push(Y);const it=G.__ignoreDepthValues!==void 0&&G.__ignoreDepthValues;if(it===!1&&(O.depthBuffer&&(X|=s.DEPTH_BUFFER_BIT),O.stencilBuffer&&(X|=s.STENCIL_BUFFER_BIT)),N&&s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,G.__webglColorRenderbuffer[Z]),it===!0&&(s.invalidateFramebuffer(s.READ_FRAMEBUFFER,[Y]),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[Y])),N){const nt=n.get(I[Z]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,nt,0)}s.blitFramebuffer(0,0,K,at,0,0,K,at,X,s.NEAREST),p&&s.invalidateFramebuffer(s.READ_FRAMEBUFFER,L)}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),N)for(let Z=0;Z<I.length;Z++){e.bindFramebuffer(s.FRAMEBUFFER,G.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Z,s.RENDERBUFFER,G.__webglColorRenderbuffer[Z]);const it=n.get(I[Z]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,G.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Z,s.TEXTURE_2D,it,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,G.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=dt,this.setupFrameBufferTexture=Q,this.useMultisampledRTT=rt}function V0(s,t,e){const n=e.isWebGL2;return{convert:function(i,r=""){let o;if(i===Qs)return s.UNSIGNED_BYTE;if(i===1017)return s.UNSIGNED_SHORT_4_4_4_4;if(i===1018)return s.UNSIGNED_SHORT_5_5_5_1;if(i===1010)return s.BYTE;if(i===1011)return s.SHORT;if(i===Hu)return s.UNSIGNED_SHORT;if(i===hf)return s.INT;if(i===ws)return s.UNSIGNED_INT;if(i===bs)return s.FLOAT;if(i===ba)return n?s.HALF_FLOAT:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(i===1021)return s.ALPHA;if(i===bi)return s.RGBA;if(i===1024)return s.LUMINANCE;if(i===1025)return s.LUMINANCE_ALPHA;if(i===tr)return s.DEPTH_COMPONENT;if(i===Jr)return s.DEPTH_STENCIL;if(i===mu)return o=t.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(i===1028)return s.RED;if(i===1029)return s.RED_INTEGER;if(i===1030)return s.RG;if(i===1031)return s.RG_INTEGER;if(i===1033)return s.RGBA_INTEGER;if(i===Ah||i===Ch||i===Rh||i===Dh)if(r===Nt){if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o===null)return null;if(i===Ah)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Ch)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===Rh)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===Dh)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(o=t.get("WEBGL_compressed_texture_s3tc"),o===null)return null;if(i===Ah)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Ch)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Rh)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Dh)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(i===35840||i===35841||i===35842||i===35843){if(o=t.get("WEBGL_compressed_texture_pvrtc"),o===null)return null;if(i===35840)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===35841)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===35842)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===35843)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===36196)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===37492||i===37496){if(o=t.get("WEBGL_compressed_texture_etc"),o===null)return null;if(i===37492)return r===Nt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(i===37496)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}if(i===37808||i===37809||i===37810||i===37811||i===37812||i===37813||i===37814||i===37815||i===37816||i===37817||i===37818||i===37819||i===37820||i===37821){if(o=t.get("WEBGL_compressed_texture_astc"),o===null)return null;if(i===37808)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===37809)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===37810)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===37811)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===37812)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===37813)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===37814)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===37815)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===37816)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===37817)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===37818)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===37819)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===37820)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===37821)return r===Nt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===Ph){if(o=t.get("EXT_texture_compression_bptc"),o===null)return null;if(i===Ph)return r===Nt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(i===36283||i===36284||i===36285||i===36286){if(o=t.get("EXT_texture_compression_rgtc"),o===null)return null;if(i===Ph)return o.COMPRESSED_RED_RGTC1_EXT;if(i===36284)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===36285)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===36286)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return i===Js?n?s.UNSIGNED_INT_24_8:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):s[i]!==void 0?s[i]:null}}}class q0 extends kn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class _e extends we{constructor(){super(),this.isGroup=!0,this.type="Group"}}const W0={type:"move"};class Jh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new _e,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new _e,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new H,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new H),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new _e,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new H,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new H),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const g of t.hand.values()){const m=e.getJointPose(g,n),x=this._getHandJoint(c,g);m!==null&&(x.matrix.fromArray(m.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.matrixWorldNeedsUpdate=!0,x.jointRadius=m.radius),x.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),p=.02,f=.005;c.inputState.pinching&&d>p+f?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=p-f&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(W0)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new _e;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class G0 extends yn{constructor(t,e,n,i,r,o,a,l,c,h){if((h=h!==void 0?h:tr)!==tr&&h!==Jr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===tr&&(n=ws),n===void 0&&h===Jr&&(n=Js),super(null,i,r,o,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:rn,this.minFilter=l!==void 0?l:rn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class H0 extends Lo{constructor(t,e){super();const n=this;let i=null,r=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,p=null,f=null;const g=e.getContextAttributes();let m=null,x=null;const _=[],y=[];let A=null;const b=new kn;b.layers.enable(1),b.viewport=new We;const v=new kn;v.layers.enable(2),v.viewport=new We;const w=[b,v],M=new q0;M.layers.enable(1),M.layers.enable(2);let C=null,T=null;function E(B){const W=y.indexOf(B.inputSource);if(W===-1)return;const Q=_[W];Q!==void 0&&(Q.update(B.inputSource,B.frame,c||o),Q.dispatchEvent({type:B.type,data:B.inputSource}))}function D(){i.removeEventListener("select",E),i.removeEventListener("selectstart",E),i.removeEventListener("selectend",E),i.removeEventListener("squeeze",E),i.removeEventListener("squeezestart",E),i.removeEventListener("squeezeend",E),i.removeEventListener("end",D),i.removeEventListener("inputsourceschange",R);for(let B=0;B<_.length;B++){const W=y[B];W!==null&&(y[B]=null,_[B].disconnect(W))}C=null,T=null,t.setRenderTarget(m),p=null,d=null,u=null,i=null,x=null,q.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function R(B){for(let W=0;W<B.removed.length;W++){const Q=B.removed[W],j=y.indexOf(Q);j>=0&&(y[j]=null,_[j].disconnect(Q))}for(let W=0;W<B.added.length;W++){const Q=B.added[W];let j=y.indexOf(Q);if(j===-1){for(let ct=0;ct<_.length;ct++){if(ct>=y.length){y.push(Q),j=ct;break}if(y[ct]===null){y[ct]=Q,j=ct;break}}if(j===-1)break}const dt=_[j];dt&&dt.connect(Q)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getCamera=function(){},this.setUserCamera=function(B){A=B},this.getController=function(B){let W=_[B];return W===void 0&&(W=new Jh,_[B]=W),W.getTargetRaySpace()},this.getControllerGrip=function(B){let W=_[B];return W===void 0&&(W=new Jh,_[B]=W),W.getGripSpace()},this.getHand=function(B){let W=_[B];return W===void 0&&(W=new Jh,_[B]=W),W.getHandSpace()},this.setFramebufferScaleFactor=function(B){r=B,n.isPresenting},this.setReferenceSpaceType=function(B){a=B,n.isPresenting},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(B){c=B},this.getBaseLayer=function(){return d!==null?d:p},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=async function(B){if(i=B,i!==null){if(m=t.getRenderTarget(),i.addEventListener("select",E),i.addEventListener("selectstart",E),i.addEventListener("selectend",E),i.addEventListener("squeeze",E),i.addEventListener("squeezestart",E),i.addEventListener("squeezeend",E),i.addEventListener("end",D),i.addEventListener("inputsourceschange",R),g.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const W={antialias:i.renderState.layers!==void 0||g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:r};p=new XRWebGLLayer(i,e,W),i.updateRenderState({baseLayer:p}),x=new sr(p.framebufferWidth,p.framebufferHeight,{format:bi,type:Qs,colorSpace:t.outputColorSpace,stencilBuffer:g.stencil})}else{let W=null,Q=null,j=null;g.depth&&(j=g.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,W=g.stencil?Jr:tr,Q=g.stencil?Js:ws);const dt={colorFormat:e.RGBA8,depthFormat:j,scaleFactor:r};u=new XRWebGLBinding(i,e),d=u.createProjectionLayer(dt),i.updateRenderState({layers:[d]}),x=new sr(d.textureWidth,d.textureHeight,{format:bi,type:Qs,depthTexture:new G0(d.textureWidth,d.textureHeight,Q,void 0,void 0,void 0,void 0,void 0,void 0,W),stencilBuffer:g.stencil,colorSpace:t.outputColorSpace,samples:g.antialias?4:0}),t.properties.get(x).__ignoreDepthValues=d.ignoreDepthValues}x.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await i.requestReferenceSpace(a),q.setContext(i),q.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};const P=new H,k=new H;function F(B,W){W===null?B.matrixWorld.copy(B.matrix):B.matrixWorld.multiplyMatrices(W.matrixWorld,B.matrix),B.matrixWorldInverse.copy(B.matrixWorld).invert()}this.updateCameraXR=function(B){if(i===null)return B;A&&(B=A),M.near=v.near=b.near=B.near,M.far=v.far=b.far=B.far,C===M.near&&T===M.far||(i.updateRenderState({depthNear:M.near,depthFar:M.far}),C=M.near,T=M.far);const W=B.parent,Q=M.cameras;F(M,W);for(let j=0;j<Q.length;j++)F(Q[j],W);return Q.length===2?function(j,dt,ct){P.setFromMatrixPosition(dt.matrixWorld),k.setFromMatrixPosition(ct.matrixWorld);const rt=P.distanceTo(k),$=dt.projectionMatrix.elements,O=ct.projectionMatrix.elements,I=$[14]/($[10]-1),K=$[14]/($[10]+1),at=($[9]+1)/$[5],X=($[9]-1)/$[5],L=($[8]-1)/$[0],Y=(O[8]+1)/O[0],G=I*L,N=I*Y,Z=rt/(-L+Y),it=Z*-L;dt.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(it),j.translateZ(Z),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const nt=I+Z,pt=K+Z,mt=G-it,_t=N+(rt-it),St=at*K/pt*nt,Rt=X*K/pt*nt;j.projectionMatrix.makePerspective(mt,_t,St,Rt,nt,pt),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}(M,b,v):M.projectionMatrix.copy(b.projectionMatrix),A&&function(j,dt){const ct=A;dt===null?ct.matrix.copy(j.matrixWorld):(ct.matrix.copy(dt.matrixWorld),ct.matrix.invert(),ct.matrix.multiply(j.matrixWorld)),ct.matrix.decompose(ct.position,ct.quaternion,ct.scale),ct.updateMatrixWorld(!0);const rt=ct.children;for(let $=0,O=rt.length;$<O;$++)rt[$].updateMatrixWorld(!0);ct.projectionMatrix.copy(j.projectionMatrix),ct.projectionMatrixInverse.copy(j.projectionMatrixInverse),ct.isPerspectiveCamera&&(ct.fov=2*Ma*Math.atan(1/ct.projectionMatrix.elements[5]),ct.zoom=1)}(M,W),M},this.getFoveation=function(){if(d!==null||p!==null)return l},this.setFoveation=function(B){l=B,d!==null&&(d.fixedFoveation=B),p!==null&&p.fixedFoveation!==void 0&&(p.fixedFoveation=B)};let z=null;const q=new Mf;q.setAnimationLoop(function(B,W){if(h=W.getViewerPose(c||o),f=W,h!==null){const Q=h.views;p!==null&&(t.setRenderTargetFramebuffer(x,p.framebuffer),t.setRenderTarget(x));let j=!1;Q.length!==M.cameras.length&&(M.cameras.length=0,j=!0);for(let dt=0;dt<Q.length;dt++){const ct=Q[dt];let rt=null;if(p!==null)rt=p.getViewport(ct);else{const O=u.getViewSubImage(d,ct);rt=O.viewport,dt===0&&(t.setRenderTargetTextures(x,O.colorTexture,d.ignoreDepthValues?void 0:O.depthStencilTexture),t.setRenderTarget(x))}let $=w[dt];$===void 0&&($=new kn,$.layers.enable(dt),$.viewport=new We,w[dt]=$),$.matrix.fromArray(ct.transform.matrix),$.matrix.decompose($.position,$.quaternion,$.scale),$.projectionMatrix.fromArray(ct.projectionMatrix),$.projectionMatrixInverse.copy($.projectionMatrix).invert(),$.viewport.set(rt.x,rt.y,rt.width,rt.height),dt===0&&(M.matrix.copy($.matrix),M.matrix.decompose(M.position,M.quaternion,M.scale)),j===!0&&M.cameras.push($)}}for(let Q=0;Q<_.length;Q++){const j=y[Q],dt=_[Q];j!==null&&dt!==void 0&&dt.update(j,W,c||o)}z&&z(B,W),W.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:W}),f=null}),this.setAnimationLoop=function(B){z=B},this.dispose=function(){}}}function j0(s,t){function e(i,r){i.matrixAutoUpdate===!0&&i.updateMatrix(),r.value.copy(i.matrix)}function n(i,r){i.opacity.value=r.opacity,r.color&&i.diffuse.value.copy(r.color),r.emissive&&i.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(i.map.value=r.map,e(r.map,i.mapTransform)),r.alphaMap&&(i.alphaMap.value=r.alphaMap,e(r.alphaMap,i.alphaMapTransform)),r.bumpMap&&(i.bumpMap.value=r.bumpMap,e(r.bumpMap,i.bumpMapTransform),i.bumpScale.value=r.bumpScale,r.side===1&&(i.bumpScale.value*=-1)),r.normalMap&&(i.normalMap.value=r.normalMap,e(r.normalMap,i.normalMapTransform),i.normalScale.value.copy(r.normalScale),r.side===1&&i.normalScale.value.negate()),r.displacementMap&&(i.displacementMap.value=r.displacementMap,e(r.displacementMap,i.displacementMapTransform),i.displacementScale.value=r.displacementScale,i.displacementBias.value=r.displacementBias),r.emissiveMap&&(i.emissiveMap.value=r.emissiveMap,e(r.emissiveMap,i.emissiveMapTransform)),r.specularMap&&(i.specularMap.value=r.specularMap,e(r.specularMap,i.specularMapTransform)),r.alphaTest>0&&(i.alphaTest.value=r.alphaTest);const o=t.get(r).envMap;if(o&&(i.envMap.value=o,i.flipEnvMap.value=o.isCubeTexture&&o.isRenderTargetTexture===!1?-1:1,i.reflectivity.value=r.reflectivity,i.ior.value=r.ior,i.refractionRatio.value=r.refractionRatio),r.lightMap){i.lightMap.value=r.lightMap;const a=s.useLegacyLights===!0?Math.PI:1;i.lightMapIntensity.value=r.lightMapIntensity*a,e(r.lightMap,i.lightMapTransform)}r.aoMap&&(i.aoMap.value=r.aoMap,i.aoMapIntensity.value=r.aoMapIntensity,e(r.aoMap,i.aoMapTransform))}return{refreshFogUniforms:function(i,r){r.color.getRGB(i.fogColor.value,wf(s)),r.isFog?(i.fogNear.value=r.near,i.fogFar.value=r.far):r.isFogExp2&&(i.fogDensity.value=r.density)},refreshMaterialUniforms:function(i,r,o,a,l){r.isMeshBasicMaterial||r.isMeshLambertMaterial?n(i,r):r.isMeshToonMaterial?(n(i,r),function(c,h){h.gradientMap&&(c.gradientMap.value=h.gradientMap)}(i,r)):r.isMeshPhongMaterial?(n(i,r),function(c,h){c.specular.value.copy(h.specular),c.shininess.value=Math.max(h.shininess,1e-4)}(i,r)):r.isMeshStandardMaterial?(n(i,r),function(c,h){c.metalness.value=h.metalness,h.metalnessMap&&(c.metalnessMap.value=h.metalnessMap,e(h.metalnessMap,c.metalnessMapTransform)),c.roughness.value=h.roughness,h.roughnessMap&&(c.roughnessMap.value=h.roughnessMap,e(h.roughnessMap,c.roughnessMapTransform)),t.get(h).envMap&&(c.envMapIntensity.value=h.envMapIntensity)}(i,r),r.isMeshPhysicalMaterial&&function(c,h,u){c.ior.value=h.ior,h.sheen>0&&(c.sheenColor.value.copy(h.sheenColor).multiplyScalar(h.sheen),c.sheenRoughness.value=h.sheenRoughness,h.sheenColorMap&&(c.sheenColorMap.value=h.sheenColorMap,e(h.sheenColorMap,c.sheenColorMapTransform)),h.sheenRoughnessMap&&(c.sheenRoughnessMap.value=h.sheenRoughnessMap,e(h.sheenRoughnessMap,c.sheenRoughnessMapTransform))),h.clearcoat>0&&(c.clearcoat.value=h.clearcoat,c.clearcoatRoughness.value=h.clearcoatRoughness,h.clearcoatMap&&(c.clearcoatMap.value=h.clearcoatMap,e(h.clearcoatMap,c.clearcoatMapTransform)),h.clearcoatRoughnessMap&&(c.clearcoatRoughnessMap.value=h.clearcoatRoughnessMap,e(h.clearcoatRoughnessMap,c.clearcoatRoughnessMapTransform)),h.clearcoatNormalMap&&(c.clearcoatNormalMap.value=h.clearcoatNormalMap,e(h.clearcoatNormalMap,c.clearcoatNormalMapTransform),c.clearcoatNormalScale.value.copy(h.clearcoatNormalScale),h.side===1&&c.clearcoatNormalScale.value.negate())),h.iridescence>0&&(c.iridescence.value=h.iridescence,c.iridescenceIOR.value=h.iridescenceIOR,c.iridescenceThicknessMinimum.value=h.iridescenceThicknessRange[0],c.iridescenceThicknessMaximum.value=h.iridescenceThicknessRange[1],h.iridescenceMap&&(c.iridescenceMap.value=h.iridescenceMap,e(h.iridescenceMap,c.iridescenceMapTransform)),h.iridescenceThicknessMap&&(c.iridescenceThicknessMap.value=h.iridescenceThicknessMap,e(h.iridescenceThicknessMap,c.iridescenceThicknessMapTransform))),h.transmission>0&&(c.transmission.value=h.transmission,c.transmissionSamplerMap.value=u.texture,c.transmissionSamplerSize.value.set(u.width,u.height),h.transmissionMap&&(c.transmissionMap.value=h.transmissionMap,e(h.transmissionMap,c.transmissionMapTransform)),c.thickness.value=h.thickness,h.thicknessMap&&(c.thicknessMap.value=h.thicknessMap,e(h.thicknessMap,c.thicknessMapTransform)),c.attenuationDistance.value=h.attenuationDistance,c.attenuationColor.value.copy(h.attenuationColor)),h.anisotropy>0&&(c.anisotropyVector.value.set(h.anisotropy*Math.cos(h.anisotropyRotation),h.anisotropy*Math.sin(h.anisotropyRotation)),h.anisotropyMap&&(c.anisotropyMap.value=h.anisotropyMap,e(h.anisotropyMap,c.anisotropyMapTransform))),c.specularIntensity.value=h.specularIntensity,c.specularColor.value.copy(h.specularColor),h.specularColorMap&&(c.specularColorMap.value=h.specularColorMap,e(h.specularColorMap,c.specularColorMapTransform)),h.specularIntensityMap&&(c.specularIntensityMap.value=h.specularIntensityMap,e(h.specularIntensityMap,c.specularIntensityMapTransform))}(i,r,l)):r.isMeshMatcapMaterial?(n(i,r),function(c,h){h.matcap&&(c.matcap.value=h.matcap)}(i,r)):r.isMeshDepthMaterial?n(i,r):r.isMeshDistanceMaterial?(n(i,r),function(c,h){const u=t.get(h).light;c.referencePosition.value.setFromMatrixPosition(u.matrixWorld),c.nearDistance.value=u.shadow.camera.near,c.farDistance.value=u.shadow.camera.far}(i,r)):r.isMeshNormalMaterial?n(i,r):r.isLineBasicMaterial?(function(c,h){c.diffuse.value.copy(h.color),c.opacity.value=h.opacity,h.map&&(c.map.value=h.map,e(h.map,c.mapTransform))}(i,r),r.isLineDashedMaterial&&function(c,h){c.dashSize.value=h.dashSize,c.totalSize.value=h.dashSize+h.gapSize,c.scale.value=h.scale}(i,r)):r.isPointsMaterial?function(c,h,u,d){c.diffuse.value.copy(h.color),c.opacity.value=h.opacity,c.size.value=h.size*u,c.scale.value=.5*d,h.map&&(c.map.value=h.map,e(h.map,c.uvTransform)),h.alphaMap&&(c.alphaMap.value=h.alphaMap,e(h.alphaMap,c.alphaMapTransform)),h.alphaTest>0&&(c.alphaTest.value=h.alphaTest)}(i,r,o,a):r.isSpriteMaterial?function(c,h){c.diffuse.value.copy(h.color),c.opacity.value=h.opacity,c.rotation.value=h.rotation,h.map&&(c.map.value=h.map,e(h.map,c.mapTransform)),h.alphaMap&&(c.alphaMap.value=h.alphaMap,e(h.alphaMap,c.alphaMapTransform)),h.alphaTest>0&&(c.alphaTest.value=h.alphaTest)}(i,r):r.isShadowMaterial?(i.color.value.copy(r.color),i.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function X0(s,t,e,n){let i={},r={},o=[];const a=e.isWebGL2?s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(u,d,p){const f=u.value;if(p[d]===void 0){if(typeof f=="number")p[d]=f;else{const g=Array.isArray(f)?f:[f],m=[];for(let x=0;x<g.length;x++)m.push(g[x].clone());p[d]=m}return!0}if(typeof f=="number"){if(p[d]!==f)return p[d]=f,!0}else{const g=Array.isArray(p[d])?p[d]:[p[d]],m=Array.isArray(f)?f:[f];for(let x=0;x<g.length;x++){const _=g[x];if(_.equals(m[x])===!1)return _.copy(m[x]),!0}}return!1}function c(u){const d={boundary:0,storage:0};return typeof u=="number"?(d.boundary=4,d.storage=4):u.isVector2?(d.boundary=8,d.storage=8):u.isVector3||u.isColor?(d.boundary=16,d.storage=12):u.isVector4?(d.boundary=16,d.storage=16):u.isMatrix3?(d.boundary=48,d.storage=48):u.isMatrix4?(d.boundary=64,d.storage=64):u.isTexture,d}function h(u){const d=u.target;d.removeEventListener("dispose",h);const p=o.indexOf(d.__bindingPointIndex);o.splice(p,1),s.deleteBuffer(i[d.id]),delete i[d.id],delete r[d.id]}return{bind:function(u,d){const p=d.program;n.uniformBlockBinding(u,p)},update:function(u,d){let p=i[u.id];p===void 0&&(function(m){const x=m.uniforms;let _=0;const y=16;let A=0;for(let b=0,v=x.length;b<v;b++){const w=x[b],M={boundary:0,storage:0},C=Array.isArray(w.value)?w.value:[w.value];for(let T=0,E=C.length;T<E;T++){const D=c(C[T]);M.boundary+=D.boundary,M.storage+=D.storage}w.__data=new Float32Array(M.storage/Float32Array.BYTES_PER_ELEMENT),w.__offset=_,b>0&&(A=_%y,A!==0&&y-A-M.boundary<0&&(_+=y-A,w.__offset=_)),_+=M.storage}return A=_%y,A>0&&(_+=y-A),m.__size=_,m.__cache={},this}(u),p=function(m){const x=function(){for(let b=0;b<a;b++)if(o.indexOf(b)===-1)return o.push(b),b;return 0}();m.__bindingPointIndex=x;const _=s.createBuffer(),y=m.__size,A=m.usage;return s.bindBuffer(s.UNIFORM_BUFFER,_),s.bufferData(s.UNIFORM_BUFFER,y,A),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,x,_),_}(u),i[u.id]=p,u.addEventListener("dispose",h));const f=d.program;n.updateUBOMapping(u,f);const g=t.render.frame;r[u.id]!==g&&(function(m){const x=i[m.id],_=m.uniforms,y=m.__cache;s.bindBuffer(s.UNIFORM_BUFFER,x);for(let A=0,b=_.length;A<b;A++){const v=_[A];if(l(v,A,y)===!0){const w=v.__offset,M=Array.isArray(v.value)?v.value:[v.value];let C=0;for(let T=0;T<M.length;T++){const E=M[T],D=c(E);typeof E=="number"?(v.__data[0]=E,s.bufferSubData(s.UNIFORM_BUFFER,w+C,v.__data)):E.isMatrix3?(v.__data[0]=E.elements[0],v.__data[1]=E.elements[1],v.__data[2]=E.elements[2],v.__data[3]=E.elements[0],v.__data[4]=E.elements[3],v.__data[5]=E.elements[4],v.__data[6]=E.elements[5],v.__data[7]=E.elements[0],v.__data[8]=E.elements[6],v.__data[9]=E.elements[7],v.__data[10]=E.elements[8],v.__data[11]=E.elements[0]):(E.toArray(v.__data,C),C+=D.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,w,v.__data)}}s.bindBuffer(s.UNIFORM_BUFFER,null)}(u),r[u.id]=g)},dispose:function(){for(const u in i)s.deleteBuffer(i[u]);o=[],i={},r={}}}}function Y0(){const s=$l("canvas");return s.style.display="block",s}class Df{constructor(t={}){const{canvas:e=Y0(),context:n=null,depth:i=!0,stencil:r=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=t;let d;this.isWebGLRenderer=!0,d=n!==null?n.getContextAttributes().alpha:o;const p=new Uint32Array(4),f=new Int32Array(4);let g=null,m=null;const x=[],_=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=Nt,this.useLegacyLights=!0,this.toneMapping=0,this.toneMappingExposure=1;const y=this;let A=!1,b=0,v=0,w=null,M=-1,C=null;const T=new We,E=new We;let D=null;const R=new Vt(0);let P=0,k=e.width,F=e.height,z=1,q=null,B=null;const W=new We(0,0,k,F),Q=new We(0,0,k,F);let j=!1;const dt=new ah;let ct=!1,rt=!1,$=null;const O=new xe,I=new Xt,K=new H,at={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return w===null?z:1}let L,Y,G,N,Z,it,nt,pt,mt,_t,St,Rt,Kt,Pt,Qt,Se,At,Yt,Zt,ja,Os,Fn,Oi,wr,J=n;function Ud(U,tt){for(let ot=0;ot<U.length;ot++){const st=U[ot],ht=e.getContext(st,tt);if(ht!==null)return ht}return null}try{const U={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r153"),e.addEventListener("webglcontextlost",Bd,!1),e.addEventListener("webglcontextrestored",Vd,!1),e.addEventListener("webglcontextcreationerror",qd,!1),J===null){const tt=["webgl2","webgl","experimental-webgl"];if(y.isWebGL1Renderer===!0&&tt.shift(),J=Ud(tt,U),J===null)throw Ud(tt)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}J instanceof WebGLRenderingContext,J.getShaderPrecisionFormat===void 0&&(J.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(U){throw U}function zd(){L=new xv(J),Y=new gv(J,L,t),L.init(Y),Fn=new V0(J,L,Y),G=new z0(J,L,Y),N=new Sv(J),Z=new C0,it=new B0(J,L,G,Z,Y,Fn,N),nt=new vv(y),pt=new yv(y),mt=new dv(J,Y),Oi=new mv(J,L,mt,Y),_t=new wv(J,mt,N,Oi),St=new Av(J,_t,mt,N),Zt=new Ev(J,Y,it),Se=new _v(Z),Rt=new A0(y,nt,pt,L,Y,Oi,Se),Kt=new j0(y,Z),Pt=new D0,Qt=new F0(L,Y),Yt=new pv(y,nt,pt,G,St,d,l),At=new U0(y,St,Y),wr=new X0(J,N,Y,G),ja=new fv(J,L,N,Y),Os=new bv(J,L,N,Y),N.programs=Rt.programs,y.capabilities=Y,y.extensions=L,y.properties=Z,y.renderLists=Pt,y.shadowMap=At,y.state=G,y.info=N}zd();const jn=new H0(y,J);function Bd(U){U.preventDefault(),A=!0}function Vd(){A=!1;const U=N.autoReset,tt=At.enabled,ot=At.autoUpdate,st=At.needsUpdate,ht=At.type;zd(),N.autoReset=U,At.enabled=tt,At.autoUpdate=ot,At.needsUpdate=st,At.type=ht}function qd(U){}function Wd(U){const tt=U.target;tt.removeEventListener("dispose",Wd),function(ot){(function(st){const ht=Z.get(st).programs;ht!==void 0&&(ht.forEach(function(yt){Rt.releaseProgram(yt)}),st.isShaderMaterial&&Rt.releaseShaderCache(st))})(ot),Z.remove(ot)}(tt)}this.xr=jn,this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){const U=L.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=L.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(U){U!==void 0&&(z=U,this.setSize(k,F,!1))},this.getSize=function(U){return U.set(k,F)},this.setSize=function(U,tt,ot=!0){jn.isPresenting||(k=U,F=tt,e.width=Math.floor(U*z),e.height=Math.floor(tt*z),ot===!0&&(e.style.width=U+"px",e.style.height=tt+"px"),this.setViewport(0,0,U,tt))},this.getDrawingBufferSize=function(U){return U.set(k*z,F*z).floor()},this.setDrawingBufferSize=function(U,tt,ot){k=U,F=tt,z=ot,e.width=Math.floor(U*ot),e.height=Math.floor(tt*ot),this.setViewport(0,0,U,tt)},this.getCurrentViewport=function(U){return U.copy(T)},this.getViewport=function(U){return U.copy(W)},this.setViewport=function(U,tt,ot,st){U.isVector4?W.set(U.x,U.y,U.z,U.w):W.set(U,tt,ot,st),G.viewport(T.copy(W).multiplyScalar(z).floor())},this.getScissor=function(U){return U.copy(Q)},this.setScissor=function(U,tt,ot,st){U.isVector4?Q.set(U.x,U.y,U.z,U.w):Q.set(U,tt,ot,st),G.scissor(E.copy(Q).multiplyScalar(z).floor())},this.getScissorTest=function(){return j},this.setScissorTest=function(U){G.setScissorTest(j=U)},this.setOpaqueSort=function(U){q=U},this.setTransparentSort=function(U){B=U},this.getClearColor=function(U){return U.copy(Yt.getClearColor())},this.setClearColor=function(){Yt.setClearColor.apply(Yt,arguments)},this.getClearAlpha=function(){return Yt.getClearAlpha()},this.setClearAlpha=function(){Yt.setClearAlpha.apply(Yt,arguments)},this.clear=function(U=!0,tt=!0,ot=!0){let st=0;if(U){let ht=!1;if(w!==null){const yt=w.texture.format;ht=yt===1033||yt===1031||yt===1029}if(ht){const yt=w.texture.type,Ft=yt===Qs||yt===ws||yt===Hu||yt===Js||yt===1017||yt===1018,Ot=Yt.getClearColor(),qt=Yt.getClearAlpha(),$t=Ot.r,Wt=Ot.g,zt=Ot.b,Pe=Z.get(w).__webglFramebuffer;Ft?(p[0]=$t,p[1]=Wt,p[2]=zt,p[3]=qt,J.clearBufferuiv(J.COLOR,Pe,p)):(f[0]=$t,f[1]=Wt,f[2]=zt,f[3]=qt,J.clearBufferiv(J.COLOR,Pe,f))}else st|=J.COLOR_BUFFER_BIT}tt&&(st|=J.DEPTH_BUFFER_BIT),ot&&(st|=J.STENCIL_BUFFER_BIT),J.clear(st)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Bd,!1),e.removeEventListener("webglcontextrestored",Vd,!1),e.removeEventListener("webglcontextcreationerror",qd,!1),Pt.dispose(),Qt.dispose(),Z.dispose(),nt.dispose(),pt.dispose(),St.dispose(),Oi.dispose(),wr.dispose(),Rt.dispose(),jn.dispose(),jn.removeEventListener("sessionstart",Gd),jn.removeEventListener("sessionend",Hd),$&&($.dispose(),$=null),Fs.stop()},this.renderBufferDirect=function(U,tt,ot,st,ht,yt){tt===null&&(tt=at);const Ft=ht.isMesh&&ht.matrixWorld.determinant()<0,Ot=function(ge,fi,Sn,Ct,Ae){fi.isScene!==!0&&(fi=at),it.resetTextureUnits();const $o=fi.fog,c_=Ct.isMeshStandardMaterial?fi.environment:null,h_=w===null?y.outputColorSpace:w.isXRRenderTarget===!0?w.texture.colorSpace:Ei,$a=(Ct.isMeshStandardMaterial?pt:nt).get(Ct.envMap||c_),u_=Ct.vertexColors===!0&&!!Sn.attributes.color&&Sn.attributes.color.itemSize===4,d_=!!Sn.attributes.tangent&&(!!Ct.normalMap||Ct.anisotropy>0),p_=!!Sn.morphAttributes.position,m_=!!Sn.morphAttributes.normal,f_=!!Sn.morphAttributes.color,g_=Ct.toneMapped?y.toneMapping:0,Zd=Sn.morphAttributes.position||Sn.morphAttributes.normal||Sn.morphAttributes.color,__=Zd!==void 0?Zd.length:0,Jt=Z.get(Ct),v_=m.state.lights;if(ct===!0&&(rt===!0||ge!==C)){const Mn=ge===C&&Ct.id===M;Se.setState(Ct,ge,Mn)}let Fi=!1;Ct.version===Jt.__version?Jt.needsLights&&Jt.lightsStateVersion!==v_.state.version||Jt.outputColorSpace!==h_||Ae.isInstancedMesh&&Jt.instancing===!1?Fi=!0:Ae.isInstancedMesh||Jt.instancing!==!0?Ae.isSkinnedMesh&&Jt.skinning===!1?Fi=!0:Ae.isSkinnedMesh||Jt.skinning!==!0?Jt.envMap!==$a||Ct.fog===!0&&Jt.fog!==$o?Fi=!0:Jt.numClippingPlanes===void 0||Jt.numClippingPlanes===Se.numPlanes&&Jt.numIntersection===Se.numIntersection?(Jt.vertexAlphas!==u_||Jt.vertexTangents!==d_||Jt.morphTargets!==p_||Jt.morphNormals!==m_||Jt.morphColors!==f_||Jt.toneMapping!==g_||Y.isWebGL2===!0&&Jt.morphTargetsCount!==__)&&(Fi=!0):Fi=!0:Fi=!0:Fi=!0:(Fi=!0,Jt.__version=Ct.version);let Ns=Jt.currentProgram;Fi===!0&&(Ns=Ya(Ct,fi,Ae));let Kd=!1,Zo=!1,Sh=!1;const nn=Ns.getUniforms(),ks=Jt.uniforms;if(G.useProgram(Ns.program)&&(Kd=!0,Zo=!0,Sh=!0),Ct.id!==M&&(M=Ct.id,Zo=!0),Kd||C!==ge){if(nn.setValue(J,"projectionMatrix",ge.projectionMatrix),Y.logarithmicDepthBuffer&&nn.setValue(J,"logDepthBufFC",2/(Math.log(ge.far+1)/Math.LN2)),C!==ge&&(C=ge,Zo=!0,Sh=!0),Ct.isShaderMaterial||Ct.isMeshPhongMaterial||Ct.isMeshToonMaterial||Ct.isMeshStandardMaterial||Ct.envMap){const Mn=nn.map.cameraPosition;Mn!==void 0&&Mn.setValue(J,K.setFromMatrixPosition(ge.matrixWorld))}(Ct.isMeshPhongMaterial||Ct.isMeshToonMaterial||Ct.isMeshLambertMaterial||Ct.isMeshBasicMaterial||Ct.isMeshStandardMaterial||Ct.isShaderMaterial)&&nn.setValue(J,"isOrthographic",ge.isOrthographicCamera===!0),(Ct.isMeshPhongMaterial||Ct.isMeshToonMaterial||Ct.isMeshLambertMaterial||Ct.isMeshBasicMaterial||Ct.isMeshStandardMaterial||Ct.isShaderMaterial||Ct.isShadowMaterial||Ae.isSkinnedMesh)&&nn.setValue(J,"viewMatrix",ge.matrixWorldInverse)}if(Ae.isSkinnedMesh){nn.setOptional(J,Ae,"bindMatrix"),nn.setOptional(J,Ae,"bindMatrixInverse");const Mn=Ae.skeleton;Mn&&(Y.floatVertexTextures&&(Mn.boneTexture===null&&Mn.computeBoneTexture(),nn.setValue(J,"boneTexture",Mn.boneTexture,it),nn.setValue(J,"boneTextureSize",Mn.boneTextureSize)))}const Mh=Sn.morphAttributes;(Mh.position!==void 0||Mh.normal!==void 0||Mh.color!==void 0&&Y.isWebGL2===!0)&&Zt.update(Ae,Sn,Ns),(Zo||Jt.receiveShadow!==Ae.receiveShadow)&&(Jt.receiveShadow=Ae.receiveShadow,nn.setValue(J,"receiveShadow",Ae.receiveShadow)),Ct.isMeshGouraudMaterial&&Ct.envMap!==null&&(ks.envMap.value=$a,ks.flipEnvMap.value=$a.isCubeTexture&&$a.isRenderTargetTexture===!1?-1:1),Zo&&(nn.setValue(J,"toneMappingExposure",y.toneMappingExposure),Jt.needsLights&&(Xn=Sh,(gi=ks).ambientLightColor.needsUpdate=Xn,gi.lightProbe.needsUpdate=Xn,gi.directionalLights.needsUpdate=Xn,gi.directionalLightShadows.needsUpdate=Xn,gi.pointLights.needsUpdate=Xn,gi.pointLightShadows.needsUpdate=Xn,gi.spotLights.needsUpdate=Xn,gi.spotLightShadows.needsUpdate=Xn,gi.rectAreaLights.needsUpdate=Xn,gi.hemisphereLights.needsUpdate=Xn),$o&&Ct.fog===!0&&Kt.refreshFogUniforms(ks,$o),Kt.refreshMaterialUniforms(ks,Ct,z,F,$),Nl.upload(J,Jt.uniformsList,ks,it));var gi,Xn;if(Ct.isShaderMaterial&&Ct.uniformsNeedUpdate===!0&&(Nl.upload(J,Jt.uniformsList,ks,it),Ct.uniformsNeedUpdate=!1),Ct.isSpriteMaterial&&nn.setValue(J,"center",Ae.center),nn.setValue(J,"modelViewMatrix",Ae.modelViewMatrix),nn.setValue(J,"normalMatrix",Ae.normalMatrix),nn.setValue(J,"modelMatrix",Ae.matrixWorld),Ct.isShaderMaterial||Ct.isRawShaderMaterial){const Mn=Ct.uniformsGroups;for(let Th=0,y_=Mn.length;Th<y_;Th++)if(Y.isWebGL2){const Qd=Mn[Th];wr.update(Qd,Ns),wr.bind(Qd,Ns)}}return Ns}(U,tt,ot,st,ht);G.setMaterial(st,Ft);let qt=ot.index,$t=1;st.wireframe===!0&&(qt=_t.getWireframeAttribute(ot),$t=2);const Wt=ot.drawRange,zt=ot.attributes.position;let Pe=Wt.start*$t,bn=(Wt.start+Wt.count)*$t;yt!==null&&(Pe=Math.max(Pe,yt.start*$t),bn=Math.min(bn,(yt.start+yt.count)*$t)),qt!==null?(Pe=Math.max(Pe,0),bn=Math.min(bn,qt.count)):zt!=null&&(Pe=Math.max(Pe,0),bn=Math.min(bn,zt.count));const ze=bn-Pe;if(ze<0||ze===1/0)return;let cs;Oi.setup(ht,st,Ot,ot,qt);let Ee=ja;if(qt!==null&&(cs=mt.get(qt),Ee=Os,Ee.setIndex(cs)),ht.isMesh)st.wireframe===!0?(G.setLineWidth(st.wireframeLinewidth*X()),Ee.setMode(J.LINES)):Ee.setMode(J.TRIANGLES);else if(ht.isLine){let ge=st.linewidth;ge===void 0&&(ge=1),G.setLineWidth(ge*X()),ht.isLineSegments?Ee.setMode(J.LINES):ht.isLineLoop?Ee.setMode(J.LINE_LOOP):Ee.setMode(J.LINE_STRIP)}else ht.isPoints?Ee.setMode(J.POINTS):ht.isSprite&&Ee.setMode(J.TRIANGLES);if(ht.isInstancedMesh)Ee.renderInstances(Pe,ze,ht.count);else if(ot.isInstancedBufferGeometry){const ge=ot._maxInstanceCount!==void 0?ot._maxInstanceCount:1/0,fi=Math.min(ot.instanceCount,ge);Ee.renderInstances(Pe,ze,fi)}else Ee.render(Pe,ze)},this.compile=function(U,tt){function ot(st,ht,yt){st.transparent===!0&&st.side===2&&st.forceSinglePass===!1?(st.side=1,st.needsUpdate=!0,Ya(st,ht,yt),st.side=0,st.needsUpdate=!0,Ya(st,ht,yt),st.side=2):Ya(st,ht,yt)}m=Qt.get(U),m.init(),_.push(m),U.traverseVisible(function(st){st.isLight&&st.layers.test(tt.layers)&&(m.pushLight(st),st.castShadow&&m.pushShadow(st))}),m.setupLights(y.useLegacyLights),U.traverse(function(st){const ht=st.material;if(ht)if(Array.isArray(ht))for(let yt=0;yt<ht.length;yt++)ot(ht[yt],U,st);else ot(ht,U,st)}),_.pop(),m=null};let bh=null;function Gd(){Fs.stop()}function Hd(){Fs.start()}const Fs=new Mf;function jd(U,tt,ot,st){if(U.visible===!1)return;if(U.layers.test(tt.layers)){if(U.isGroup)ot=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(tt);else if(U.isLight)m.pushLight(U),U.castShadow&&m.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||dt.intersectsSprite(U)){st&&K.setFromMatrixPosition(U.matrixWorld).applyMatrix4(O);const yt=St.update(U),Ft=U.material;Ft.visible&&g.push(U,yt,Ft,ot,K.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(!U.frustumCulled||dt.intersectsObject(U))){U.isSkinnedMesh&&U.skeleton.frame!==N.render.frame&&(U.skeleton.update(),U.skeleton.frame=N.render.frame);const yt=St.update(U),Ft=U.material;if(st&&(U.boundingSphere!==void 0?(U.boundingSphere===null&&U.computeBoundingSphere(),K.copy(U.boundingSphere.center)):(yt.boundingSphere===null&&yt.computeBoundingSphere(),K.copy(yt.boundingSphere.center)),K.applyMatrix4(U.matrixWorld).applyMatrix4(O)),Array.isArray(Ft)){const Ot=yt.groups;for(let qt=0,$t=Ot.length;qt<$t;qt++){const Wt=Ot[qt],zt=Ft[Wt.materialIndex];zt&&zt.visible&&g.push(U,yt,zt,ot,K.z,Wt)}}else Ft.visible&&g.push(U,yt,Ft,ot,K.z,null)}}const ht=U.children;for(let yt=0,Ft=ht.length;yt<Ft;yt++)jd(ht[yt],tt,ot,st)}function Xd(U,tt,ot,st){const ht=U.opaque,yt=U.transmissive,Ft=U.transparent;m.setupLightsView(ot),ct===!0&&Se.setGlobalState(y.clippingPlanes,ot),yt.length>0&&function(Ot,qt,$t,Wt){const zt=Y.isWebGL2;$===null&&($=new sr(1,1,{generateMipmaps:!0,type:L.has("EXT_color_buffer_half_float")?ba:Qs,minFilter:jl,samples:zt&&a===!0?4:0})),y.getDrawingBufferSize(I),zt?$.setSize(I.x,I.y):$.setSize(Yl(I.x),Yl(I.y));const Pe=y.getRenderTarget();y.setRenderTarget($),y.getClearColor(R),P=y.getClearAlpha(),P<1&&y.setClearColor(16777215,.5),y.clear();const bn=y.toneMapping;y.toneMapping=0,Xa(Ot,$t,Wt),it.updateMultisampleRenderTarget($),it.updateRenderTargetMipmap($);let ze=!1;for(let cs=0,Ee=qt.length;cs<Ee;cs++){const ge=qt[cs],fi=ge.object,Sn=ge.geometry,Ct=ge.material,Ae=ge.group;if(Ct.side===2&&fi.layers.test(Wt.layers)){const $o=Ct.side;Ct.side=1,Ct.needsUpdate=!0,Yd(fi,$t,Wt,Sn,Ct,Ae),Ct.side=$o,Ct.needsUpdate=!0,ze=!0}}ze===!0&&(it.updateMultisampleRenderTarget($),it.updateRenderTargetMipmap($)),y.setRenderTarget(Pe),y.setClearColor(R,P),y.toneMapping=bn}(ht,yt,tt,ot),st&&G.viewport(T.copy(st)),ht.length>0&&Xa(ht,tt,ot),yt.length>0&&Xa(yt,tt,ot),Ft.length>0&&Xa(Ft,tt,ot),G.buffers.depth.setTest(!0),G.buffers.depth.setMask(!0),G.buffers.color.setMask(!0),G.setPolygonOffset(!1)}function Xa(U,tt,ot){const st=tt.isScene===!0?tt.overrideMaterial:null;for(let ht=0,yt=U.length;ht<yt;ht++){const Ft=U[ht],Ot=Ft.object,qt=Ft.geometry,$t=st===null?Ft.material:st,Wt=Ft.group;Ot.layers.test(ot.layers)&&Yd(Ot,tt,ot,qt,$t,Wt)}}function Yd(U,tt,ot,st,ht,yt){U.onBeforeRender(y,tt,ot,st,ht,yt),U.modelViewMatrix.multiplyMatrices(ot.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),ht.onBeforeRender(y,tt,ot,st,U,yt),ht.transparent===!0&&ht.side===2&&ht.forceSinglePass===!1?(ht.side=1,ht.needsUpdate=!0,y.renderBufferDirect(ot,tt,st,ht,U,yt),ht.side=0,ht.needsUpdate=!0,y.renderBufferDirect(ot,tt,st,ht,U,yt),ht.side=2):y.renderBufferDirect(ot,tt,st,ht,U,yt),U.onAfterRender(y,tt,ot,st,ht,yt)}function Ya(U,tt,ot){tt.isScene!==!0&&(tt=at);const st=Z.get(U),ht=m.state.lights,yt=m.state.shadowsArray,Ft=ht.state.version,Ot=Rt.getParameters(U,ht.state,yt,tt,ot),qt=Rt.getProgramCacheKey(Ot);let $t=st.programs;st.environment=U.isMeshStandardMaterial?tt.environment:null,st.fog=tt.fog,st.envMap=(U.isMeshStandardMaterial?pt:nt).get(U.envMap||st.environment),$t===void 0&&(U.addEventListener("dispose",Wd),$t=new Map,st.programs=$t);let Wt=$t.get(qt);if(Wt!==void 0){if(st.currentProgram===Wt&&st.lightsStateVersion===Ft)return $d(U,Ot),Wt}else Ot.uniforms=Rt.getUniforms(U),U.onBuild(ot,Ot,y),U.onBeforeCompile(Ot,y),Wt=Rt.acquireProgram(Ot,qt),$t.set(qt,Wt),st.uniforms=Ot.uniforms;const zt=st.uniforms;(U.isShaderMaterial||U.isRawShaderMaterial)&&U.clipping!==!0||(zt.clippingPlanes=Se.uniform),$d(U,Ot),st.needsLights=function(ze){return ze.isMeshLambertMaterial||ze.isMeshToonMaterial||ze.isMeshPhongMaterial||ze.isMeshStandardMaterial||ze.isShadowMaterial||ze.isShaderMaterial&&ze.lights===!0}(U),st.lightsStateVersion=Ft,st.needsLights&&(zt.ambientLightColor.value=ht.state.ambient,zt.lightProbe.value=ht.state.probe,zt.directionalLights.value=ht.state.directional,zt.directionalLightShadows.value=ht.state.directionalShadow,zt.spotLights.value=ht.state.spot,zt.spotLightShadows.value=ht.state.spotShadow,zt.rectAreaLights.value=ht.state.rectArea,zt.ltc_1.value=ht.state.rectAreaLTC1,zt.ltc_2.value=ht.state.rectAreaLTC2,zt.pointLights.value=ht.state.point,zt.pointLightShadows.value=ht.state.pointShadow,zt.hemisphereLights.value=ht.state.hemi,zt.directionalShadowMap.value=ht.state.directionalShadowMap,zt.directionalShadowMatrix.value=ht.state.directionalShadowMatrix,zt.spotShadowMap.value=ht.state.spotShadowMap,zt.spotLightMatrix.value=ht.state.spotLightMatrix,zt.spotLightMap.value=ht.state.spotLightMap,zt.pointShadowMap.value=ht.state.pointShadowMap,zt.pointShadowMatrix.value=ht.state.pointShadowMatrix);const Pe=Wt.getUniforms(),bn=Nl.seqWithValue(Pe.seq,zt);return st.currentProgram=Wt,st.uniformsList=bn,Wt}function $d(U,tt){const ot=Z.get(U);ot.outputColorSpace=tt.outputColorSpace,ot.instancing=tt.instancing,ot.skinning=tt.skinning,ot.morphTargets=tt.morphTargets,ot.morphNormals=tt.morphNormals,ot.morphColors=tt.morphColors,ot.morphTargetsCount=tt.morphTargetsCount,ot.numClippingPlanes=tt.numClippingPlanes,ot.numIntersection=tt.numClipIntersection,ot.vertexAlphas=tt.vertexAlphas,ot.vertexTangents=tt.vertexTangents,ot.toneMapping=tt.toneMapping}Fs.setAnimationLoop(function(U){bh&&bh(U)}),typeof self<"u"&&Fs.setContext(self),this.setAnimationLoop=function(U){bh=U,jn.setAnimationLoop(U),U===null?Fs.stop():Fs.start()},jn.addEventListener("sessionstart",Gd),jn.addEventListener("sessionend",Hd),this.render=function(U,tt){if(tt!==void 0&&tt.isCamera!==!0||A===!0)return;U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),tt.parent===null&&tt.matrixWorldAutoUpdate===!0&&tt.updateMatrixWorld(),jn.enabled===!0&&jn.isPresenting===!0&&(tt=jn.updateCameraXR(tt)),U.isScene===!0&&U.onBeforeRender(y,U,tt,w),m=Qt.get(U,_.length),m.init(),_.push(m),O.multiplyMatrices(tt.projectionMatrix,tt.matrixWorldInverse),dt.setFromProjectionMatrix(O),rt=this.localClippingEnabled,ct=Se.init(this.clippingPlanes,rt),g=Pt.get(U,x.length),g.init(),x.push(g),jd(U,tt,0,y.sortObjects),g.finish(),y.sortObjects===!0&&g.sort(q,B),ct===!0&&Se.beginShadows();const ot=m.state.shadowsArray;if(At.render(ot,U,tt),ct===!0&&Se.endShadows(),this.info.autoReset===!0&&this.info.reset(),this.info.render.frame++,Yt.render(g,U),m.setupLights(y.useLegacyLights),tt.isArrayCamera){const st=tt.cameras;for(let ht=0,yt=st.length;ht<yt;ht++){const Ft=st[ht];Xd(g,U,Ft,Ft.viewport)}}else Xd(g,U,tt);w!==null&&(it.updateMultisampleRenderTarget(w),it.updateRenderTargetMipmap(w)),U.isScene===!0&&U.onAfterRender(y,U,tt),Oi.resetDefaultState(),M=-1,C=null,_.pop(),m=_.length>0?_[_.length-1]:null,x.pop(),g=x.length>0?x[x.length-1]:null},this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(U,tt,ot){Z.get(U.texture).__webglTexture=tt,Z.get(U.depthTexture).__webglTexture=ot;const st=Z.get(U);st.__hasExternalTextures=!0,st.__hasExternalTextures&&(st.__autoAllocateDepthBuffer=ot===void 0,st.__autoAllocateDepthBuffer||L.has("WEBGL_multisampled_render_to_texture")===!0&&(st.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(U,tt){const ot=Z.get(U);ot.__webglFramebuffer=tt,ot.__useDefaultFramebuffer=tt===void 0},this.setRenderTarget=function(U,tt=0,ot=0){w=U,b=tt,v=ot;let st=!0,ht=null,yt=!1,Ft=!1;if(U){const Ot=Z.get(U);Ot.__useDefaultFramebuffer!==void 0?(G.bindFramebuffer(J.FRAMEBUFFER,null),st=!1):Ot.__webglFramebuffer===void 0?it.setupRenderTarget(U):Ot.__hasExternalTextures&&it.rebindTextures(U,Z.get(U.texture).__webglTexture,Z.get(U.depthTexture).__webglTexture);const qt=U.texture;(qt.isData3DTexture||qt.isDataArrayTexture||qt.isCompressedArrayTexture)&&(Ft=!0);const $t=Z.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(ht=$t[tt],yt=!0):ht=Y.isWebGL2&&U.samples>0&&it.useMultisampledRTT(U)===!1?Z.get(U).__webglMultisampledFramebuffer:$t,T.copy(U.viewport),E.copy(U.scissor),D=U.scissorTest}else T.copy(W).multiplyScalar(z).floor(),E.copy(Q).multiplyScalar(z).floor(),D=j;if(G.bindFramebuffer(J.FRAMEBUFFER,ht)&&Y.drawBuffers&&st&&G.drawBuffers(U,ht),G.viewport(T),G.scissor(E),G.setScissorTest(D),yt){const Ot=Z.get(U.texture);J.framebufferTexture2D(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0,J.TEXTURE_CUBE_MAP_POSITIVE_X+tt,Ot.__webglTexture,ot)}else if(Ft){const Ot=Z.get(U.texture),qt=tt||0;J.framebufferTextureLayer(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0,Ot.__webglTexture,ot||0,qt)}M=-1},this.readRenderTargetPixels=function(U,tt,ot,st,ht,yt,Ft){if(!U||!U.isWebGLRenderTarget)return;let Ot=Z.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&Ft!==void 0&&(Ot=Ot[Ft]),Ot){G.bindFramebuffer(J.FRAMEBUFFER,Ot);try{const qt=U.texture,$t=qt.format,Wt=qt.type;if($t!==bi&&Fn.convert($t)!==J.getParameter(J.IMPLEMENTATION_COLOR_READ_FORMAT))return;const zt=Wt===ba&&(L.has("EXT_color_buffer_half_float")||Y.isWebGL2&&L.has("EXT_color_buffer_float"));if(!(Wt===Qs||Fn.convert(Wt)===J.getParameter(J.IMPLEMENTATION_COLOR_READ_TYPE)||Wt===bs&&(Y.isWebGL2||L.has("OES_texture_float")||L.has("WEBGL_color_buffer_float"))||zt))return;tt>=0&&tt<=U.width-st&&ot>=0&&ot<=U.height-ht&&J.readPixels(tt,ot,st,ht,Fn.convert($t),Fn.convert(Wt),yt)}finally{const qt=w!==null?Z.get(w).__webglFramebuffer:null;G.bindFramebuffer(J.FRAMEBUFFER,qt)}}},this.copyFramebufferToTexture=function(U,tt,ot=0){const st=Math.pow(2,-ot),ht=Math.floor(tt.image.width*st),yt=Math.floor(tt.image.height*st);it.setTexture2D(tt,0),J.copyTexSubImage2D(J.TEXTURE_2D,ot,0,0,U.x,U.y,ht,yt),G.unbindTexture()},this.copyTextureToTexture=function(U,tt,ot,st=0){const ht=tt.image.width,yt=tt.image.height,Ft=Fn.convert(ot.format),Ot=Fn.convert(ot.type);it.setTexture2D(ot,0),J.pixelStorei(J.UNPACK_FLIP_Y_WEBGL,ot.flipY),J.pixelStorei(J.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ot.premultiplyAlpha),J.pixelStorei(J.UNPACK_ALIGNMENT,ot.unpackAlignment),tt.isDataTexture?J.texSubImage2D(J.TEXTURE_2D,st,U.x,U.y,ht,yt,Ft,Ot,tt.image.data):tt.isCompressedTexture?J.compressedTexSubImage2D(J.TEXTURE_2D,st,U.x,U.y,tt.mipmaps[0].width,tt.mipmaps[0].height,Ft,tt.mipmaps[0].data):J.texSubImage2D(J.TEXTURE_2D,st,U.x,U.y,Ft,Ot,tt.image),st===0&&ot.generateMipmaps&&J.generateMipmap(J.TEXTURE_2D),G.unbindTexture()},this.copyTextureToTexture3D=function(U,tt,ot,st,ht=0){if(y.isWebGL1Renderer)return;const yt=U.max.x-U.min.x+1,Ft=U.max.y-U.min.y+1,Ot=U.max.z-U.min.z+1,qt=Fn.convert(st.format),$t=Fn.convert(st.type);let Wt;if(st.isData3DTexture)it.setTexture3D(st,0),Wt=J.TEXTURE_3D;else{if(!st.isDataArrayTexture)return;it.setTexture2DArray(st,0),Wt=J.TEXTURE_2D_ARRAY}J.pixelStorei(J.UNPACK_FLIP_Y_WEBGL,st.flipY),J.pixelStorei(J.UNPACK_PREMULTIPLY_ALPHA_WEBGL,st.premultiplyAlpha),J.pixelStorei(J.UNPACK_ALIGNMENT,st.unpackAlignment);const zt=J.getParameter(J.UNPACK_ROW_LENGTH),Pe=J.getParameter(J.UNPACK_IMAGE_HEIGHT),bn=J.getParameter(J.UNPACK_SKIP_PIXELS),ze=J.getParameter(J.UNPACK_SKIP_ROWS),cs=J.getParameter(J.UNPACK_SKIP_IMAGES),Ee=ot.isCompressedTexture?ot.mipmaps[0]:ot.image;J.pixelStorei(J.UNPACK_ROW_LENGTH,Ee.width),J.pixelStorei(J.UNPACK_IMAGE_HEIGHT,Ee.height),J.pixelStorei(J.UNPACK_SKIP_PIXELS,U.min.x),J.pixelStorei(J.UNPACK_SKIP_ROWS,U.min.y),J.pixelStorei(J.UNPACK_SKIP_IMAGES,U.min.z),ot.isDataTexture||ot.isData3DTexture?J.texSubImage3D(Wt,ht,tt.x,tt.y,tt.z,yt,Ft,Ot,qt,$t,Ee.data):ot.isCompressedArrayTexture?J.compressedTexSubImage3D(Wt,ht,tt.x,tt.y,tt.z,yt,Ft,Ot,qt,Ee.data):J.texSubImage3D(Wt,ht,tt.x,tt.y,tt.z,yt,Ft,Ot,qt,$t,Ee),J.pixelStorei(J.UNPACK_ROW_LENGTH,zt),J.pixelStorei(J.UNPACK_IMAGE_HEIGHT,Pe),J.pixelStorei(J.UNPACK_SKIP_PIXELS,bn),J.pixelStorei(J.UNPACK_SKIP_ROWS,ze),J.pixelStorei(J.UNPACK_SKIP_IMAGES,cs),ht===0&&st.generateMipmaps&&J.generateMipmap(Wt),G.unbindTexture()},this.initTexture=function(U){U.isCubeTexture?it.setTextureCube(U,0):U.isData3DTexture?it.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?it.setTexture2DArray(U,0):it.setTexture2D(U,0),G.unbindTexture()},this.resetState=function(){b=0,v=0,w=null,G.reset(),Oi.reset()}}get coordinateSystem(){return to}get physicallyCorrectLights(){return!this.useLegacyLights}set physicallyCorrectLights(t){this.useLegacyLights=!t}get outputEncoding(){return this.outputColorSpace===Nt?er:3e3}set outputEncoding(t){this.outputColorSpace=t===er?Nt:Ei}}(class extends Df{}).prototype.isWebGL1Renderer=!0;class Xu{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Vt(t),this.near=e,this.far=n}clone(){return new Xu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class $0 extends we{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e}get autoUpdate(){return this.matrixWorldAutoUpdate}set autoUpdate(t){this.matrixWorldAutoUpdate=t}}class Up extends li{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const kr=new xe,zp=new xe,gl=[],Bp=new mr,Z0=new xe,ia=new wt,sa=new La;class K0 extends wt{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Up(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,Z0)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new mr),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,kr),Bp.copy(t.boundingBox).applyMatrix4(kr),this.boundingBox.union(Bp)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new La),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,kr),sa.copy(t.boundingSphere).applyMatrix4(kr),this.boundingSphere.union(sa)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,i=this.count;if(ia.geometry=this.geometry,ia.material=this.material,ia.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),sa.copy(this.boundingSphere),sa.applyMatrix4(n),t.ray.intersectsSphere(sa)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,kr),zp.multiplyMatrices(n,kr),ia.matrixWorld=zp,ia.raycast(t,gl);for(let o=0,a=gl.length;o<a;o++){const l=gl[o];l.instanceId=r,l.object=this,e.push(l)}gl.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Up(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Pf extends yn{constructor(t,e,n,i,r,o,a,l,c){super(t,e,n,i,r,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class ue extends pi{constructor(t=1,e=1,n=1,i=32,r=1,o=!1,a=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],p=[];let f=0;const g=[],m=n/2;let x=0;function _(y){const A=f,b=new Xt,v=new H;let w=0;const M=y===!0?t:e,C=y===!0?1:-1;for(let E=1;E<=i;E++)u.push(0,m*C,0),d.push(0,C,0),p.push(.5,.5),f++;const T=f;for(let E=0;E<=i;E++){const D=E/i*l+a,R=Math.cos(D),P=Math.sin(D);v.x=M*P,v.y=m*C,v.z=M*R,u.push(v.x,v.y,v.z),d.push(0,C,0),b.x=.5*R+.5,b.y=.5*P*C+.5,p.push(b.x,b.y),f++}for(let E=0;E<i;E++){const D=A+E,R=T+E;y===!0?h.push(R,R+1,D):h.push(R+1,R,D),w+=3}c.addGroup(x,w,y===!0?1:2),x+=w}(function(){const y=new H,A=new H;let b=0;const v=(e-t)/n;for(let w=0;w<=r;w++){const M=[],C=w/r,T=C*(e-t)+t;for(let E=0;E<=i;E++){const D=E/i,R=D*l+a,P=Math.sin(R),k=Math.cos(R);A.x=T*P,A.y=-C*n+m,A.z=T*k,u.push(A.x,A.y,A.z),y.set(P,v,k).normalize(),d.push(y.x,y.y,y.z),p.push(D,1-C),M.push(f++)}g.push(M)}for(let w=0;w<i;w++)for(let M=0;M<r;M++){const C=g[M][w],T=g[M+1][w],E=g[M+1][w+1],D=g[M][w+1];h.push(C,T,D),h.push(T,E,D),b+=6}c.addGroup(x,b,0),x+=b})(),o===!1&&(t>0&&_(!0),e>0&&_(!1)),this.setIndex(h),this.setAttribute("position",new Oe(u,3)),this.setAttribute("normal",new Oe(d,3)),this.setAttribute("uv",new Oe(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ue(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Si extends ue{constructor(t=1,e=1,n=32,i=1,r=!1,o=0,a=2*Math.PI){super(0,t,e,n,i,r,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(t){return new Si(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Oa extends pi{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const r=[],o=[];function a(p,f,g,m){const x=m+1,_=[];for(let y=0;y<=x;y++){_[y]=[];const A=p.clone().lerp(g,y/x),b=f.clone().lerp(g,y/x),v=x-y;for(let w=0;w<=v;w++)_[y][w]=w===0&&y===x?A:A.clone().lerp(b,w/v)}for(let y=0;y<x;y++)for(let A=0;A<2*(x-y)-1;A++){const b=Math.floor(A/2);A%2==0?(l(_[y][b+1]),l(_[y+1][b]),l(_[y][b])):(l(_[y][b+1]),l(_[y+1][b+1]),l(_[y+1][b]))}}function l(p){r.push(p.x,p.y,p.z)}function c(p,f){const g=3*p;f.x=t[g+0],f.y=t[g+1],f.z=t[g+2]}function h(p,f,g,m){m<0&&p.x===1&&(o[f]=p.x-1),g.x===0&&g.z===0&&(o[f]=m/2/Math.PI+.5)}function u(p){return Math.atan2(p.z,-p.x)}function d(p){return Math.atan2(-p.y,Math.sqrt(p.x*p.x+p.z*p.z))}(function(p){const f=new H,g=new H,m=new H;for(let x=0;x<e.length;x+=3)c(e[x+0],f),c(e[x+1],g),c(e[x+2],m),a(f,g,m,p)})(i),function(p){const f=new H;for(let g=0;g<r.length;g+=3)f.x=r[g+0],f.y=r[g+1],f.z=r[g+2],f.normalize().multiplyScalar(p),r[g+0]=f.x,r[g+1]=f.y,r[g+2]=f.z}(n),function(){const p=new H;for(let f=0;f<r.length;f+=3){p.x=r[f+0],p.y=r[f+1],p.z=r[f+2];const g=u(p)/2/Math.PI+.5,m=d(p)/Math.PI+.5;o.push(g,1-m)}(function(){const f=new H,g=new H,m=new H,x=new H,_=new Xt,y=new Xt,A=new Xt;for(let b=0,v=0;b<r.length;b+=9,v+=6){f.set(r[b+0],r[b+1],r[b+2]),g.set(r[b+3],r[b+4],r[b+5]),m.set(r[b+6],r[b+7],r[b+8]),_.set(o[v+0],o[v+1]),y.set(o[v+2],o[v+3]),A.set(o[v+4],o[v+5]),x.copy(f).add(g).add(m).divideScalar(3);const w=u(x);h(_,v+0,f,w),h(y,v+2,g,w),h(A,v+4,m,w)}})(),function(){for(let f=0;f<o.length;f+=6){const g=o[f+0],m=o[f+2],x=o[f+4],_=Math.max(g,m,x),y=Math.min(g,m,x);_>.9&&y<.1&&(g<.2&&(o[f+0]+=1),m<.2&&(o[f+2]+=1),x<.2&&(o[f+4]+=1))}}()}(),this.setAttribute("position",new Oe(r,3)),this.setAttribute("normal",new Oe(r.slice(),3)),this.setAttribute("uv",new Oe(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Oa(t.vertices,t.indices,t.radius,t.details)}}class Yu extends Oa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Yu(t.radius,t.detail)}}class Zl extends Oa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Zl(t.radius,t.detail)}}class $u extends Oa{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new $u(t.radius,t.detail)}}class Un extends pi{constructor(t=1,e=32,n=16,i=0,r=2*Math.PI,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new H,d=new H,p=[],f=[],g=[],m=[];for(let x=0;x<=n;x++){const _=[],y=x/n;let A=0;x===0&&o===0?A=.5/e:x===n&&l===Math.PI&&(A=-.5/e);for(let b=0;b<=e;b++){const v=b/e;u.x=-t*Math.cos(i+v*r)*Math.sin(o+y*a),u.y=t*Math.cos(o+y*a),u.z=t*Math.sin(i+v*r)*Math.sin(o+y*a),f.push(u.x,u.y,u.z),d.copy(u).normalize(),g.push(d.x,d.y,d.z),m.push(v+A,1-y),_.push(c++)}h.push(_)}for(let x=0;x<n;x++)for(let _=0;_<e;_++){const y=h[x][_+1],A=h[x][_],b=h[x+1][_],v=h[x+1][_+1];(x!==0||o>0)&&p.push(y,A,v),(x!==n-1||l<Math.PI)&&p.push(A,b,v)}this.setIndex(p),this.setAttribute("position",new Oe(f,3)),this.setAttribute("normal",new Oe(g,3)),this.setAttribute("uv",new Oe(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Un(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Zu extends pi{constructor(t=1,e=.4,n=12,i=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],h=new H,u=new H,d=new H;for(let p=0;p<=n;p++)for(let f=0;f<=i;f++){const g=f/i*r,m=p/n*Math.PI*2;u.x=(t+e*Math.cos(m))*Math.cos(g),u.y=(t+e*Math.cos(m))*Math.sin(g),u.z=e*Math.sin(m),a.push(u.x,u.y,u.z),h.x=t*Math.cos(g),h.y=t*Math.sin(g),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(f/i),c.push(p/n)}for(let p=1;p<=n;p++)for(let f=1;f<=i;f++){const g=(i+1)*p+f-1,m=(i+1)*(p-1)+f-1,x=(i+1)*(p-1)+f,_=(i+1)*p+f;o.push(g,m,_),o.push(m,x,_)}this.setIndex(o),this.setAttribute("position",new Oe(a,3)),this.setAttribute("normal",new Oe(l,3)),this.setAttribute("uv",new Oe(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Zu(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class It extends Fo{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Vt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Vt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Q0 extends Fo{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Vt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Vt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Xt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Ku extends we{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Vt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}class J0 extends Ku{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(we.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Vt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const tu=new xe,Vp=new H,qp=new H;class ty{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Xt(512,512),this.map=null,this.mapPass=null,this.matrix=new xe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ah,this._frameExtents=new Xt(1,1),this._viewportCount=1,this._viewports=[new We(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Vp.setFromMatrixPosition(t.matrixWorld),e.position.copy(Vp),qp.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(qp),e.updateMatrixWorld(),tu.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(tu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(tu)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),this.mapSize.x===512&&this.mapSize.y===512||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class ey extends ty{constructor(){super(new Tf(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ny extends Ku{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(we.DEFAULT_UP),this.updateMatrix(),this.target=new we,this.shadow=new ey}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class iy extends Ku{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}let sy=class{constructor(s=!0){this.autoStart=s,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Wp(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let s=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Wp();s=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=s}return s}};function Wp(){return(typeof performance>"u"?Date:performance).now()}typeof window<"u"&&(window.__THREE__||(window.__THREE__="153"));class zn{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new S);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new S);const n=this.elements,i=t.x,r=t.y,o=t.z;return e.x=n[0]*i+n[1]*r+n[2]*o,e.y=n[3]*i+n[4]*r+n[5]*o,e.z=n[6]*i+n[7]*r+n[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new zn);const n=this.elements,i=t.elements,r=e.elements,o=n[0],a=n[1],l=n[2],c=n[3],h=n[4],u=n[5],d=n[6],p=n[7],f=n[8],g=i[0],m=i[1],x=i[2],_=i[3],y=i[4],A=i[5],b=i[6],v=i[7],w=i[8];return r[0]=o*g+a*_+l*b,r[1]=o*m+a*y+l*v,r[2]=o*x+a*A+l*w,r[3]=c*g+h*_+u*b,r[4]=c*m+h*y+u*v,r[5]=c*x+h*A+u*w,r[6]=d*g+p*_+f*b,r[7]=d*m+p*y+f*v,r[8]=d*x+p*A+f*w,e}scale(t,e){e===void 0&&(e=new zn);const n=this.elements,i=e.elements;for(let r=0;r!==3;r++)i[3*r+0]=t.x*n[3*r+0],i[3*r+1]=t.y*n[3*r+1],i[3*r+2]=t.z*n[3*r+2];return e}solve(t,e){e===void 0&&(e=new S);const n=[];let i,r;for(i=0;i<12;i++)n.push(0);for(i=0;i<3;i++)for(r=0;r<3;r++)n[i+4*r]=this.elements[i+3*r];n[3]=t.x,n[7]=t.y,n[11]=t.z;let o=3;const a=o;let l,c;do{if(i=a-o,n[i+4*i]===0){for(r=i+1;r<a;r++)if(n[i+4*r]!==0){l=4;do c=4-l,n[c+4*i]+=n[c+4*r];while(--l);break}}if(n[i+4*i]!==0)for(r=i+1;r<a;r++){const h=n[i+4*r]/n[i+4*i];l=4;do c=4-l,n[c+4*r]=c<=i?0:n[c+4*r]-n[c+4*i]*h;while(--l)}}while(--o);if(e.z=n[11]/n[10],e.y=(n[7]-n[6]*e.z)/n[5],e.x=(n[3]-n[2]*e.z-n[1]*e.y)/n[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,n){if(n===void 0)return this.elements[e+3*t];this.elements[e+3*t]=n}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";for(let e=0;e<9;e++)t+=this.elements[e]+",";return t}reverse(t){t===void 0&&(t=new zn);const e=ry;let n,i;for(n=0;n<3;n++)for(i=0;i<3;i++)e[n+6*i]=this.elements[n+3*i];e[3]=1,e[9]=0,e[15]=0,e[4]=0,e[10]=1,e[16]=0,e[5]=0,e[11]=0,e[17]=1;let r=3;const o=r;let a,l;do{if(n=o-r,e[n+6*n]===0){for(i=n+1;i<o;i++)if(e[n+6*i]!==0){a=6;do l=6-a,e[l+6*n]+=e[l+6*i];while(--a);break}}if(e[n+6*n]!==0)for(i=n+1;i<o;i++){const c=e[n+6*i]/e[n+6*n];a=6;do l=6-a,e[l+6*i]=l<=n?0:e[l+6*i]-e[l+6*n]*c;while(--a)}}while(--r);n=2;do{i=n-1;do{const c=e[n+6*i]/e[n+6*n];a=6;do l=6-a,e[l+6*i]=e[l+6*i]-e[l+6*n]*c;while(--a)}while(i--)}while(--n);n=2;do{const c=1/e[n+6*n];a=6;do l=6-a,e[l+6*n]=e[l+6*n]*c;while(--a)}while(n--);n=2;do{i=2;do{if(l=e[3+i+6*n],isNaN(l)||l===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(n,i,l)}while(i--)}while(n--);return t}setRotationFromQuaternion(t){const e=t.x,n=t.y,i=t.z,r=t.w,o=e+e,a=n+n,l=i+i,c=e*o,h=e*a,u=e*l,d=n*a,p=n*l,f=i*l,g=r*o,m=r*a,x=r*l,_=this.elements;return _[0]=1-(d+f),_[1]=h-x,_[2]=u+m,_[3]=h+x,_[4]=1-(c+f),_[5]=p-g,_[6]=u-m,_[7]=p+g,_[8]=1-(c+d),this}transpose(t){t===void 0&&(t=new zn);const e=this.elements,n=t.elements;let i;return n[0]=e[0],n[4]=e[4],n[8]=e[8],i=e[1],n[1]=e[3],n[3]=i,i=e[2],n[2]=e[6],n[6]=i,i=e[5],n[5]=e[7],n[7]=i,t}}const ry=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class S{constructor(t,e,n){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),this.x=t,this.y=e,this.z=n}cross(t,e){e===void 0&&(e=new S);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z;return e.x=a*r-l*i,e.y=l*n-o*r,e.z=o*i-a*n,e}set(t,e,n){return this.x=t,this.y=e,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(!e)return new S(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z}vsub(t,e){if(!e)return new S(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z}crossmat(){return new zn([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,n=this.z,i=Math.sqrt(t*t+e*e+n*n);if(i>0){const r=1/i;this.x*=r,this.y*=r,this.z*=r}else this.x=0,this.y=0,this.z=0;return i}unit(t){t===void 0&&(t=new S);const e=this.x,n=this.y,i=this.z;let r=Math.sqrt(e*e+n*n+i*i);return r>0?(r=1/r,t.x=e*r,t.y=n*r,t.z=i*r):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,n=this.z;return Math.sqrt(t*t+e*e+n*n)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return Math.sqrt((r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i))}distanceSquared(t){const e=this.x,n=this.y,i=this.z,r=t.x,o=t.y,a=t.z;return(r-e)*(r-e)+(o-n)*(o-n)+(a-i)*(a-i)}scale(t,e){e===void 0&&(e=new S);const n=this.x,i=this.y,r=this.z;return e.x=t*n,e.y=t*i,e.z=t*r,e}vmul(t,e){return e===void 0&&(e=new S),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,n){return n===void 0&&(n=new S),n.x=this.x+t*e.x,n.y=this.y+t*e.y,n.z=this.z+t*e.z,n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new S),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const n=this.length();if(n>0){const i=oy,r=1/n;i.set(this.x*r,this.y*r,this.z*r);const o=ay;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,t)):(o.set(0,1,0),i.cross(o,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,n){const i=this.x,r=this.y,o=this.z;n.x=i+(t.x-i)*e,n.y=r+(t.y-r)*e,n.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(Gp),Gp.almostEquals(t,e)}clone(){return new S(this.x,this.y,this.z)}}S.ZERO=new S(0,0,0),S.UNIT_X=new S(1,0,0),S.UNIT_Y=new S(0,1,0),S.UNIT_Z=new S(0,0,1);const oy=new S,ay=new S,Gp=new S;class le{constructor(t){t===void 0&&(t={}),this.lowerBound=new S,this.upperBound=new S,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,n,i){const r=this.lowerBound,o=this.upperBound,a=n;r.copy(t[0]),a&&a.vmult(r,r),o.copy(r);for(let l=1;l<t.length;l++){let c=t[l];a&&(a.vmult(c,Hp),c=Hp),c.x>o.x&&(o.x=c.x),c.x<r.x&&(r.x=c.x),c.y>o.y&&(o.y=c.y),c.y<r.y&&(r.y=c.y),c.z>o.z&&(o.z=c.z),c.z<r.z&&(r.z=c.z)}return e&&(e.vadd(r,r),e.vadd(o,o)),i&&(r.x-=i,r.y-=i,r.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new le().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound,o=i.x<=n.x&&n.x<=r.x||e.x<=r.x&&r.x<=n.x,a=i.y<=n.y&&n.y<=r.y||e.y<=r.y&&r.y<=n.y,l=i.z<=n.z&&n.z<=r.z||e.z<=r.z&&r.z<=n.z;return o&&a&&l}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,n=this.upperBound,i=t.lowerBound,r=t.upperBound;return e.x<=i.x&&n.x>=r.x&&e.y<=i.y&&n.y>=r.y&&e.z<=i.z&&n.z>=r.z}getCorners(t,e,n,i,r,o,a,l){const c=this.lowerBound,h=this.upperBound;t.copy(c),e.set(h.x,c.y,c.z),n.set(h.x,h.y,c.z),i.set(c.x,h.y,h.z),r.set(h.x,c.y,h.z),o.set(c.x,h.y,c.z),a.set(c.x,c.y,h.z),l.copy(h)}toLocalFrame(t,e){const n=jp,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7];this.getCorners(i,r,o,a,l,c,h,u);for(let d=0;d!==8;d++){const p=n[d];t.pointToLocal(p,p)}return e.setFromPoints(n)}toWorldFrame(t,e){const n=jp,i=n[0],r=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7];this.getCorners(i,r,o,a,l,c,h,u);for(let d=0;d!==8;d++){const p=n[d];t.pointToWorld(p,p)}return e.setFromPoints(n)}overlapsRay(t){const{direction:e,from:n}=t,i=1/e.x,r=1/e.y,o=1/e.z,a=(this.lowerBound.x-n.x)*i,l=(this.upperBound.x-n.x)*i,c=(this.lowerBound.y-n.y)*r,h=(this.upperBound.y-n.y)*r,u=(this.lowerBound.z-n.z)*o,d=(this.upperBound.z-n.z)*o,p=Math.max(Math.max(Math.min(a,l),Math.min(c,h)),Math.min(u,d)),f=Math.min(Math.min(Math.max(a,l),Math.max(c,h)),Math.max(u,d));return!(f<0)&&!(p>f)}}const Hp=new S,jp=[new S,new S,new S,new S,new S,new S,new S,new S];class vu{constructor(){this.matrix=[]}get(t,e){let{index:n}=t,{index:i}=e;if(i>n){const r=i;i=n,n=r}return this.matrix[(n*(n+1)>>1)+i-1]}set(t,e,n){let{index:i}=t,{index:r}=e;if(r>i){const o=r;r=i,i=o}this.matrix[(i*(i+1)>>1)+r-1]=n?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class Qu{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;return n[t]===void 0&&(n[t]=[]),n[t].includes(e)||n[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return!(n[t]===void 0||!n[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const n=this._listeners;if(n[t]===void 0)return this;const i=n[t].indexOf(e);return i!==-1&&n[t].splice(i,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const e=this._listeners[t.type];if(e!==void 0){t.target=this;for(let n=0,i=e.length;n<i;n++)e[n].call(this,t)}return this}}class me{constructor(t,e,n,i){t===void 0&&(t=0),e===void 0&&(e=0),n===void 0&&(n=0),i===void 0&&(i=1),this.x=t,this.y=e,this.z=n,this.w=i}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const n=Math.sin(.5*e);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(.5*e),this}toAxisAngle(t){t===void 0&&(t=new S),this.normalize();const e=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/n,t.y=this.y/n,t.z=this.z/n),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const n=ly,i=cy;t.tangents(n,i),this.setFromAxisAngle(n,Math.PI)}else{const n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new me);const n=this.x,i=this.y,r=this.z,o=this.w,a=t.x,l=t.y,c=t.z,h=t.w;return e.x=n*h+o*a+i*c-r*l,e.y=i*h+o*l+r*a-n*c,e.z=r*h+o*c+n*l-i*a,e.w=o*h-n*a-i*l-r*c,e}inverse(t){t===void 0&&(t=new me);const e=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(t);const o=1/(e*e+n*n+i*i+r*r);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new me),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new S);const n=t.x,i=t.y,r=t.z,o=this.x,a=this.y,l=this.z,c=this.w,h=c*n+a*r-l*i,u=c*i+l*n-o*r,d=c*r+o*i-a*n,p=-o*n-a*i-l*r;return e.x=h*c+p*-o+u*-l-d*-a,e.y=u*c+p*-a+d*-o-h*-l,e.z=d*c+p*-l+h*-a-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){let n,i,r;e===void 0&&(e="YZX");const o=this.x,a=this.y,l=this.z,c=this.w;if(e!=="YZX")throw new Error(`Euler order ${e} not supported yet.`);{const h=o*a+l*c;if(h>.499&&(n=2*Math.atan2(o,c),i=Math.PI/2,r=0),h<-.499&&(n=-2*Math.atan2(o,c),i=-Math.PI/2,r=0),n===void 0){const u=o*o,d=a*a,p=l*l;n=Math.atan2(2*a*c-2*o*l,1-2*d-2*p),i=Math.asin(2*h),r=Math.atan2(2*o*c-2*a*l,1-2*u-2*p)}}t.y=n,t.z=i,t.x=r}setFromEuler(t,e,n,i){i===void 0&&(i="XYZ");const r=Math.cos(t/2),o=Math.cos(e/2),a=Math.cos(n/2),l=Math.sin(t/2),c=Math.sin(e/2),h=Math.sin(n/2);return i==="XYZ"?(this.x=l*o*a+r*c*h,this.y=r*c*a-l*o*h,this.z=r*o*h+l*c*a,this.w=r*o*a-l*c*h):i==="YXZ"?(this.x=l*o*a+r*c*h,this.y=r*c*a-l*o*h,this.z=r*o*h-l*c*a,this.w=r*o*a+l*c*h):i==="ZXY"?(this.x=l*o*a-r*c*h,this.y=r*c*a+l*o*h,this.z=r*o*h+l*c*a,this.w=r*o*a-l*c*h):i==="ZYX"?(this.x=l*o*a-r*c*h,this.y=r*c*a+l*o*h,this.z=r*o*h-l*c*a,this.w=r*o*a+l*c*h):i==="YZX"?(this.x=l*o*a+r*c*h,this.y=r*c*a+l*o*h,this.z=r*o*h-l*c*a,this.w=r*o*a-l*c*h):i==="XZY"&&(this.x=l*o*a-r*c*h,this.y=r*c*a-l*o*h,this.z=r*o*h+l*c*a,this.w=r*o*a+l*c*h),this}clone(){return new me(this.x,this.y,this.z,this.w)}slerp(t,e,n){n===void 0&&(n=new me);const i=this.x,r=this.y,o=this.z,a=this.w;let l,c,h,u,d,p=t.x,f=t.y,g=t.z,m=t.w;return c=i*p+r*f+o*g+a*m,c<0&&(c=-c,p=-p,f=-f,g=-g,m=-m),1-c>1e-6?(l=Math.acos(c),h=Math.sin(l),u=Math.sin((1-e)*l)/h,d=Math.sin(e*l)/h):(u=1-e,d=e),n.x=u*i+d*p,n.y=u*r+d*f,n.z=u*o+d*g,n.w=u*a+d*m,n}integrate(t,e,n,i){i===void 0&&(i=new me);const r=t.x*n.x,o=t.y*n.y,a=t.z*n.z,l=this.x,c=this.y,h=this.z,u=this.w,d=.5*e;return i.x+=d*(r*u+o*h-a*c),i.y+=d*(o*u+a*l-r*h),i.z+=d*(a*u+r*c-o*l),i.w+=d*(-r*l-o*c-a*h),i}}const ly=new S,cy=new S,If={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class gt{constructor(t){t===void 0&&(t={}),this.id=gt.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=!t.collisionResponse||t.collisionResponse,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}gt.idCounter=0,gt.types=If;class jt{constructor(t){t===void 0&&(t={}),this.position=new S,this.quaternion=new me,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return jt.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return jt.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new S),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,n,i){return i===void 0&&(i=new S),n.vsub(t,i),e.conjugate(Xp),Xp.vmult(i,i),i}static pointToWorldFrame(t,e,n,i){return i===void 0&&(i=new S),e.vmult(n,i),i.vadd(t,i),i}static vectorToWorldFrame(t,e,n){return n===void 0&&(n=new S),t.vmult(e,n),n}static vectorToLocalFrame(t,e,n,i){return i===void 0&&(i=new S),e.w*=-1,e.vmult(n,i),e.w*=-1,i}}const Xp=new me;class Ki extends gt{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:o}=t;super({type:gt.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=n,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,n=this.uniqueEdges;n.length=0;const i=new S;for(let r=0;r!==t.length;r++){const o=t[r],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;e[o[l]].vsub(e[o[c]],i),i.normalize();let h=!1;for(let u=0;u!==n.length;u++)if(n[u].almostEquals(i)||n[u].almostEquals(i)){h=!0;break}h||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let i=0;i<this.faces[t].length;i++)if(!this.vertices[this.faces[t][i]])throw new Error(`Vertex ${this.faces[t][i]} not found!`);const e=this.faceNormals[t]||new S;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const n=this.vertices[this.faces[t][0]];if(e.dot(n)<0)for(let i=0;i<this.faces[t].length;i++);}}getFaceNormal(t,e){const n=this.faces[t],i=this.vertices[n[0]],r=this.vertices[n[1]],o=this.vertices[n[2]];Ki.computeNormal(i,r,o,e)}static computeNormal(t,e,n,i){const r=new S,o=new S;e.vsub(t,o),n.vsub(e,r),r.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(t,e,n,i,r,o,a,l,c){const h=new S;let u=-1,d=-Number.MAX_VALUE;for(let f=0;f<n.faces.length;f++){h.copy(n.faceNormals[f]),r.vmult(h,h);const g=h.dot(o);g>d&&(d=g,u=f)}const p=[];for(let f=0;f<n.faces[u].length;f++){const g=n.vertices[n.faces[u][f]],m=new S;m.copy(g),r.vmult(m,m),i.vadd(m,m),p.push(m)}u>=0&&this.clipFaceAgainstHull(o,t,e,p,a,l,c)}findSeparatingAxis(t,e,n,i,r,o,a,l){const c=new S,h=new S,u=new S,d=new S,p=new S,f=new S;let g=Number.MAX_VALUE;const m=this;if(m.uniqueAxes)for(let x=0;x!==m.uniqueAxes.length;x++){n.vmult(m.uniqueAxes[x],c);const _=m.testSepAxis(c,t,e,n,i,r);if(_===!1)return!1;_<g&&(g=_,o.copy(c))}else{const x=a?a.length:m.faces.length;for(let _=0;_<x;_++){const y=a?a[_]:_;c.copy(m.faceNormals[y]),n.vmult(c,c);const A=m.testSepAxis(c,t,e,n,i,r);if(A===!1)return!1;A<g&&(g=A,o.copy(c))}}if(t.uniqueAxes)for(let x=0;x!==t.uniqueAxes.length;x++){r.vmult(t.uniqueAxes[x],h);const _=m.testSepAxis(h,t,e,n,i,r);if(_===!1)return!1;_<g&&(g=_,o.copy(h))}else{const x=l?l.length:t.faces.length;for(let _=0;_<x;_++){const y=l?l[_]:_;h.copy(t.faceNormals[y]),r.vmult(h,h);const A=m.testSepAxis(h,t,e,n,i,r);if(A===!1)return!1;A<g&&(g=A,o.copy(h))}}for(let x=0;x!==m.uniqueEdges.length;x++){n.vmult(m.uniqueEdges[x],d);for(let _=0;_!==t.uniqueEdges.length;_++)if(r.vmult(t.uniqueEdges[_],p),d.cross(p,f),!f.almostZero()){f.normalize();const y=m.testSepAxis(f,t,e,n,i,r);if(y===!1)return!1;y<g&&(g=y,o.copy(f))}}return i.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,n,i,r,o){Ki.project(this,t,n,i,eu),Ki.project(e,t,r,o,nu);const a=eu[0],l=eu[1],c=nu[0],h=nu[1];if(a<h||c<l)return!1;const u=a-h,d=c-l;return u<d?u:d}calculateLocalInertia(t,e){const n=new S,i=new S;this.computeLocalAABB(i,n);const r=n.x-i.x,o=n.y-i.y,a=n.z-i.z;e.x=1/12*t*(2*o*2*o+2*a*2*a),e.y=1/12*t*(2*r*2*r+2*a*2*a),e.z=1/12*t*(2*o*2*o+2*r*2*r)}getPlaneConstantOfFace(t){const e=this.faces[t],n=this.faceNormals[t],i=this.vertices[e[0]];return-n.dot(i)}clipFaceAgainstHull(t,e,n,i,r,o,a){const l=new S,c=new S,h=new S,u=new S,d=new S,p=new S,f=new S,g=new S,m=this,x=i,_=[];let y=-1,A=Number.MAX_VALUE;for(let C=0;C<m.faces.length;C++){l.copy(m.faceNormals[C]),n.vmult(l,l);const T=l.dot(t);T<A&&(A=T,y=C)}if(y<0)return;const b=m.faces[y];b.connectedFaces=[];for(let C=0;C<m.faces.length;C++)for(let T=0;T<m.faces[C].length;T++)b.indexOf(m.faces[C][T])!==-1&&C!==y&&b.connectedFaces.indexOf(C)===-1&&b.connectedFaces.push(C);const v=b.length;for(let C=0;C<v;C++){const T=m.vertices[b[C]],E=m.vertices[b[(C+1)%v]];T.vsub(E,c),h.copy(c),n.vmult(h,h),e.vadd(h,h),u.copy(this.faceNormals[y]),n.vmult(u,u),e.vadd(u,u),h.cross(u,d),d.negate(d),p.copy(T),n.vmult(p,p),e.vadd(p,p);const D=b.connectedFaces[C];f.copy(this.faceNormals[D]);const R=this.getPlaneConstantOfFace(D);g.copy(f),n.vmult(g,g);const P=R-g.dot(e);for(this.clipFaceAgainstPlane(x,_,g,P);x.length;)x.shift();for(;_.length;)x.push(_.shift())}f.copy(this.faceNormals[y]);const w=this.getPlaneConstantOfFace(y);g.copy(f),n.vmult(g,g);const M=w-g.dot(e);for(let C=0;C<x.length;C++){let T=g.dot(x[C])+M;if(T<=r&&(T=r),T<=o){const E=x[C];if(T<=1e-6){const D={point:E,normal:g,depth:T};a.push(D)}}}}clipFaceAgainstPlane(t,e,n,i){let r,o;const a=t.length;if(a<2)return e;let l=t[t.length-1],c=t[0];r=n.dot(l)+i;for(let h=0;h<a;h++){if(c=t[h],o=n.dot(c)+i,r<0)if(o<0){const u=new S;u.copy(c),e.push(u)}else{const u=new S;l.lerp(c,r/(r-o),u),e.push(u)}else if(o<0){const u=new S;l.lerp(c,r/(r-o),u),e.push(u),e.push(c)}l=c,r=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new S);const n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)e.vmult(n[r],i[r]),t.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const n=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const r=n[i];r.x<t.x?t.x=r.x:r.x>e.x&&(e.x=r.x),r.y<t.y?t.y=r.y:r.y>e.y&&(e.y=r.y),r.z<t.z?t.z=r.z:r.z>e.z&&(e.z=r.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new S);const n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==e;r++)t.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let n=0;n!==e.length;n++){const i=e[n].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,i){const r=this.vertices;let o,a,l,c,h,u,d=new S;for(let p=0;p<r.length;p++){d.copy(r[p]),e.vmult(d,d),t.vadd(d,d);const f=d;(o===void 0||f.x<o)&&(o=f.x),(c===void 0||f.x>c)&&(c=f.x),(a===void 0||f.y<a)&&(a=f.y),(h===void 0||f.y>h)&&(h=f.y),(l===void 0||f.z<l)&&(l=f.z),(u===void 0||f.z>u)&&(u=f.z)}n.set(o,a,l),i.set(c,h,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new S);const e=this.vertices;for(let n=0;n<e.length;n++)t.vadd(e[n],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const n=this.vertices.length,i=this.vertices;if(e){for(let r=0;r<n;r++){const o=i[r];e.vmult(o,o)}for(let r=0;r<this.faceNormals.length;r++){const o=this.faceNormals[r];e.vmult(o,o)}}if(t)for(let r=0;r<n;r++){const o=i[r];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,n=this.faces,i=this.faceNormals,r=new S;this.getAveragePointLocal(r);for(let o=0;o<this.faces.length;o++){let a=i[o];const l=e[n[o][0]],c=new S;t.vsub(l,c);const h=a.dot(c),u=new S;r.vsub(l,u);const d=a.dot(u);if(h<0&&d>0||h>0&&d<0)return!1}return-1}static project(t,e,n,i,r){const o=t.vertices.length,a=hy;let l=0,c=0;const h=uy,u=t.vertices;h.setZero(),jt.vectorToLocalFrame(n,i,e,a),jt.pointToLocalFrame(n,i,h,h);const d=h.dot(a);c=l=u[0].dot(a);for(let p=1;p<o;p++){const f=u[p].dot(a);f>l&&(l=f),f<c&&(c=f)}if(c-=d,l-=d,c>l){const p=c;c=l,l=p}r[0]=l,r[1]=c}}const eu=[],nu=[];new S;const hy=new S,uy=new S;class Ve extends gt{constructor(t){super({type:gt.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,n=this.halfExtents.z,i=S,r=[new i(-t,-e,-n),new i(t,-e,-n),new i(t,e,-n),new i(-t,e,-n),new i(-t,-e,n),new i(t,-e,n),new i(t,e,n),new i(-t,e,n)],o=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],a=new Ki({vertices:r,faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:o});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new S),Ve.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,n){const i=t;n.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),n.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),n.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const n=t,i=this.halfExtents;if(n[0].set(i.x,0,0),n[1].set(0,i.y,0),n[2].set(0,0,i.z),n[3].set(-i.x,0,0),n[4].set(0,-i.y,0),n[5].set(0,0,-i.z),e!==void 0)for(let r=0;r!==n.length;r++)e.vmult(n[r],n[r]);return n}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,n){const i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<r.length;o++)ms.set(r[o][0],r[o][1],r[o][2]),e.vmult(ms,ms),t.vadd(ms,ms),n(ms.x,ms.y,ms.z)}calculateWorldAABB(t,e,n,i){const r=this.halfExtents;_i[0].set(r.x,r.y,r.z),_i[1].set(-r.x,r.y,r.z),_i[2].set(-r.x,-r.y,r.z),_i[3].set(-r.x,-r.y,-r.z),_i[4].set(r.x,-r.y,-r.z),_i[5].set(r.x,r.y,-r.z),_i[6].set(-r.x,r.y,-r.z),_i[7].set(r.x,-r.y,r.z);const o=_i[0];e.vmult(o,o),t.vadd(o,o),i.copy(o),n.copy(o);for(let a=1;a<8;a++){const l=_i[a];e.vmult(l,l),t.vadd(l,l);const c=l.x,h=l.y,u=l.z;c>i.x&&(i.x=c),h>i.y&&(i.y=h),u>i.z&&(i.z=u),c<n.x&&(n.x=c),h<n.y&&(n.y=h),u<n.z&&(n.z=u)}}}const ms=new S,_i=[new S,new S,new S,new S,new S,new S,new S,new S],kl={DYNAMIC:1,STATIC:2,KINEMATIC:4},Ul={AWAKE:0,SLEEPY:1,SLEEPING:2};class vt extends Qu{constructor(t){t===void 0&&(t={}),super(),this.id=vt.idCounter++,this.index=-1,this.world=null,this.vlambda=new S,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse!="boolean"||t.collisionResponse,this.position=new S,this.previousPosition=new S,this.interpolatedPosition=new S,this.initPosition=new S,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new S,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new S,this.force=new S;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?vt.STATIC:vt.DYNAMIC,typeof t.type==typeof vt.STATIC&&(this.type=t.type),this.allowSleep=t.allowSleep===void 0||t.allowSleep,this.sleepState=vt.AWAKE,this.sleepSpeedLimit=t.sleepSpeedLimit!==void 0?t.sleepSpeedLimit:.1,this.sleepTimeLimit=t.sleepTimeLimit!==void 0?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new S,this.quaternion=new me,this.initQuaternion=new me,this.previousQuaternion=new me,this.interpolatedQuaternion=new me,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new S,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new S,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new S,this.invInertia=new S,this.invInertiaWorld=new zn,this.invMassSolve=0,this.invInertiaSolve=new S,this.invInertiaWorldSolve=new zn,this.fixedRotation=t.fixedRotation!==void 0&&t.fixedRotation,this.angularDamping=t.angularDamping!==void 0?t.angularDamping:.01,this.linearFactor=new S(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new S(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new le,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new S,this.isTrigger=!!t.isTrigger,t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=vt.AWAKE,this.wakeUpAfterNarrowphase=!1,t===vt.SLEEPING&&this.dispatchEvent(vt.wakeupEvent)}sleep(){this.sleepState=vt.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===vt.AWAKE&&n<i?(this.sleepState=vt.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(vt.sleepyEvent)):e===vt.SLEEPY&&n>i?this.wakeUp():e===vt.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(vt.sleepEvent))}}updateSolveMassProperties(){this.sleepState===vt.SLEEPING||this.type===vt.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new S),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new S),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new S),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new S),this.quaternion.vmult(t,e),e}addShape(t,e,n){const i=new S,r=new me;return e&&i.copy(e),n&&r.copy(n),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?this:(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,n=t.length;let i=0;for(let r=0;r!==n;r++){const o=t[r];o.updateBoundingSphereRadius();const a=e[r].length(),l=o.boundingSphereRadius;a+l>i&&(i=a+l)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,n=this.shapeOrientations,i=t.length,r=dy,o=py,a=this.quaternion,l=this.aabb,c=my;for(let h=0;h!==i;h++){const u=t[h];a.vmult(e[h],r),r.vadd(this.position,r),a.mult(n[h],o),u.calculateWorldAABB(r,o,c.lowerBound,c.upperBound),h===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){const n=fy,i=gy;n.setRotationFromQuaternion(this.quaternion),n.transpose(i),n.scale(e,n),n.mmult(i,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new S),this.type!==vt.DYNAMIC)return;this.sleepState===vt.SLEEPING&&this.wakeUp();const n=_y;e.cross(t,n),this.force.vadd(t,this.force),this.torque.vadd(n,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new S),this.type!==vt.DYNAMIC)return;const n=vy,i=yy;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyForce(n,i)}applyTorque(t){this.type===vt.DYNAMIC&&(this.sleepState===vt.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new S),this.type!==vt.DYNAMIC)return;this.sleepState===vt.SLEEPING&&this.wakeUp();const n=e,i=xy;i.copy(t),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const r=wy;n.cross(t,r),this.invInertiaWorld.vmult(r,r),this.angularVelocity.vadd(r,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new S),this.type!==vt.DYNAMIC)return;const n=by,i=Sy;this.vectorToWorldFrame(t,n),this.vectorToWorldFrame(e,i),this.applyImpulse(n,i)}updateMassProperties(){const t=My;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,n=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Ve.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!n?1/e.x:0,e.y>0&&!n?1/e.y:0,e.z>0&&!n?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const n=new S;return t.vsub(this.position,n),this.angularVelocity.cross(n,e),this.velocity.vadd(e,e),e}integrate(t,e,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),this.type!==vt.DYNAMIC&&this.type!==vt.KINEMATIC||this.sleepState===vt.SLEEPING)return;const i=this.velocity,r=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,h=this.invMass,u=this.invInertiaWorld,d=this.linearFactor,p=h*t;i.x+=a.x*p*d.x,i.y+=a.y*p*d.y,i.z+=a.z*p*d.z;const f=u.elements,g=this.angularFactor,m=l.x*g.x,x=l.y*g.y,_=l.z*g.z;r.x+=t*(f[0]*m+f[1]*x+f[2]*_),r.y+=t*(f[3]*m+f[4]*x+f[5]*_),r.z+=t*(f[6]*m+f[7]*x+f[8]*_),o.x+=i.x*t,o.y+=i.y*t,o.z+=i.z*t,c.integrate(this.angularVelocity,t,this.angularFactor,c),e&&(n?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}vt.idCounter=0,vt.COLLIDE_EVENT_NAME="collide",vt.DYNAMIC=kl.DYNAMIC,vt.STATIC=kl.STATIC,vt.KINEMATIC=kl.KINEMATIC,vt.AWAKE=Ul.AWAKE,vt.SLEEPY=Ul.SLEEPY,vt.SLEEPING=Ul.SLEEPING,vt.wakeupEvent={type:"wakeup"},vt.sleepyEvent={type:"sleepy"},vt.sleepEvent={type:"sleep"};const dy=new S,py=new me,my=new le,fy=new zn,gy=new zn;new zn;const _y=new S,vy=new S,yy=new S,xy=new S,wy=new S,by=new S,Sy=new S,My=new S;class Kl{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,n){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return(t.collisionFilterGroup&e.collisionFilterMask)!==0&&(e.collisionFilterGroup&t.collisionFilterMask)!==0&&((t.type&vt.STATIC)===0&&t.sleepState!==vt.SLEEPING||(e.type&vt.STATIC)===0&&e.sleepState!==vt.SLEEPING)}intersectionTest(t,e,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,n,i):this.doBoundingSphereBroadphase(t,e,n,i)}doBoundingSphereBroadphase(t,e,n,i){const r=Ty;e.position.vsub(t.position,r);const o=(t.boundingRadius+e.boundingRadius)**2;r.lengthSquared()<o&&(n.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,n,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(n.push(t),i.push(e))}makePairsUnique(t,e){const n=Ey,i=Ay,r=Cy,o=t.length;for(let a=0;a!==o;a++)i[a]=t[a],r[a]=e[a];t.length=0,e.length=0;for(let a=0;a!==o;a++){const l=i[a].id,c=r[a].id,h=l<c?`${l},${c}`:`${c},${l}`;n[h]=a,n.keys.push(h)}for(let a=0;a!==n.keys.length;a++){const l=n.keys.pop(),c=n[l];t.push(i[c]),e.push(r[c]),delete n[l]}}setWorld(t){}static boundingSphereCheck(t,e){const n=new S;t.position.vsub(e.position,n);const i=t.shapes[0],r=e.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(t,e,n){return[]}}const Ty=new S;new S,new me,new S;const Ey={keys:[]},Ay=[],Cy=[];new S;const Ry=new S;new S;class Lf extends Kl{constructor(){super()}collisionPairs(t,e,n){const i=t.bodies,r=i.length;let o,a;for(let l=0;l!==r;l++)for(let c=0;c!==l;c++)o=i[l],a=i[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,e,n)}aabbQuery(t,e,n){n===void 0&&(n=[]);for(let i=0;i<t.bodies.length;i++){const r=t.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(e)&&n.push(r)}return n}}class no{constructor(){this.rayFromWorld=new S,this.rayToWorld=new S,this.hitNormalWorld=new S,this.hitPointWorld=new S,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,n,i,r,o,a){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=o,this.distance=a}}let Of,Ff,Nf,kf,Uf,zf,Bf;const zl={CLOSEST:1,ANY:2,ALL:4};Of=gt.types.SPHERE,Ff=gt.types.PLANE,Nf=gt.types.BOX,kf=gt.types.CYLINDER,Uf=gt.types.CONVEXPOLYHEDRON,zf=gt.types.HEIGHTFIELD,Bf=gt.types.TRIMESH;class Me{get[Of](){return this._intersectSphere}get[Ff](){return this._intersectPlane}get[Nf](){return this._intersectBox}get[kf](){return this._intersectConvex}get[Uf](){return this._intersectConvex}get[zf](){return this._intersectHeightfield}get[Bf](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new S),e===void 0&&(e=new S),this.from=t.clone(),this.to=e.clone(),this.direction=new S,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=Me.ANY,this.result=new no,this.hasHit=!1,this.callback=n=>{}}intersectWorld(t,e){return this.mode=e.mode||Me.ANY,this.result=e.result||new no,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=e.collisionFilterMask!==void 0?e.collisionFilterMask:-1,this.collisionFilterGroup=e.collisionFilterGroup!==void 0?e.collisionFilterGroup:-1,this.checkCollisionResponse=e.checkCollisionResponse===void 0||e.checkCollisionResponse,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(Yp),iu.length=0,t.broadphase.aabbQuery(t,Yp,iu),this.intersectBodies(iu),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const n=this.checkCollisionResponse;if(n&&!t.collisionResponse||!(this.collisionFilterGroup&t.collisionFilterMask)||!(t.collisionFilterGroup&this.collisionFilterMask))return;const i=Dy,r=Py;for(let o=0,a=t.shapes.length;o<a;o++){const l=t.shapes[o];if((!n||l.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],r),t.quaternion.vmult(t.shapeOffsets[o],i),i.vadd(t.position,i),this.intersectShape(l,r,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let n=0,i=t.length;!this.result.shouldStop&&n<i;n++)this.intersectBody(t[n])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,n,i){if(function(a,l,c){c.vsub(a,qs);const h=qs.dot(l);return l.scale(h,vl),vl.vadd(a,vl),c.distanceTo(vl)}(this.from,this.direction,n)>t.boundingSphereRadius)return;const o=this[t.type];o&&o.call(this,t,e,n,i,t)}_intersectBox(t,e,n,i,r){return this._intersectConvex(t.convexPolyhedronRepresentation,e,n,i,r)}_intersectPlane(t,e,n,i,r){const o=this.from,a=this.to,l=this.direction,c=new S(0,0,1);e.vmult(c,c);const h=new S;o.vsub(n,h);const u=h.dot(c);if(a.vsub(n,h),u*h.dot(c)>0||o.distanceTo(a)<u)return;const d=c.dot(l);if(Math.abs(d)<this.precision)return;const p=new S,f=new S,g=new S;o.vsub(n,p);const m=-c.dot(p)/d;l.scale(m,f),o.vadd(f,g),this.reportIntersection(c,g,r,i,-1)}getAABB(t){const{lowerBound:e,upperBound:n}=t,i=this.to,r=this.from;e.x=Math.min(i.x,r.x),e.y=Math.min(i.y,r.y),e.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(t,e,n,i,r){const o=Iy;o.from.copy(this.from),o.to.copy(this.to),jt.pointToLocalFrame(n,e,o.from,o.from),jt.pointToLocalFrame(n,e,o.to,o.to),o.updateDirection();const a=Ly;let l,c,h,u;l=c=0,h=u=t.data.length-1;const d=new le;o.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,a,!0),h=Math.min(h,a[0]+1),u=Math.min(u,a[1]+1);for(let p=l;p<h;p++)for(let f=c;f<u;f++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(p,f,d),d.overlapsRay(o)){if(t.getConvexTrianglePillar(p,f,!1),jt.pointToWorldFrame(n,e,t.pillarOffset,_l),this._intersectConvex(t.pillarConvex,e,_l,i,r,$p),this.result.shouldStop)return;t.getConvexTrianglePillar(p,f,!0),jt.pointToWorldFrame(n,e,t.pillarOffset,_l),this._intersectConvex(t.pillarConvex,e,_l,i,r,$p)}}}_intersectSphere(t,e,n,i,r){const o=this.from,a=this.to,l=t.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,h=2*((a.x-o.x)*(o.x-n.x)+(a.y-o.y)*(o.y-n.y)+(a.z-o.z)*(o.z-n.z)),u=h**2-4*c*((o.x-n.x)**2+(o.y-n.y)**2+(o.z-n.z)**2-l**2),d=Oy,p=Fy;if(!(u<0))if(u===0)o.lerp(a,u,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,r,i,-1);else{const f=(-h-Math.sqrt(u))/(2*c),g=(-h+Math.sqrt(u))/(2*c);if(f>=0&&f<=1&&(o.lerp(a,f,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,r,i,-1)),this.result.shouldStop)return;g>=0&&g<=1&&(o.lerp(a,g,d),d.vsub(n,p),p.normalize(),this.reportIntersection(p,d,r,i,-1))}}_intersectConvex(t,e,n,i,r,o){const a=Ny,l=Zp,c=o&&o.faceList||null,h=t.faces,u=t.vertices,d=t.faceNormals,p=this.direction,f=this.from,g=this.to,m=f.distanceTo(g),x=c?c.length:h.length,_=this.result;for(let y=0;!_.shouldStop&&y<x;y++){const A=c?c[y]:y,b=h[A],v=d[A],w=e,M=n;l.copy(u[b[0]]),w.vmult(l,l),l.vadd(M,l),l.vsub(f,l),w.vmult(v,a);const C=p.dot(a);if(Math.abs(C)<this.precision)continue;const T=a.dot(l)/C;if(!(T<0)){p.scale(T,mn),mn.vadd(f,mn),Qn.copy(u[b[0]]),w.vmult(Qn,Qn),M.vadd(Qn,Qn);for(let E=1;!_.shouldStop&&E<b.length-1;E++){vi.copy(u[b[E]]),yi.copy(u[b[E+1]]),w.vmult(vi,vi),w.vmult(yi,yi),M.vadd(vi,vi),M.vadd(yi,yi);const D=mn.distanceTo(f);!Me.pointInTriangle(mn,Qn,vi,yi)&&!Me.pointInTriangle(mn,vi,Qn,yi)||D>m||this.reportIntersection(a,mn,r,i,A)}}}}_intersectTrimesh(t,e,n,i,r,o){const a=ky,l=Wy,c=Gy,h=Zp,u=Uy,d=zy,p=By,f=qy,g=Vy,m=t.indices,x=this.from,_=this.to,y=this.direction;c.position.copy(n),c.quaternion.copy(e),jt.vectorToLocalFrame(n,e,y,u),jt.pointToLocalFrame(n,e,x,d),jt.pointToLocalFrame(n,e,_,p),p.x*=t.scale.x,p.y*=t.scale.y,p.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,p.vsub(d,u),u.normalize();const A=d.distanceSquared(p);t.tree.rayQuery(this,c,l);for(let b=0,v=l.length;!this.result.shouldStop&&b!==v;b++){const w=l[b];t.getNormal(w,a),t.getVertex(m[3*w],Qn),Qn.vsub(d,h);const M=u.dot(a),C=a.dot(h)/M;if(C<0)continue;u.scale(C,mn),mn.vadd(d,mn),t.getVertex(m[3*w+1],vi),t.getVertex(m[3*w+2],yi);const T=mn.distanceSquared(d);!Me.pointInTriangle(mn,vi,Qn,yi)&&!Me.pointInTriangle(mn,Qn,vi,yi)||T>A||(jt.vectorToWorldFrame(e,a,g),jt.pointToWorldFrame(n,e,mn,f),this.reportIntersection(g,f,r,i,w))}l.length=0}reportIntersection(t,e,n,i,r){const o=this.from,a=this.to,l=o.distanceTo(e),c=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(c.hitFaceIndex=r!==void 0?r:-1,this.mode){case Me.ALL:this.hasHit=!0,c.set(o,a,t,e,n,i,l),c.hasHit=!0,this.callback(c);break;case Me.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l));break;case Me.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,t,e,n,i,l),c.shouldStop=!0}}static pointInTriangle(t,e,n,i){i.vsub(e,qs),n.vsub(e,ra),t.vsub(e,su);const r=qs.dot(qs),o=qs.dot(ra),a=qs.dot(su),l=ra.dot(ra),c=ra.dot(su);let h,u;return(h=l*a-o*c)>=0&&(u=r*c-o*a)>=0&&h+u<r*l-o*o}}Me.CLOSEST=zl.CLOSEST,Me.ANY=zl.ANY,Me.ALL=zl.ALL;const Yp=new le,iu=[],ra=new S,su=new S,Dy=new S,Py=new me,mn=new S,Qn=new S,vi=new S,yi=new S;new S,new no;const $p={faceList:[0]},_l=new S,Iy=new Me,Ly=[],Oy=new S,Fy=new S,Ny=new S;new S,new S;const Zp=new S,ky=new S,Uy=new S,zy=new S,By=new S,Vy=new S,qy=new S;new le;const Wy=[],Gy=new jt,qs=new S,vl=new S;class Ks extends Kl{static checkBounds(t,e,n){let i,r;n===0?(i=t.position.x,r=e.position.x):n===1?(i=t.position.y,r=e.position.y):n===2&&(i=t.position.z,r=e.position.z);const o=t.boundingRadius;return r-e.boundingRadius<i+o}static insertionSortX(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.x<=i.aabb.lowerBound.x);r--)t[r+1]=t[r];t[r+1]=i}return t}static insertionSortY(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.y<=i.aabb.lowerBound.y);r--)t[r+1]=t[r];t[r+1]=i}return t}static insertionSortZ(t){for(let e=1,n=t.length;e<n;e++){const i=t[e];let r;for(r=e-1;r>=0&&!(t[r].aabb.lowerBound.z<=i.aabb.lowerBound.z);r--)t[r+1]=t[r];t[r+1]=i}return t}constructor(t){super(),this.axisList=[],this.world=null,this.axisIndex=0;const e=this.axisList;this._addBodyHandler=n=>{e.push(n.body)},this._removeBodyHandler=n=>{const i=e.indexOf(n.body);i!==-1&&e.splice(i,1)},t&&this.setWorld(t)}setWorld(t){this.axisList.length=0;for(let e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0}collisionPairs(t,e,n){const i=this.axisList,r=i.length,o=this.axisIndex;let a,l;for(this.dirty&&(this.sortList(),this.dirty=!1),a=0;a!==r;a++){const c=i[a];for(l=a+1;l<r;l++){const h=i[l];if(this.needBroadphaseCollision(c,h)){if(!Ks.checkBounds(c,h,o))break;this.intersectionTest(c,h,e,n)}}}}sortList(){const t=this.axisList,e=this.axisIndex,n=t.length;for(let i=0;i!==n;i++){const r=t[i];r.aabbNeedsUpdate&&r.updateAABB()}e===0?Ks.insertionSortX(t):e===1?Ks.insertionSortY(t):e===2&&Ks.insertionSortZ(t)}autoDetectAxis(){let t=0,e=0,n=0,i=0,r=0,o=0;const a=this.axisList,l=a.length,c=1/l;for(let p=0;p!==l;p++){const f=a[p],g=f.position.x;t+=g,e+=g*g;const m=f.position.y;n+=m,i+=m*m;const x=f.position.z;r+=x,o+=x*x}const h=e-t*t*c,u=i-n*n*c,d=o-r*r*c;this.axisIndex=h>u?h>d?0:2:u>d?1:2}aabbQuery(t,e,n){n===void 0&&(n=[]),this.dirty&&(this.sortList(),this.dirty=!1);const i=this.axisList;for(let r=0;r<i.length;r++){const o=i[r];o.aabbNeedsUpdate&&o.updateAABB(),o.aabb.overlaps(e)&&n.push(o)}return n}}class hh{static defaults(t,e){t===void 0&&(t={});for(let n in e)n in t||(t[n]=e[n]);return t}}class io{constructor(t,e,n){n===void 0&&(n={}),n=hh.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=io.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}io.idCounter=0;class yu{constructor(){this.spatial=new S,this.rotational=new S}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class os{constructor(t,e,n,i){n===void 0&&(n=-1e6),i===void 0&&(i=1e6),this.id=os.idCounter++,this.minForce=n,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new yu,this.jacobianElementB=new yu,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,n){const i=e,r=t,o=n;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*r*(1+4*i))}computeB(t,e,n){const i=this.computeGW();return-this.computeGq()*t-i*e-this.computeGiMf()*n}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,o=i.position;return t.spatial.dot(r)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,o=i.velocity,a=n.angularVelocity,l=i.angularVelocity;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,o=i.vlambda,a=n.wlambda,l=i.wlambda;return t.multiplyVectors(r,a)+e.multiplyVectors(o,l)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,o=n.torque,a=i.force,l=i.torque,c=n.invMassSolve,h=i.invMassSolve;return r.scale(c,Kp),a.scale(h,Qp),n.invInertiaWorldSolve.vmult(o,Jp),i.invInertiaWorldSolve.vmult(l,tm),t.multiplyVectors(Kp,Jp)+e.multiplyVectors(Qp,tm)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,o=i.invMassSolve,a=n.invInertiaWorldSolve,l=i.invInertiaWorldSolve;let c=r+o;return a.vmult(t.rotational,yl),c+=yl.dot(t.rotational),l.vmult(e.rotational,yl),c+=yl.dot(e.rotational),c}addToWlambda(t){const e=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj,o=Hy;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*t,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,o),r.wlambda.addScaledVector(t,o,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}os.idCounter=0;const Kp=new S,Qp=new S,Jp=new S,tm=new S,yl=new S,Hy=new S;class Yr extends os{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,0,n),this.restitution=0,this.ri=new S,this.rj=new S,this.ni=new S}computeB(t){const e=this.a,n=this.b,i=this.bi,r=this.bj,o=this.ri,a=this.rj,l=jy,c=Xy,h=i.velocity,u=i.angularVelocity,d=r.velocity,p=r.angularVelocity,f=Yy,g=this.jacobianElementA,m=this.jacobianElementB,x=this.ni;o.cross(x,l),a.cross(x,c),x.negate(g.spatial),l.negate(g.rotational),m.spatial.copy(x),m.rotational.copy(c),f.copy(r.position),f.vadd(a,f),f.vsub(i.position,f),f.vsub(o,f);const _=x.dot(f),y=this.restitution+1;return-_*e-(y*d.dot(x)-y*h.dot(x)+p.dot(c)-u.dot(l))*n-t*this.computeGiMf()}getImpactVelocityAlongNormal(){const t=$y,e=Zy,n=Ky,i=Qy,r=Jy;return this.bi.position.vadd(this.ri,n),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(n,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,r),this.ni.dot(r)}}const jy=new S,Xy=new S,Yy=new S,$y=new S,Zy=new S,Ky=new S,Qy=new S,Jy=new S;class Bl extends io{constructor(t,e,n,i,r){e===void 0&&(e=new S),i===void 0&&(i=new S),r===void 0&&(r=1e6),super(t,n),this.pivotA=e.clone(),this.pivotB=i.clone();const o=this.equationX=new Yr(t,n),a=this.equationY=new Yr(t,n),l=this.equationZ=new Yr(t,n);this.equations.push(o,a,l),o.minForce=a.minForce=l.minForce=-r,o.maxForce=a.maxForce=l.maxForce=r,o.ni.set(1,0,0),a.ni.set(0,1,0),l.ni.set(0,0,1)}update(){const t=this.bodyA,e=this.bodyB,n=this.equationX,i=this.equationY,r=this.equationZ;t.quaternion.vmult(this.pivotA,n.ri),e.quaternion.vmult(this.pivotB,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),r.ri.copy(n.ri),r.rj.copy(n.rj)}}class tx extends os{constructor(t,e,n){n===void 0&&(n={});const i=n.maxForce!==void 0?n.maxForce:1e6;super(t,e,-i,i),this.axisA=n.axisA?n.axisA.clone():new S(1,0,0),this.axisB=n.axisB?n.axisB.clone():new S(0,1,0),this.angle=n.angle!==void 0?n.angle:0}computeB(t){const e=this.a,n=this.b,i=this.axisA,r=this.axisB,o=ex,a=nx,l=this.jacobianElementA,c=this.jacobianElementB;return i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o),-(Math.cos(this.angle)-i.dot(r))*e-this.computeGW()*n-t*this.computeGiMf()}}const ex=new S,nx=new S;class Ys extends os{constructor(t,e,n){n===void 0&&(n={});const i=n.maxForce!==void 0?n.maxForce:1e6;super(t,e,-i,i),this.axisA=n.axisA?n.axisA.clone():new S(1,0,0),this.axisB=n.axisB?n.axisB.clone():new S(0,1,0),this.maxAngle=Math.PI/2}computeB(t){const e=this.a,n=this.b,i=this.axisA,r=this.axisB,o=ix,a=sx,l=this.jacobianElementA,c=this.jacobianElementB;return i.cross(r,o),r.cross(i,a),l.rotational.copy(a),c.rotational.copy(o),-(Math.cos(this.maxAngle)-i.dot(r))*e-this.computeGW()*n-t*this.computeGiMf()}}const ix=new S,sx=new S;new S,new S;new S,new S;class Vf extends os{constructor(t,e,n){n===void 0&&(n=1e6),super(t,e,-n,n),this.axisA=new S,this.axisB=new S,this.targetVelocity=0}computeB(t){const e=this.b,n=this.axisA,i=this.axisB,r=this.jacobianElementA,o=this.jacobianElementB;return r.rotational.copy(n),i.negate(o.rotational),-(this.computeGW()-this.targetVelocity)*e-t*this.computeGiMf()}}class em extends Bl{constructor(t,e,n){n===void 0&&(n={});const i=n.maxForce!==void 0?n.maxForce:1e6;super(t,n.pivotA?n.pivotA.clone():new S,e,n.pivotB?n.pivotB.clone():new S,i),(this.axisA=n.axisA?n.axisA.clone():new S(1,0,0)).normalize(),(this.axisB=n.axisB?n.axisB.clone():new S(1,0,0)).normalize(),this.collideConnected=!!n.collideConnected;const r=this.rotationalEquation1=new Ys(t,e,n),o=this.rotationalEquation2=new Ys(t,e,n),a=this.motorEquation=new Vf(t,e,i);a.enabled=!1,this.equations.push(r,o,a)}enableMotor(){this.motorEquation.enabled=!0}disableMotor(){this.motorEquation.enabled=!1}setMotorSpeed(t){this.motorEquation.targetVelocity=t}setMotorMaxForce(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t}update(){const t=this.bodyA,e=this.bodyB,n=this.motorEquation,i=this.rotationalEquation1,r=this.rotationalEquation2,o=rx,a=ox,l=this.axisA,c=this.axisB;super.update(),t.quaternion.vmult(l,o),e.quaternion.vmult(c,a),o.tangents(i.axisA,r.axisA),i.axisB.copy(a),r.axisB.copy(a),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,n.axisA),e.quaternion.vmult(this.axisB,n.axisB))}}const rx=new S,ox=new S;class xu extends os{constructor(t,e,n){super(t,e,-n,n),this.ri=new S,this.rj=new S,this.t=new S}computeB(t){const e=this.b,n=this.ri,i=this.rj,r=ax,o=lx,a=this.t;n.cross(a,r),i.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;return a.negate(l.spatial),r.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o),-this.computeGW()*e-t*this.computeGiMf()}}const ax=new S,lx=new S;class ko{constructor(t,e,n){n=hh.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=ko.idCounter++,this.materials=[t,e],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}ko.idCounter=0;class as{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=as.idCounter++,this.friction=t.friction!==void 0?t.friction:-1,this.restitution=t.restitution!==void 0?t.restitution:-1}}as.idCounter=0;const cx=new S,hx=new S,ux=new S,dx=new S,px=new S,mx=new S,fx=new S,gx=new S,_x=new S,vx=new S,yx=new S;class nm{constructor(t){t===void 0&&(t={}),t=hh.defaults(t,{chassisConnectionPointLocal:new S,chassisConnectionPointWorld:new S,directionLocal:new S,directionWorld:new S,axleLocal:new S,axleWorld:new S,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:10.5,forwardAcceleration:1,sideAcceleration:1,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,slipInfo:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=t.maxSuspensionTravel,this.customSlidingRotationalSpeed=t.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=t.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=t.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=t.chassisConnectionPointWorld.clone(),this.directionLocal=t.directionLocal.clone(),this.directionWorld=t.directionWorld.clone(),this.axleLocal=t.axleLocal.clone(),this.axleWorld=t.axleWorld.clone(),this.suspensionRestLength=t.suspensionRestLength,this.suspensionMaxLength=t.suspensionMaxLength,this.radius=t.radius,this.suspensionStiffness=t.suspensionStiffness,this.dampingCompression=t.dampingCompression,this.dampingRelaxation=t.dampingRelaxation,this.frictionSlip=t.frictionSlip,this.forwardAcceleration=t.forwardAcceleration,this.sideAcceleration=t.sideAcceleration,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=t.rollInfluence,this.maxSuspensionForce=t.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=t.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.slipInfo=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new no,this.worldTransform=new jt,this.isInContact=!1}updateWheel(t){const e=this.raycastResult;if(this.isInContact){const n=e.hitNormalWorld.dot(e.directionWorld);e.hitPointWorld.vsub(t.position,sm),t.getVelocityAtWorldPoint(sm,im);const i=e.hitNormalWorld.dot(im);if(n>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{const r=-1/n;this.suspensionRelativeVelocity=i*r,this.clippedInvContactDotSuspension=r}}else e.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.hitNormalWorld),this.clippedInvContactDotSuspension=1}}const im=new S,sm=new S;new S,new S,new S;const xx=new S,wx=new S,bx=new S;new Me,new S;const Sx=new S,Mx=new S,Tx=[new S(1,0,0),new S(0,1,0),new S(0,0,1)],Ex=new S,Ax=[],Cx=[],Rx=1,Dx=new S,Px=new S,Ix=new S;function Lx(s,t,e,n,i){let r=0;const o=e,a=Dx,l=Px,c=Ix;return s.getVelocityAtWorldPoint(o,a),t.getVelocityAtWorldPoint(o,l),a.vsub(l,c),r=-n.dot(c)*(1/(rm(s,e,n)+rm(t,e,n))),i<r&&(r=i),r<-i&&(r=-i),r}const Ox=new S,Fx=new S,Nx=new S,kx=new S;function rm(s,t,e){const n=Ox,i=Fx,r=Nx,o=kx;return t.vsub(s.position,n),n.cross(e,i),s.invInertiaWorld.vmult(i,o),o.cross(n,r),s.invMass+e.dot(r)}const Ux=new S,zx=new S,Bx=new S;function Vx(s,t,e,n,i){if(i.lengthSquared()>1.1)return 0;const r=Ux,o=zx,a=Bx;return s.getVelocityAtWorldPoint(t,r),e.getVelocityAtWorldPoint(n,o),r.vsub(o,a),-.2*i.dot(a)*(1/(s.invMass+e.invMass))}class so extends gt{constructor(t){if(super({type:gt.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new S);const n=2*t*this.radius*this.radius/5;return e.x=n,e.y=n,e.z=n,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,n,i){const r=this.radius,o=["x","y","z"];for(let a=0;a<o.length;a++){const l=o[a];n[l]=t[l]-r,i[l]=t[l]+r}}}const xl=new S,om=new S,qx=new S,Wx=new S,Gx=new S,Hx=new S,jx=new S,Xx=new S,Yx=new S;class vs extends Ki{constructor(t,e,n,i){if(t===void 0&&(t=1),e===void 0&&(e=1),n===void 0&&(n=1),i===void 0&&(i=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const r=i,o=[],a=[],l=[],c=[],h=[],u=Math.cos,d=Math.sin;o.push(new S(-e*d(0),.5*-n,e*u(0))),c.push(0),o.push(new S(-t*d(0),.5*n,t*u(0))),h.push(1);for(let f=0;f<r;f++){const g=2*Math.PI/r*(f+1),m=2*Math.PI/r*(f+.5);f<r-1?(o.push(new S(-e*d(g),.5*-n,e*u(g))),c.push(2*f+2),o.push(new S(-t*d(g),.5*n,t*u(g))),h.push(2*f+3),l.push([2*f,2*f+1,2*f+3,2*f+2])):l.push([2*f,2*f+1,1,0]),(r%2==1||f<r/2)&&a.push(new S(-d(m),0,u(m)))}l.push(c),a.push(new S(0,1,0));const p=[];for(let f=0;f<h.length;f++)p.push(h[h.length-f-1]);l.push(p),super({vertices:o,faces:l,axes:a}),this.type=gt.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=n,this.numSegments=i}}class Ju extends gt{constructor(){super({type:gt.types.PLANE}),this.worldNormal=new S,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e){return e===void 0&&(e=new S),e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,n,i){qi.set(0,0,1),e.vmult(qi,qi);const r=Number.MAX_VALUE;n.set(-r,-r,-r),i.set(r,r,r),qi.x===1?i.x=t.x:qi.x===-1&&(n.x=t.x),qi.y===1?i.y=t.y:qi.y===-1&&(n.y=t.y),qi.z===1?i.z=t.z:qi.z===-1&&(n.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const qi=new S,am=[],lm=new S,$x=new S,Zx=new S,Kx=new S,Qx=new S,Jx=new S,tw=new S,ew=new S,nw=new S;class xi{constructor(t){t===void 0&&(t={}),this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new le,this.data=[],this.children=[]}reset(){this.children.length=this.data.length=0}insert(t,e,n){n===void 0&&(n=0);const i=this.data;if(!this.aabb.contains(t))return!1;const r=this.children;if(n<(this.maxDepth||this.root.maxDepth)){let o=!1;r.length||(this.subdivide(),o=!0);for(let a=0;a!==8;a++)if(r[a].insert(t,e,n+1))return!0;o&&(r.length=0)}return i.push(e),!0}subdivide(){const t=this.aabb,e=t.lowerBound,n=t.upperBound,i=this.children;i.push(new xi({aabb:new le({lowerBound:new S(0,0,0)})}),new xi({aabb:new le({lowerBound:new S(1,0,0)})}),new xi({aabb:new le({lowerBound:new S(1,1,0)})}),new xi({aabb:new le({lowerBound:new S(1,1,1)})}),new xi({aabb:new le({lowerBound:new S(0,1,1)})}),new xi({aabb:new le({lowerBound:new S(0,0,1)})}),new xi({aabb:new le({lowerBound:new S(1,0,1)})}),new xi({aabb:new le({lowerBound:new S(0,1,0)})})),n.vsub(e,Ws),Ws.scale(.5,Ws);const r=this.root||this;for(let o=0;o!==8;o++){const a=i[o];a.root=r;const l=a.aabb.lowerBound;l.x*=Ws.x,l.y*=Ws.y,l.z*=Ws.z,l.vadd(e,l),l.vadd(Ws,a.aabb.upperBound)}}aabbQuery(t,e){const n=[this];for(;n.length;){const i=n.pop();i.aabb.overlaps(t)&&Array.prototype.push.apply(e,i.data),Array.prototype.push.apply(n,i.children)}return e}rayQuery(t,e,n){return t.getAABB(wl),wl.toLocalFrame(e,wl),this.aabbQuery(wl,n),n}removeEmptyNodes(){for(let t=this.children.length-1;t>=0;t--)this.children[t].removeEmptyNodes(),this.children[t].children.length||this.children[t].data.length||this.children.splice(t,1)}}class iw extends xi{constructor(t,e){e===void 0&&(e={}),super({root:null,aabb:t}),this.maxDepth=e.maxDepth!==void 0?e.maxDepth:8}}const Ws=new S,wl=new le;class Ql extends gt{constructor(t,e){super({type:gt.types.TRIMESH}),this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new le,this.edges=null,this.scale=new S(1,1,1),this.tree=new iw,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}updateTree(){const t=this.tree;t.reset(),t.aabb.copy(this.aabb);const e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;const n=new le,i=new S,r=new S,o=new S,a=[i,r,o];for(let l=0;l<this.indices.length/3;l++){const c=3*l;this._getUnscaledVertex(this.indices[c],i),this._getUnscaledVertex(this.indices[c+1],r),this._getUnscaledVertex(this.indices[c+2],o),n.setFromPoints(a),t.insert(n,l)}t.removeEmptyNodes()}getTrianglesInAABB(t,e){bl.copy(t);const n=this.scale,i=n.x,r=n.y,o=n.z,a=bl.lowerBound,l=bl.upperBound;return a.x/=i,a.y/=r,a.z/=o,l.x/=i,l.y/=r,l.z/=o,this.tree.aabbQuery(bl,e)}setScale(t){const e=this.scale.x===this.scale.y&&this.scale.y===this.scale.z,n=t.x===t.y&&t.y===t.z;e&&n||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()}updateNormals(){const t=sw,e=this.normals;for(let n=0;n<this.indices.length/3;n++){const i=3*n,r=this.indices[i],o=this.indices[i+1],a=this.indices[i+2];this.getVertex(r,um),this.getVertex(o,dm),this.getVertex(a,pm),Ql.computeNormal(dm,um,pm,t),e[i]=t.x,e[i+1]=t.y,e[i+2]=t.z}}updateEdges(){const t={},e=(i,r)=>{t[i<r?`${i}_${r}`:`${r}_${i}`]=!0};for(let i=0;i<this.indices.length/3;i++){const r=3*i,o=this.indices[r],a=this.indices[r+1],l=this.indices[r+2];e(o,a),e(a,l),e(l,o)}const n=Object.keys(t);this.edges=new Int16Array(2*n.length);for(let i=0;i<n.length;i++){const r=n[i].split("_");this.edges[2*i]=parseInt(r[0],10),this.edges[2*i+1]=parseInt(r[1],10)}}getEdgeVertex(t,e,n){const i=this.edges[2*t+(e?1:0)];this.getVertex(i,n)}getEdgeVector(t,e){const n=rw,i=ow;this.getEdgeVertex(t,0,n),this.getEdgeVertex(t,1,i),i.vsub(n,e)}static computeNormal(t,e,n,i){e.vsub(t,hm),n.vsub(e,cm),cm.cross(hm,i),i.isZero()||i.normalize()}getVertex(t,e){const n=this.scale;return this._getUnscaledVertex(t,e),e.x*=n.x,e.y*=n.y,e.z*=n.z,e}_getUnscaledVertex(t,e){const n=3*t,i=this.vertices;return e.set(i[n],i[n+1],i[n+2])}getWorldVertex(t,e,n,i){return this.getVertex(t,i),jt.pointToWorldFrame(e,n,i,i),i}getTriangleVertices(t,e,n,i){const r=3*t;this.getVertex(this.indices[r],e),this.getVertex(this.indices[r+1],n),this.getVertex(this.indices[r+2],i)}getNormal(t,e){const n=3*t;return e.set(this.normals[n],this.normals[n+1],this.normals[n+2])}calculateLocalInertia(t,e){this.computeLocalAABB(Gs);const n=Gs.upperBound.x-Gs.lowerBound.x,i=Gs.upperBound.y-Gs.lowerBound.y,r=Gs.upperBound.z-Gs.lowerBound.z;return e.set(1/12*t*(2*i*2*i+2*r*2*r),1/12*t*(2*n*2*n+2*r*2*r),1/12*t*(2*i*2*i+2*n*2*n))}computeLocalAABB(t){const e=t.lowerBound,n=t.upperBound,i=this.vertices.length,r=aw;this.getVertex(0,r),e.copy(r),n.copy(r);for(let o=0;o!==i;o++)this.getVertex(o,r),r.x<e.x?e.x=r.x:r.x>n.x&&(n.x=r.x),r.y<e.y?e.y=r.y:r.y>n.y&&(n.y=r.y),r.z<e.z?e.z=r.z:r.z>n.z&&(n.z=r.z)}updateAABB(){this.computeLocalAABB(this.aabb)}updateBoundingSphereRadius(){let t=0;const e=this.vertices,n=new S;for(let i=0,r=e.length/3;i!==r;i++){this.getVertex(i,n);const o=n.lengthSquared();o>t&&(t=o)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,n,i){const r=lw,o=cw;r.position=t,r.quaternion=e,this.aabb.toWorldFrame(r,o),n.copy(o.lowerBound),i.copy(o.upperBound)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}static createTorus(t,e,n,i,r){t===void 0&&(t=1),e===void 0&&(e=.5),n===void 0&&(n=8),i===void 0&&(i=6),r===void 0&&(r=2*Math.PI);const o=[],a=[];for(let l=0;l<=n;l++)for(let c=0;c<=i;c++){const h=c/i*r,u=l/n*Math.PI*2,d=(t+e*Math.cos(u))*Math.cos(h),p=(t+e*Math.cos(u))*Math.sin(h),f=e*Math.sin(u);o.push(d,p,f)}for(let l=1;l<=n;l++)for(let c=1;c<=i;c++){const h=(i+1)*l+c-1,u=(i+1)*(l-1)+c-1,d=(i+1)*(l-1)+c,p=(i+1)*l+c;a.push(h,u,p),a.push(u,d,p)}return new Ql(o,a)}}const sw=new S,bl=new le,rw=new S,ow=new S,cm=new S,hm=new S,um=new S,dm=new S,pm=new S,Gs=new le,aw=new S,lw=new jt,cw=new le;class wu{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){!t.enabled||t.bi.isTrigger||t.bj.isTrigger||this.equations.push(t)}removeEquation(t){const e=this.equations,n=e.indexOf(t);n!==-1&&e.splice(n,1)}removeAllEquations(){this.equations.length=0}}class td extends wu{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let n=0;const i=this.iterations,r=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=e.bodies,c=l.length,h=t;let u,d,p,f,g,m;if(a!==0)for(let A=0;A!==c;A++)l[A].updateSolveMassProperties();const x=uw,_=dw,y=hw;x.length=a,_.length=a,y.length=a;for(let A=0;A!==a;A++){const b=o[A];y[A]=0,_[A]=b.computeB(h),x[A]=1/b.computeC()}if(a!==0){for(let v=0;v!==c;v++){const w=l[v],M=w.vlambda,C=w.wlambda;M.set(0,0,0),C.set(0,0,0)}for(n=0;n!==i;n++){f=0;for(let v=0;v!==a;v++){const w=o[v];u=_[v],d=x[v],m=y[v],g=w.computeGWlambda(),p=d*(u-g-w.eps*m),m+p<w.minForce?p=w.minForce-m:m+p>w.maxForce&&(p=w.maxForce-m),y[v]+=p,f+=p>0?p:-p,w.addToWlambda(p)}if(f*f<r)break}for(let v=0;v!==c;v++){const w=l[v],M=w.velocity,C=w.angularVelocity;w.vlambda.vmul(w.linearFactor,w.vlambda),M.vadd(w.vlambda,M),w.wlambda.vmul(w.angularFactor,w.wlambda),C.vadd(w.wlambda,C)}let A=o.length;const b=1/h;for(;A--;)o[A].multiplier=y[A]*b}return n}}const hw=[],uw=[],dw=[],pw=[],mw=[],fw={bodies:[]},gw=vt.STATIC;function qf(s){const t=s.length;for(let e=0;e!==t;e++){const n=s[e];if(!(n.visited||n.body.type&gw))return n}return!1}const Sl=[];function _w(s,t,e,n){for(Sl.push(s),s.visited=!0,t(s,e,n);Sl.length;){const i=Sl.pop();let r;for(;r=qf(i.children);)r.visited=!0,t(r,e,n),Sl.push(r)}}function vw(s,t,e){t.push(s.body);const n=s.eqs.length;for(let i=0;i!==n;i++){const r=s.eqs[i];e.includes(r)||e.push(r)}}function yw(s,t){return t.id-s.id}class Wf{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class Gf extends Wf{constructor(){super(...arguments),this.type=S}constructObject(){return new S}}const ne={sphereSphere:gt.types.SPHERE,spherePlane:gt.types.SPHERE|gt.types.PLANE,boxBox:gt.types.BOX|gt.types.BOX,sphereBox:gt.types.SPHERE|gt.types.BOX,planeBox:gt.types.PLANE|gt.types.BOX,convexConvex:gt.types.CONVEXPOLYHEDRON,sphereConvex:gt.types.SPHERE|gt.types.CONVEXPOLYHEDRON,planeConvex:gt.types.PLANE|gt.types.CONVEXPOLYHEDRON,boxConvex:gt.types.BOX|gt.types.CONVEXPOLYHEDRON,sphereHeightfield:gt.types.SPHERE|gt.types.HEIGHTFIELD,boxHeightfield:gt.types.BOX|gt.types.HEIGHTFIELD,convexHeightfield:gt.types.CONVEXPOLYHEDRON|gt.types.HEIGHTFIELD,sphereParticle:gt.types.PARTICLE|gt.types.SPHERE,planeParticle:gt.types.PLANE|gt.types.PARTICLE,boxParticle:gt.types.BOX|gt.types.PARTICLE,convexParticle:gt.types.PARTICLE|gt.types.CONVEXPOLYHEDRON,cylinderCylinder:gt.types.CYLINDER,sphereCylinder:gt.types.SPHERE|gt.types.CYLINDER,planeCylinder:gt.types.PLANE|gt.types.CYLINDER,boxCylinder:gt.types.BOX|gt.types.CYLINDER,convexCylinder:gt.types.CONVEXPOLYHEDRON|gt.types.CYLINDER,heightfieldCylinder:gt.types.HEIGHTFIELD|gt.types.CYLINDER,particleCylinder:gt.types.PARTICLE|gt.types.CYLINDER,sphereTrimesh:gt.types.SPHERE|gt.types.TRIMESH,planeTrimesh:gt.types.PLANE|gt.types.TRIMESH};class Hf{get[ne.sphereSphere](){return this.sphereSphere}get[ne.spherePlane](){return this.spherePlane}get[ne.boxBox](){return this.boxBox}get[ne.sphereBox](){return this.sphereBox}get[ne.planeBox](){return this.planeBox}get[ne.convexConvex](){return this.convexConvex}get[ne.sphereConvex](){return this.sphereConvex}get[ne.planeConvex](){return this.planeConvex}get[ne.boxConvex](){return this.boxConvex}get[ne.sphereHeightfield](){return this.sphereHeightfield}get[ne.boxHeightfield](){return this.boxHeightfield}get[ne.convexHeightfield](){return this.convexHeightfield}get[ne.sphereParticle](){return this.sphereParticle}get[ne.planeParticle](){return this.planeParticle}get[ne.boxParticle](){return this.boxParticle}get[ne.convexParticle](){return this.convexParticle}get[ne.cylinderCylinder](){return this.convexConvex}get[ne.sphereCylinder](){return this.sphereConvex}get[ne.planeCylinder](){return this.planeConvex}get[ne.boxCylinder](){return this.boxConvex}get[ne.convexCylinder](){return this.convexConvex}get[ne.heightfieldCylinder](){return this.heightfieldCylinder}get[ne.particleCylinder](){return this.particleCylinder}get[ne.sphereTrimesh](){return this.sphereTrimesh}get[ne.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new Gf,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,n,i,r,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=t,a.bj=e):a=new Yr(t,e),a.enabled=t.collisionResponse&&e.collisionResponse&&n.collisionResponse&&i.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=n.material||t.material,h=i.material||e.material;return c&&h&&c.restitution>=0&&h.restitution>=0&&(a.restitution=c.restitution*h.restitution),a.si=r||n,a.sj=o||i,a}createFrictionEquationsFromContact(t,e){const n=t.bi,i=t.bj,r=t.si,o=t.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const h=r.material||n.material,u=o.material||i.material;if(h&&u&&h.friction>=0&&u.friction>=0&&(c=h.friction*u.friction),c>0){const d=c*(a.frictionGravity||a.gravity).length();let p=n.invMass+i.invMass;p>0&&(p=1/p);const f=this.frictionEquationPool,g=f.length?f.pop():new xu(n,i,d*p),m=f.length?f.pop():new xu(n,i,d*p);return g.bi=m.bi=n,g.bj=m.bj=i,g.minForce=m.minForce=-d*p,g.maxForce=m.maxForce=d*p,g.ri.copy(t.ri),g.rj.copy(t.rj),m.ri.copy(t.ri),m.rj.copy(t.rj),t.ni.tangents(g.t,m.t),g.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),m.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),g.enabled=m.enabled=t.enabled,e.push(g,m),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];Hs.setZero(),Ur.setZero(),zr.setZero();const r=e.bi;for(let a=0;a!==t;a++)e=this.result[this.result.length-1-a],e.bi!==r?(Hs.vadd(e.ni,Hs),Ur.vadd(e.ri,Ur),zr.vadd(e.rj,zr)):(Hs.vsub(e.ni,Hs),Ur.vadd(e.rj,Ur),zr.vadd(e.ri,zr));const o=1/t;Ur.scale(o,n.ri),zr.scale(o,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),Hs.normalize(),Hs.tangents(n.t,i.t)}getContacts(t,e,n,i,r,o,a){this.contactPointPool=r,this.frictionEquationPool=a,this.result=i,this.frictionResult=o;const l=bw,c=Sw,h=xw,u=ww;for(let d=0,p=t.length;d!==p;d++){const f=t[d],g=e[d];let m=null;f.material&&g.material&&(m=n.getContactMaterial(f.material,g.material)||null);const x=f.type&vt.KINEMATIC&&g.type&vt.STATIC||f.type&vt.STATIC&&g.type&vt.KINEMATIC||f.type&vt.KINEMATIC&&g.type&vt.KINEMATIC;for(let _=0;_<f.shapes.length;_++){f.quaternion.mult(f.shapeOrientations[_],l),f.quaternion.vmult(f.shapeOffsets[_],h),h.vadd(f.position,h);const y=f.shapes[_];for(let A=0;A<g.shapes.length;A++){g.quaternion.mult(g.shapeOrientations[A],c),g.quaternion.vmult(g.shapeOffsets[A],u),u.vadd(g.position,u);const b=g.shapes[A];if(!(y.collisionFilterMask&b.collisionFilterGroup&&b.collisionFilterMask&y.collisionFilterGroup)||h.distanceTo(u)>y.boundingSphereRadius+b.boundingSphereRadius)continue;let v=null;y.material&&b.material&&(v=n.getContactMaterial(y.material,b.material)||null),this.currentContactMaterial=v||m||n.defaultContactMaterial;const w=this[y.type|b.type];if(w){let M=!1;M=y.type<b.type?w.call(this,y,b,h,u,l,c,f,g,y,b,x):w.call(this,b,y,u,h,c,l,g,f,y,b,x),M&&x&&(n.shapeOverlapKeeper.set(y.id,b.id),n.bodyOverlapKeeper.set(f.id,g.id))}}}}}sphereSphere(t,e,n,i,r,o,a,l,c,h,u){if(u)return n.distanceSquared(i)<(t.radius+e.radius)**2;const d=this.createContactEquation(a,l,t,e,c,h);i.vsub(n,d.ni),d.ni.normalize(),d.ri.copy(d.ni),d.rj.copy(d.ni),d.ri.scale(t.radius,d.ri),d.rj.scale(-e.radius,d.rj),d.ri.vadd(n,d.ri),d.ri.vsub(a.position,d.ri),d.rj.vadd(i,d.rj),d.rj.vsub(l.position,d.rj),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}spherePlane(t,e,n,i,r,o,a,l,c,h,u){const d=this.createContactEquation(a,l,t,e,c,h);if(d.ni.set(0,0,1),o.vmult(d.ni,d.ni),d.ni.negate(d.ni),d.ni.normalize(),d.ni.scale(t.radius,d.ri),n.vsub(i,Ml),d.ni.scale(d.ni.dot(Ml),mm),Ml.vsub(mm,d.rj),-Ml.dot(d.ni)<=t.radius){if(u)return!0;const p=d.ri,f=d.rj;p.vadd(n,p),p.vsub(a.position,p),f.vadd(i,f),f.vsub(l.position,f),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}}boxBox(t,e,n,i,r,o,a,l,c,h,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,u)}sphereBox(t,e,n,i,r,o,a,l,c,h,u){const d=this.v3pool,p=$w;n.vsub(i,Tl),e.getSideNormals(p,o);const f=t.radius;let g=!1;const m=Kw,x=Qw,_=Jw;let y=null,A=0,b=0,v=0,w=null;for(let F=0,z=p.length;F!==z&&g===!1;F++){const q=jw;q.copy(p[F]);const B=q.length();q.normalize();const W=Tl.dot(q);if(W<B+f&&W>0){const Q=Xw,j=Yw;Q.copy(p[(F+1)%3]),j.copy(p[(F+2)%3]);const dt=Q.length(),ct=j.length();Q.normalize(),j.normalize();const rt=Tl.dot(Q),$=Tl.dot(j);if(rt<dt&&rt>-dt&&$<ct&&$>-ct){const O=Math.abs(W-B-f);if((w===null||O<w)&&(w=O,b=rt,v=$,y=B,m.copy(q),x.copy(Q),_.copy(j),A++,u))return!0}}}if(A){g=!0;const F=this.createContactEquation(a,l,t,e,c,h);m.scale(-f,F.ri),F.ni.copy(m),F.ni.negate(F.ni),m.scale(y,m),x.scale(b,x),m.vadd(x,m),_.scale(v,_),m.vadd(_,F.rj),F.ri.vadd(n,F.ri),F.ri.vsub(a.position,F.ri),F.rj.vadd(i,F.rj),F.rj.vsub(l.position,F.rj),this.result.push(F),this.createFrictionEquationsFromContact(F,this.frictionResult)}let M=d.get();const C=Zw;for(let F=0;F!==2&&!g;F++)for(let z=0;z!==2&&!g;z++)for(let q=0;q!==2&&!g;q++)if(M.set(0,0,0),F?M.vadd(p[0],M):M.vsub(p[0],M),z?M.vadd(p[1],M):M.vsub(p[1],M),q?M.vadd(p[2],M):M.vsub(p[2],M),i.vadd(M,C),C.vsub(n,C),C.lengthSquared()<f*f){if(u)return!0;g=!0;const B=this.createContactEquation(a,l,t,e,c,h);B.ri.copy(C),B.ri.normalize(),B.ni.copy(B.ri),B.ri.scale(f,B.ri),B.rj.copy(M),B.ri.vadd(n,B.ri),B.ri.vsub(a.position,B.ri),B.rj.vadd(i,B.rj),B.rj.vsub(l.position,B.rj),this.result.push(B),this.createFrictionEquationsFromContact(B,this.frictionResult)}d.release(M),M=null;const T=d.get(),E=d.get(),D=d.get(),R=d.get(),P=d.get(),k=p.length;for(let F=0;F!==k&&!g;F++)for(let z=0;z!==k&&!g;z++)if(F%3!=z%3){p[z].cross(p[F],T),T.normalize(),p[F].vadd(p[z],E),D.copy(n),D.vsub(E,D),D.vsub(i,D);const q=D.dot(T);T.scale(q,R);let B=0;for(;B===F%3||B===z%3;)B++;P.copy(n),P.vsub(R,P),P.vsub(E,P),P.vsub(i,P);const W=Math.abs(q),Q=P.length();if(W<p[B].length()&&Q<f){if(u)return!0;g=!0;const j=this.createContactEquation(a,l,t,e,c,h);E.vadd(R,j.rj),j.rj.copy(j.rj),P.negate(j.ni),j.ni.normalize(),j.ri.copy(j.rj),j.ri.vadd(i,j.ri),j.ri.vsub(n,j.ri),j.ri.normalize(),j.ri.scale(f,j.ri),j.ri.vadd(n,j.ri),j.ri.vsub(a.position,j.ri),j.rj.vadd(i,j.rj),j.rj.vsub(l.position,j.rj),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult)}}d.release(T,E,D,R,P)}planeBox(t,e,n,i,r,o,a,l,c,h,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,n,i,r,o,a,l,t,e,u)}convexConvex(t,e,n,i,r,o,a,l,c,h,u,d,p){const f=mb;if(!(n.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,n,r,i,o,f,d,p)){const g=[],m=fb;t.clipAgainstHull(n,r,e,i,o,f,-100,100,g);let x=0;for(let _=0;_!==g.length;_++){if(u)return!0;const y=this.createContactEquation(a,l,t,e,c,h),A=y.ri,b=y.rj;f.negate(y.ni),g[_].normal.negate(m),m.scale(g[_].depth,m),g[_].point.vadd(m,A),b.copy(g[_].point),A.vsub(n,A),b.vsub(i,b),A.vadd(n,A),A.vsub(a.position,A),b.vadd(i,b),b.vsub(l.position,b),this.result.push(y),x++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(y,this.frictionResult)}this.enableFrictionReduction&&x&&this.createFrictionFromAverage(x)}}sphereConvex(t,e,n,i,r,o,a,l,c,h,u){const d=this.v3pool;n.vsub(i,tb);const p=e.faceNormals,f=e.faces,g=e.vertices,m=t.radius;let x=!1;for(let _=0;_!==g.length;_++){const y=g[_],A=sb;o.vmult(y,A),i.vadd(A,A);const b=ib;if(A.vsub(n,b),b.lengthSquared()<m*m){if(u)return!0;x=!0;const v=this.createContactEquation(a,l,t,e,c,h);return v.ri.copy(b),v.ri.normalize(),v.ni.copy(v.ri),v.ri.scale(m,v.ri),A.vsub(i,v.rj),v.ri.vadd(n,v.ri),v.ri.vsub(a.position,v.ri),v.rj.vadd(i,v.rj),v.rj.vsub(l.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult),void 0}}for(let _=0,y=f.length;_!==y&&x===!1;_++){const A=p[_],b=f[_],v=rb;o.vmult(A,v);const w=ob;o.vmult(g[b[0]],w),w.vadd(i,w);const M=ab;v.scale(-m,M),n.vadd(M,M);const C=lb;M.vsub(w,C);const T=C.dot(v),E=cb;if(n.vsub(w,E),T<0&&E.dot(v)>0){const D=[];for(let R=0,P=b.length;R!==P;R++){const k=d.get();o.vmult(g[b[R]],k),i.vadd(k,k),D.push(k)}if(Hw(D,v,n)){if(u)return!0;x=!0;const R=this.createContactEquation(a,l,t,e,c,h);v.scale(-m,R.ri),v.negate(R.ni);const P=d.get();v.scale(-T,P);const k=d.get();v.scale(-m,k),n.vsub(i,R.rj),R.rj.vadd(k,R.rj),R.rj.vadd(P,R.rj),R.rj.vadd(i,R.rj),R.rj.vsub(l.position,R.rj),R.ri.vadd(n,R.ri),R.ri.vsub(a.position,R.ri),d.release(P),d.release(k),this.result.push(R),this.createFrictionEquationsFromContact(R,this.frictionResult);for(let F=0,z=D.length;F!==z;F++)d.release(D[F]);return}for(let R=0;R!==b.length;R++){const P=d.get(),k=d.get();o.vmult(g[b[(R+1)%b.length]],P),o.vmult(g[b[(R+2)%b.length]],k),i.vadd(P,P),i.vadd(k,k);const F=eb;k.vsub(P,F);const z=nb;F.unit(z);const q=d.get(),B=d.get();n.vsub(P,B);const W=B.dot(z);z.scale(W,q),q.vadd(P,q);const Q=d.get();if(q.vsub(n,Q),W>0&&W*W<F.lengthSquared()&&Q.lengthSquared()<m*m){if(u)return!0;const j=this.createContactEquation(a,l,t,e,c,h);q.vsub(i,j.rj),q.vsub(n,j.ni),j.ni.normalize(),j.ni.scale(m,j.ri),j.rj.vadd(i,j.rj),j.rj.vsub(l.position,j.rj),j.ri.vadd(n,j.ri),j.ri.vsub(a.position,j.ri),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult);for(let dt=0,ct=D.length;dt!==ct;dt++)d.release(D[dt]);return d.release(P),d.release(k),d.release(q),d.release(Q),d.release(B),void 0}d.release(P),d.release(k),d.release(q),d.release(Q),d.release(B)}for(let R=0,P=D.length;R!==P;R++)d.release(D[R])}}}planeConvex(t,e,n,i,r,o,a,l,c,h,u){const d=hb,p=ub;p.set(0,0,1),r.vmult(p,p);let f=0;const g=db;for(let m=0;m!==e.vertices.length;m++)if(d.copy(e.vertices[m]),o.vmult(d,d),i.vadd(d,d),d.vsub(n,g),p.dot(g)<=0){if(u)return!0;const x=this.createContactEquation(a,l,t,e,c,h),_=pb;p.scale(p.dot(g),_),d.vsub(_,_),_.vsub(n,x.ri),x.ni.copy(p),d.vsub(i,x.rj),x.ri.vadd(n,x.ri),x.ri.vsub(a.position,x.ri),x.rj.vadd(i,x.rj),x.rj.vsub(l.position,x.rj),this.result.push(x),f++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(x,this.frictionResult)}this.enableFrictionReduction&&f&&this.createFrictionFromAverage(f)}boxConvex(t,e,n,i,r,o,a,l,c,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,u)}sphereHeightfield(t,e,n,i,r,o,a,l,c,h,u){const d=e.data,p=t.radius,f=e.elementSize,g=Ab,m=Eb;jt.pointToLocalFrame(i,o,n,m);let x=Math.floor((m.x-p)/f)-1,_=Math.ceil((m.x+p)/f)+1,y=Math.floor((m.y-p)/f)-1,A=Math.ceil((m.y+p)/f)+1;if(_<0||A<0||x>d.length||y>d[0].length)return;x<0&&(x=0),_<0&&(_=0),y<0&&(y=0),A<0&&(A=0),x>=d.length&&(x=d.length-1),_>=d.length&&(_=d.length-1),A>=d[0].length&&(A=d[0].length-1),y>=d[0].length&&(y=d[0].length-1);const b=[];e.getRectMinMax(x,y,_,A,b);const v=b[0],w=b[1];if(m.z-p>w||m.z+p<v)return;const M=this.result;for(let C=x;C<_;C++)for(let T=y;T<A;T++){const E=M.length;let D=!1;if(e.getConvexTrianglePillar(C,T,!1),jt.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(D=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,u)),u&&D||(e.getConvexTrianglePillar(C,T,!0),jt.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(D=this.sphereConvex(t,e.pillarConvex,n,g,r,o,a,l,t,e,u)),u&&D))return!0;if(M.length-E>2)return}}boxHeightfield(t,e,n,i,r,o,a,l,c,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,u)}convexHeightfield(t,e,n,i,r,o,a,l,c,h,u){const d=e.data,p=e.elementSize,f=t.boundingSphereRadius,g=Mb,m=Tb,x=Sb;jt.pointToLocalFrame(i,o,n,x);let _=Math.floor((x.x-f)/p)-1,y=Math.ceil((x.x+f)/p)+1,A=Math.floor((x.y-f)/p)-1,b=Math.ceil((x.y+f)/p)+1;if(y<0||b<0||_>d.length||A>d[0].length)return;_<0&&(_=0),y<0&&(y=0),A<0&&(A=0),b<0&&(b=0),_>=d.length&&(_=d.length-1),y>=d.length&&(y=d.length-1),b>=d[0].length&&(b=d[0].length-1),A>=d[0].length&&(A=d[0].length-1);const v=[];e.getRectMinMax(_,A,y,b,v);const w=v[0],M=v[1];if(!(x.z-f>M||x.z+f<w))for(let C=_;C<y;C++)for(let T=A;T<b;T++){let E=!1;if(e.getConvexTrianglePillar(C,T,!1),jt.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(E=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,u,m,null)),u&&E||(e.getConvexTrianglePillar(C,T,!0),jt.pointToWorldFrame(i,o,e.pillarOffset,g),n.distanceTo(g)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(E=this.convexConvex(t,e.pillarConvex,n,g,r,o,a,l,null,null,u,m,null)),u&&E))return!0}}sphereParticle(t,e,n,i,r,o,a,l,c,h,u){const d=yb;if(d.set(0,0,1),i.vsub(n,d),d.lengthSquared()<=t.radius*t.radius){if(u)return!0;const p=this.createContactEquation(l,a,e,t,c,h);d.normalize(),p.rj.copy(d),p.rj.scale(t.radius,p.rj),p.ni.copy(d),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,n,i,r,o,a,l,c,h,u){const d=gb;d.set(0,0,1),a.quaternion.vmult(d,d);const p=_b;if(i.vsub(a.position,p),d.dot(p)<=0){if(u)return!0;const f=this.createContactEquation(l,a,e,t,c,h);f.ni.copy(d),f.ni.negate(f.ni),f.ri.set(0,0,0);const g=vb;d.scale(d.dot(i),g),i.vsub(g,g),f.rj.copy(g),this.result.push(f),this.createFrictionEquationsFromContact(f,this.frictionResult)}}boxParticle(t,e,n,i,r,o,a,l,c,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,n,i,r,o,a,l,t,e,u)}convexParticle(t,e,n,i,r,o,a,l,c,h,u){let d=-1;const p=wb,f=bb;let g=null;const m=xb;if(m.copy(i),m.vsub(n,m),r.conjugate(fm),fm.vmult(m,m),t.pointIsInside(m)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(n,r),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(r);for(let x=0,_=t.faces.length;x!==_;x++){const y=[t.worldVertices[t.faces[x][0]]],A=t.worldFaceNormals[x];i.vsub(y[0],gm);const b=-A.dot(gm);if(g===null||Math.abs(b)<Math.abs(g)){if(u)return!0;g=b,d=x,p.copy(A)}}if(d!==-1){const x=this.createContactEquation(l,a,e,t,c,h);p.scale(g,f),f.vadd(i,f),f.vsub(n,f),x.rj.copy(f),p.negate(x.ni),x.ri.set(0,0,0);const _=x.ri,y=x.rj;_.vadd(i,_),_.vsub(l.position,_),y.vadd(n,y),y.vsub(a.position,y),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}}}heightfieldCylinder(t,e,n,i,r,o,a,l,c,h,u){return this.convexHeightfield(e,t,i,n,o,r,l,a,c,h,u)}particleCylinder(t,e,n,i,r,o,a,l,c,h,u){return this.convexParticle(e,t,i,n,o,r,l,a,c,h,u)}sphereTrimesh(t,e,n,i,r,o,a,l,c,h,u){const d=Pw,p=Iw,f=Lw,g=Ow,m=Fw,x=Nw,_=Bw,y=Dw,A=Cw,b=Vw;jt.pointToLocalFrame(i,o,n,m);const v=t.radius;_.lowerBound.set(m.x-v,m.y-v,m.z-v),_.upperBound.set(m.x+v,m.y+v,m.z+v),e.getTrianglesInAABB(_,b);const w=Rw,M=t.radius*t.radius;for(let R=0;R<b.length;R++)for(let P=0;P<3;P++)if(e.getVertex(e.indices[3*b[R]+P],w),w.vsub(m,A),A.lengthSquared()<=M){if(y.copy(w),jt.pointToWorldFrame(i,o,y,w),w.vsub(n,A),u)return!0;let k=this.createContactEquation(a,l,t,e,c,h);k.ni.copy(A),k.ni.normalize(),k.ri.copy(k.ni),k.ri.scale(t.radius,k.ri),k.ri.vadd(n,k.ri),k.ri.vsub(a.position,k.ri),k.rj.copy(w),k.rj.vsub(l.position,k.rj),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult)}for(let R=0;R<b.length;R++)for(let P=0;P<3;P++){e.getVertex(e.indices[3*b[R]+P],d),e.getVertex(e.indices[3*b[R]+(P+1)%3],p),p.vsub(d,f),m.vsub(p,x);const k=x.dot(f);m.vsub(d,x);let F=x.dot(f);if(F>0&&k<0&&(m.vsub(d,x),g.copy(f),g.normalize(),F=x.dot(g),g.scale(F,x),x.vadd(d,x),x.distanceTo(m)<t.radius)){if(u)return!0;const z=this.createContactEquation(a,l,t,e,c,h);x.vsub(m,z.ni),z.ni.normalize(),z.ni.scale(t.radius,z.ri),z.ri.vadd(n,z.ri),z.ri.vsub(a.position,z.ri),jt.pointToWorldFrame(i,o,x,x),x.vsub(l.position,z.rj),jt.vectorToWorldFrame(o,z.ni,z.ni),jt.vectorToWorldFrame(o,z.ri,z.ri),this.result.push(z),this.createFrictionEquationsFromContact(z,this.frictionResult)}}const C=kw,T=Uw,E=zw,D=Aw;for(let R=0,P=b.length;R!==P;R++){e.getTriangleVertices(b[R],C,T,E),e.getNormal(b[R],D),m.vsub(C,x);let k=x.dot(D);if(D.scale(k,x),m.vsub(x,x),k=x.distanceTo(m),Me.pointInTriangle(x,C,T,E)&&k<t.radius){if(u)return!0;let F=this.createContactEquation(a,l,t,e,c,h);x.vsub(m,F.ni),F.ni.normalize(),F.ni.scale(t.radius,F.ri),F.ri.vadd(n,F.ri),F.ri.vsub(a.position,F.ri),jt.pointToWorldFrame(i,o,x,x),x.vsub(l.position,F.rj),jt.vectorToWorldFrame(o,F.ni,F.ni),jt.vectorToWorldFrame(o,F.ri,F.ri),this.result.push(F),this.createFrictionEquationsFromContact(F,this.frictionResult)}}b.length=0}planeTrimesh(t,e,n,i,r,o,a,l,c,h,u){const d=new S,p=Mw;p.set(0,0,1),r.vmult(p,p);for(let f=0;f<e.vertices.length/3;f++){e.getVertex(f,d);const g=new S;g.copy(d),jt.pointToWorldFrame(i,o,g,d);const m=Tw;if(d.vsub(n,m),p.dot(m)<=0){if(u)return!0;const x=this.createContactEquation(a,l,t,e,c,h);x.ni.copy(p);const _=Ew;p.scale(m.dot(p),_),d.vsub(_,_),x.ri.copy(_),x.ri.vsub(a.position,x.ri),x.rj.copy(d),x.rj.vsub(l.position,x.rj),this.result.push(x),this.createFrictionEquationsFromContact(x,this.frictionResult)}}}}const Hs=new S,Ur=new S,zr=new S,xw=new S,ww=new S,bw=new me,Sw=new me,Mw=new S,Tw=new S,Ew=new S,Aw=new S,Cw=new S;new S;const Rw=new S,Dw=new S,Pw=new S,Iw=new S,Lw=new S,Ow=new S,Fw=new S,Nw=new S,kw=new S,Uw=new S,zw=new S,Bw=new le,Vw=[],Ml=new S,mm=new S,qw=new S,Ww=new S,Gw=new S;function Hw(s,t,e){let n=null;const i=s.length;for(let r=0;r!==i;r++){const o=s[r],a=qw;s[(r+1)%i].vsub(o,a);const l=Ww;a.cross(t,l);const c=Gw;e.vsub(o,c);const h=l.dot(c);if(!(n===null||h>0&&n===!0||h<=0&&n===!1))return!1;n===null&&(n=h>0)}return!0}const Tl=new S,jw=new S,Xw=new S,Yw=new S,$w=[new S,new S,new S,new S,new S,new S],Zw=new S,Kw=new S,Qw=new S,Jw=new S,tb=new S,eb=new S,nb=new S,ib=new S,sb=new S,rb=new S,ob=new S,ab=new S,lb=new S,cb=new S;new S,new S;const hb=new S,ub=new S,db=new S,pb=new S,mb=new S,fb=new S,gb=new S,_b=new S,vb=new S,yb=new S,fm=new me,xb=new S;new S;const wb=new S,gm=new S,bb=new S,Sb=new S,Mb=new S,Tb=[0],Eb=new S,Ab=new S;class _m{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const n=e;e=t,t=n}return t<<16|e}set(t,e){const n=this.getKey(t,e),i=this.current;let r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let o=i.length-1;o>=r;o--)i[o+1]=i[o];i[r]=n}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const n=this.current,i=this.previous,r=n.length,o=i.length;let a=0;for(let l=0;l<r;l++){let c=!1;const h=n[l];for(;h>i[a];)a++;c=h===i[a],c||vm(t,h)}a=0;for(let l=0;l<o;l++){let c=!1;const h=i[l];for(;h>n[a];)a++;c=n[a]===h,c||vm(e,h)}}}function vm(s,t){s.push((4294901760&t)>>16,65535&t)}const ru=(s,t)=>s<t?`${s}-${t}`:`${t}-${s}`;class Cb{constructor(){this.data={keys:[]}}get(t,e){const n=ru(t,e);return this.data[n]}set(t,e,n){const i=ru(t,e);this.get(t,e)||this.data.keys.push(i),this.data[i]=n}delete(t,e){const n=ru(t,e),i=this.data.keys.indexOf(n);i!==-1&&this.data.keys.splice(i,1),delete this.data[n]}reset(){const t=this.data,e=t.keys;for(;e.length>0;)delete t[e.pop()]}}class ed extends Qu{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0&&t.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new S,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new S,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new Lf,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new td,this.constraints=[],this.narrowphase=new Hf(this),this.collisionMatrix=new vu,this.collisionMatrixPrevious=new vu,this.bodyOverlapKeeper=new _m,this.shapeOverlapKeeper=new _m,this.contactmaterials=[],this.contactMaterialTable=new Cb,this.defaultMaterial=new as("default"),this.defaultContactMaterial=new ko(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,n){n instanceof no?this.raycastClosest(t,e,{skipBackfaces:!0},n):this.raycastAll(t,e,{skipBackfaces:!0},n)}raycastAll(t,e,n,i){return n===void 0&&(n={}),n.mode=Me.ALL,n.from=t,n.to=e,n.callback=i,ou.intersectWorld(this,n)}raycastAny(t,e,n,i){return n===void 0&&(n={}),n.mode=Me.ANY,n.from=t,n.to=e,n.result=i,ou.intersectWorld(this,n)}raycastClosest(t,e,n,i){return n===void 0&&(n={}),n.mode=Me.CLOSEST,n.from=t,n.to=e,n.result=i,ou.intersectWorld(this,n)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof vt&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,n=this.bodies,i=n.indexOf(t);if(i!==-1){n.splice(i,1);for(let r=0;r!==n.length;r++)n[r].index=r;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let n=0;n<e.length;n++){const i=e[n].shapes;for(let r=0;r<i.length;r++){const o=i[r];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const n=Ie.now()/1e3;if(this.lastCallTime){const i=n-this.lastCallTime;this.step(t,i,e)}else this.step(t,void 0,e);this.lastCallTime=n}step(t,e,n){if(n===void 0&&(n=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=Ie.now();let r=0;for(;this.accumulator>=t&&r<n&&(this.internalStep(t),this.accumulator-=t,r++,!(Ie.now()-i>1e3*t)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,n=Lb,i=Ob,r=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,h=this.profile,u=vt.DYNAMIC;let d=-1/0;const p=this.constraints,f=Ib;l.length();const g=l.x,m=l.y,x=l.z;let _=0;for(c&&(d=Ie.now()),_=0;_!==r;_++){const D=o[_];if(D.type===u){const R=D.force,P=D.mass;R.x+=P*g,R.y+=P*m,R.z+=P*x}}for(let D=0,R=this.subsystems.length;D!==R;D++)this.subsystems[D].update();c&&(d=Ie.now()),n.length=0,i.length=0,this.broadphase.collisionPairs(this,n,i),c&&(h.broadphase=Ie.now()-d);let y=p.length;for(_=0;_!==y;_++){const D=p[_];if(!D.collideConnected)for(let R=n.length-1;R>=0;R-=1)(D.bodyA===n[R]&&D.bodyB===i[R]||D.bodyB===n[R]&&D.bodyA===i[R])&&(n.splice(R,1),i.splice(R,1))}this.collisionMatrixTick(),c&&(d=Ie.now());const A=Pb,b=e.length;for(_=0;_!==b;_++)A.push(e[_]);e.length=0;const v=this.frictionEquations.length;for(_=0;_!==v;_++)f.push(this.frictionEquations[_]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(n,i,this,e,A,this.frictionEquations,f),c&&(h.narrowphase=Ie.now()-d),c&&(d=Ie.now()),_=0;_<this.frictionEquations.length;_++)a.addEquation(this.frictionEquations[_]);const w=e.length;for(let D=0;D!==w;D++){const R=e[D],P=R.bi,k=R.bj,F=R.si,z=R.sj;P.material&&k.material&&(this.getContactMaterial(P.material,k.material)||this.defaultContactMaterial),P.material&&k.material&&P.material.restitution>=0&&k.material.restitution>=0&&(R.restitution=P.material.restitution*k.material.restitution),a.addEquation(R),P.allowSleep&&P.type===vt.DYNAMIC&&P.sleepState===vt.SLEEPING&&k.sleepState===vt.AWAKE&&k.type!==vt.STATIC&&k.velocity.lengthSquared()+k.angularVelocity.lengthSquared()>=2*k.sleepSpeedLimit**2&&(P.wakeUpAfterNarrowphase=!0),k.allowSleep&&k.type===vt.DYNAMIC&&k.sleepState===vt.SLEEPING&&P.sleepState===vt.AWAKE&&P.type!==vt.STATIC&&P.velocity.lengthSquared()+P.angularVelocity.lengthSquared()>=2*P.sleepSpeedLimit**2&&(k.wakeUpAfterNarrowphase=!0),this.collisionMatrix.set(P,k,!0),this.collisionMatrixPrevious.get(P,k)||(oa.body=k,oa.contact=R,P.dispatchEvent(oa),oa.body=P,k.dispatchEvent(oa)),this.bodyOverlapKeeper.set(P.id,k.id),this.shapeOverlapKeeper.set(F.id,z.id)}for(this.emitContactEvents(),c&&(h.makeContactConstraints=Ie.now()-d,d=Ie.now()),_=0;_!==r;_++){const D=o[_];D.wakeUpAfterNarrowphase&&(D.wakeUp(),D.wakeUpAfterNarrowphase=!1)}for(y=p.length,_=0;_!==y;_++){const D=p[_];D.update();for(let R=0,P=D.equations.length;R!==P;R++){const k=D.equations[R];a.addEquation(k)}}a.solve(t,this),c&&(h.solve=Ie.now()-d),a.removeAllEquations();const M=Math.pow;for(_=0;_!==r;_++){const D=o[_];if(D.type&u){const R=M(1-D.linearDamping,t),P=D.velocity;P.scale(R,P);const k=D.angularVelocity;if(k){const F=M(1-D.angularDamping,t);k.scale(F,k)}}}this.dispatchEvent(Db),c&&(d=Ie.now());const C=this.stepnumber%(this.quatNormalizeSkip+1)===0,T=this.quatNormalizeFast;for(_=0;_!==r;_++)o[_].integrate(t,C,T);this.clearForces(),this.broadphase.dirty=!0,c&&(h.integrate=Ie.now()-d),this.stepnumber+=1,this.dispatchEvent(Rb);let E=!0;if(this.allowSleep)for(E=!1,_=0;_!==r;_++){const D=o[_];D.sleepTick(this.time),D.sleepState!==vt.SLEEPING&&(E=!0)}this.hasActiveBodies=E}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(Wi,Gi),t){for(let r=0,o=Wi.length;r<o;r+=2)aa.bodyA=this.getBodyById(Wi[r]),aa.bodyB=this.getBodyById(Wi[r+1]),this.dispatchEvent(aa);aa.bodyA=aa.bodyB=null}if(e){for(let r=0,o=Gi.length;r<o;r+=2)la.bodyA=this.getBodyById(Gi[r]),la.bodyB=this.getBodyById(Gi[r+1]),this.dispatchEvent(la);la.bodyA=la.bodyB=null}Wi.length=Gi.length=0;const n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(Wi,Gi),n){for(let r=0,o=Wi.length;r<o;r+=2){const a=this.getShapeById(Wi[r]),l=this.getShapeById(Wi[r+1]);Hi.shapeA=a,Hi.shapeB=l,a&&(Hi.bodyA=a.body),l&&(Hi.bodyB=l.body),this.dispatchEvent(Hi)}Hi.bodyA=Hi.bodyB=Hi.shapeA=Hi.shapeB=null}if(i){for(let r=0,o=Gi.length;r<o;r+=2){const a=this.getShapeById(Gi[r]),l=this.getShapeById(Gi[r+1]);ji.shapeA=a,ji.shapeB=l,a&&(ji.bodyA=a.body),l&&(ji.bodyB=l.body),this.dispatchEvent(ji)}ji.bodyA=ji.bodyB=ji.shapeA=ji.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let n=0;n!==e;n++){const i=t[n];i.force.set(0,0,0),i.torque.set(0,0,0)}}}new le;const ou=new Me,Ie=globalThis.performance||{};if(!Ie.now){let s=Date.now();Ie.timing&&Ie.timing.navigationStart&&(s=Ie.timing.navigationStart),Ie.now=()=>Date.now()-s}new S;const Rb={type:"postStep"},Db={type:"preStep"},oa={type:vt.COLLIDE_EVENT_NAME,body:null,contact:null},Pb=[],Ib=[],Lb=[],Ob=[],Wi=[],Gi=[],aa={type:"beginContact",bodyA:null,bodyB:null},la={type:"endContact",bodyA:null,bodyB:null},Hi={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ji={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Fb=Object.freeze(Object.defineProperty({__proto__:null,AABB:le,ArrayCollisionMatrix:vu,BODY_SLEEP_STATES:Ul,BODY_TYPES:kl,Body:vt,Box:Ve,Broadphase:Kl,COLLISION_TYPES:ne,ConeTwistConstraint:class extends Bl{constructor(s,t,e){e===void 0&&(e={});const n=e.maxForce!==void 0?e.maxForce:1e6;super(s,e.pivotA?e.pivotA.clone():new S,t,e.pivotB?e.pivotB.clone():new S,n),this.axisA=e.axisA?e.axisA.clone():new S,this.axisB=e.axisB?e.axisB.clone():new S,this.collideConnected=!!e.collideConnected,this.angle=e.angle!==void 0?e.angle:0;const i=this.coneEquation=new tx(s,t,e),r=this.twistEquation=new Ys(s,t,e);this.twistAngle=e.twistAngle!==void 0?e.twistAngle:0,i.maxForce=0,i.minForce=-n,r.maxForce=0,r.minForce=-n,this.equations.push(i,r)}update(){const s=this.bodyA,t=this.bodyB,e=this.coneEquation,n=this.twistEquation;super.update(),s.vectorToWorldFrame(this.axisA,e.axisA),t.vectorToWorldFrame(this.axisB,e.axisB),this.axisA.tangents(n.axisA,n.axisA),s.vectorToWorldFrame(n.axisA,n.axisA),this.axisB.tangents(n.axisB,n.axisB),t.vectorToWorldFrame(n.axisB,n.axisB),e.angle=this.angle,n.maxAngle=this.twistAngle}},Constraint:io,ContactEquation:Yr,ContactMaterial:ko,ConvexPolyhedron:Ki,Cylinder:vs,DistanceConstraint:class extends io{constructor(s,t,e,n){n===void 0&&(n=1e6),super(s,t),e===void 0&&(e=s.position.distanceTo(t.position)),this.distance=e;const i=this.distanceEquation=new Yr(s,t);this.equations.push(i),i.minForce=-n,i.maxForce=n}update(){const s=this.bodyA,t=this.bodyB,e=this.distanceEquation,n=.5*this.distance,i=e.ni;t.position.vsub(s.position,i),i.normalize(),i.scale(n,e.ri),i.scale(-n,e.rj)}},Equation:os,EventTarget:Qu,FrictionEquation:xu,GSSolver:td,GridBroadphase:class extends Kl{constructor(s,t,e,n,i){s===void 0&&(s=new S(100,100,100)),t===void 0&&(t=new S(-100,-100,-100)),e===void 0&&(e=10),n===void 0&&(n=10),i===void 0&&(i=10),super(),this.nx=e,this.ny=n,this.nz=i,this.aabbMin=s,this.aabbMax=t;const r=this.nx*this.ny*this.nz;if(r<=0)throw"GridBroadphase: Each dimension's n must be >0";this.bins=[],this.binLengths=[],this.bins.length=r,this.binLengths.length=r;for(let o=0;o<r;o++)this.bins[o]=[],this.binLengths[o]=0}collisionPairs(s,t,e){const n=s.bodies.length,i=s.bodies,r=this.aabbMax,o=this.aabbMin,a=this.nx,l=this.ny,c=this.nz,h=l*c,u=c,d=r.x,p=r.y,f=r.z,g=o.x,m=o.y,x=o.z,_=a/(d-g),y=l/(p-m),A=c/(f-x),b=(d-g)/a,v=(p-m)/l,w=(f-x)/c,M=.5*Math.sqrt(b*b+v*v+w*w),C=gt.types,T=C.SPHERE,E=C.PLANE,D=this.bins,R=this.binLengths,P=this.bins.length;for(let z=0;z!==P;z++)R[z]=0;const k=Math.ceil;function F(z,q,B,W,Q,j,dt){let ct=(z-g)*_|0,rt=(q-m)*y|0,$=(B-x)*A|0,O=k((W-g)*_),I=k((Q-m)*y),K=k((j-x)*A);ct<0?ct=0:ct>=a&&(ct=a-1),rt<0?rt=0:rt>=l&&(rt=l-1),$<0?$=0:$>=c&&($=c-1),O<0?O=0:O>=a&&(O=a-1),I<0?I=0:I>=l&&(I=l-1),K<0?K=0:K>=c&&(K=c-1),ct*=h,rt*=u,$*=1,O*=h,I*=u,K*=1;for(let at=ct;at<=O;at+=h)for(let X=rt;X<=I;X+=u)for(let L=$;L<=K;L+=1){const Y=at+X+L;D[Y][R[Y]++]=dt}}for(let z=0;z!==n;z++){const q=i[z],B=q.shapes[0];switch(B.type){case T:{const W=B,Q=q.position.x,j=q.position.y,dt=q.position.z,ct=W.radius;F(Q-ct,j-ct,dt-ct,Q+ct,j+ct,dt+ct,q);break}case E:{const W=B;W.worldNormalNeedsUpdate&&W.computeWorldNormal(q.quaternion);const Q=W.worldNormal,j=g+.5*b-q.position.x,dt=m+.5*v-q.position.y,ct=x+.5*w-q.position.z,rt=Ry;rt.set(j,dt,ct);for(let $=0,O=0;$!==a;$++,O+=h,rt.y=dt,rt.x+=b)for(let I=0,K=0;I!==l;I++,K+=u,rt.z=ct,rt.y+=v)for(let at=0,X=0;at!==c;at++,X+=1,rt.z+=w)if(rt.dot(Q)<M){const L=O+K+X;D[L][R[L]++]=q}break}default:q.aabbNeedsUpdate&&q.updateAABB(),F(q.aabb.lowerBound.x,q.aabb.lowerBound.y,q.aabb.lowerBound.z,q.aabb.upperBound.x,q.aabb.upperBound.y,q.aabb.upperBound.z,q)}}for(let z=0;z!==P;z++){const q=R[z];if(q>1){const B=D[z];for(let W=0;W!==q;W++){const Q=B[W];for(let j=0;j!==W;j++){const dt=B[j];this.needBroadphaseCollision(Q,dt)&&this.intersectionTest(Q,dt,t,e)}}}}this.makePairsUnique(t,e)}},Heightfield:class extends gt{constructor(s,t){t===void 0&&(t={}),t=hh.defaults(t,{maxValue:null,minValue:null,elementSize:1}),super({type:gt.types.HEIGHTFIELD}),this.data=s,this.maxValue=t.maxValue,this.minValue=t.minValue,this.elementSize=t.elementSize,t.minValue===null&&this.updateMinValue(),t.maxValue===null&&this.updateMaxValue(),this.cacheEnabled=!0,this.pillarConvex=new Ki,this.pillarOffset=new S,this.updateBoundingSphereRadius(),this._cachedPillars={}}update(){this._cachedPillars={}}updateMinValue(){const s=this.data;let t=s[0][0];for(let e=0;e!==s.length;e++)for(let n=0;n!==s[e].length;n++){const i=s[e][n];i<t&&(t=i)}this.minValue=t}updateMaxValue(){const s=this.data;let t=s[0][0];for(let e=0;e!==s.length;e++)for(let n=0;n!==s[e].length;n++){const i=s[e][n];i>t&&(t=i)}this.maxValue=t}setHeightValueAtIndex(s,t,e){this.data[s][t]=e,this.clearCachedConvexTrianglePillar(s,t,!1),s>0&&(this.clearCachedConvexTrianglePillar(s-1,t,!0),this.clearCachedConvexTrianglePillar(s-1,t,!1)),t>0&&(this.clearCachedConvexTrianglePillar(s,t-1,!0),this.clearCachedConvexTrianglePillar(s,t-1,!1)),t>0&&s>0&&this.clearCachedConvexTrianglePillar(s-1,t-1,!0)}getRectMinMax(s,t,e,n,i){i===void 0&&(i=[]);const r=this.data;let o=this.minValue;for(let a=s;a<=e;a++)for(let l=t;l<=n;l++){const c=r[a][l];c>o&&(o=c)}i[0]=this.minValue,i[1]=o}getIndexOfPosition(s,t,e,n){const i=this.elementSize,r=this.data;let o=Math.floor(s/i),a=Math.floor(t/i);return e[0]=o,e[1]=a,n&&(o<0&&(o=0),a<0&&(a=0),o>=r.length-1&&(o=r.length-1),a>=r[0].length-1&&(a=r[0].length-1)),!(o<0||a<0||o>=r.length-1||a>=r[0].length-1)}getTriangleAt(s,t,e,n,i,r){const o=am;this.getIndexOfPosition(s,t,o,e);let a=o[0],l=o[1];const c=this.data;e&&(a=Math.min(c.length-2,Math.max(0,a)),l=Math.min(c[0].length-2,Math.max(0,l)));const h=this.elementSize,u=(s/h-a)**2+(t/h-l)**2>(s/h-(a+1))**2+(t/h-(l+1))**2;return this.getTriangle(a,l,u,n,i,r),u}getNormalAt(s,t,e,n){const i=Qx,r=Jx,o=tw,a=ew,l=nw;this.getTriangleAt(s,t,e,i,r,o),r.vsub(i,a),o.vsub(i,l),a.cross(l,n),n.normalize()}getAabbAtIndex(s,t,e){let{lowerBound:n,upperBound:i}=e;const r=this.data,o=this.elementSize;n.set(s*o,t*o,r[s][t]),i.set((s+1)*o,(t+1)*o,r[s+1][t+1])}getHeightAt(s,t,e){const n=this.data,i=$x,r=Zx,o=Kx,a=am;this.getIndexOfPosition(s,t,a,e);let l=a[0],c=a[1];e&&(l=Math.min(n.length-2,Math.max(0,l)),c=Math.min(n[0].length-2,Math.max(0,c)));const h=this.getTriangleAt(s,t,e,i,r,o);(function(d,p,f,g,m,x,_,y,A){A.x=((x-y)*(d-_)+(_-m)*(p-y))/((x-y)*(f-_)+(_-m)*(g-y)),A.y=((y-g)*(d-_)+(f-_)*(p-y))/((x-y)*(f-_)+(_-m)*(g-y)),A.z=1-A.x-A.y})(s,t,i.x,i.y,r.x,r.y,o.x,o.y,lm);const u=lm;return h?n[l+1][c+1]*u.x+n[l][c+1]*u.y+n[l+1][c]*u.z:n[l][c]*u.x+n[l+1][c]*u.y+n[l][c+1]*u.z}getCacheConvexTrianglePillarKey(s,t,e){return`${s}_${t}_${e?1:0}`}getCachedConvexTrianglePillar(s,t,e){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(s,t,e)]}setCachedConvexTrianglePillar(s,t,e,n,i){this._cachedPillars[this.getCacheConvexTrianglePillarKey(s,t,e)]={convex:n,offset:i}}clearCachedConvexTrianglePillar(s,t,e){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(s,t,e)]}getTriangle(s,t,e,n,i,r){const o=this.data,a=this.elementSize;e?(n.set((s+1)*a,(t+1)*a,o[s+1][t+1]),i.set(s*a,(t+1)*a,o[s][t+1]),r.set((s+1)*a,t*a,o[s+1][t])):(n.set(s*a,t*a,o[s][t]),i.set((s+1)*a,t*a,o[s+1][t]),r.set(s*a,(t+1)*a,o[s][t+1]))}getConvexTrianglePillar(s,t,e){let n=this.pillarConvex,i=this.pillarOffset;if(this.cacheEnabled){const h=this.getCachedConvexTrianglePillar(s,t,e);if(h)return this.pillarConvex=h.convex,this.pillarOffset=h.offset,void 0;n=new Ki,i=new S,this.pillarConvex=n,this.pillarOffset=i}const r=this.data,o=this.elementSize,a=n.faces;n.vertices.length=6;for(let h=0;h<6;h++)n.vertices[h]||(n.vertices[h]=new S);a.length=5;for(let h=0;h<5;h++)a[h]||(a[h]=[]);const l=n.vertices,c=(Math.min(r[s][t],r[s+1][t],r[s][t+1],r[s+1][t+1])-this.minValue)/2+this.minValue;e?(i.set((s+.75)*o,(t+.75)*o,c),l[0].set(.25*o,.25*o,r[s+1][t+1]-c),l[1].set(-.75*o,.25*o,r[s][t+1]-c),l[2].set(.25*o,-.75*o,r[s+1][t]-c),l[3].set(.25*o,.25*o,-Math.abs(c)-1),l[4].set(-.75*o,.25*o,-Math.abs(c)-1),l[5].set(.25*o,-.75*o,-Math.abs(c)-1),a[0][0]=0,a[0][1]=1,a[0][2]=2,a[1][0]=5,a[1][1]=4,a[1][2]=3,a[2][0]=2,a[2][1]=5,a[2][2]=3,a[2][3]=0,a[3][0]=3,a[3][1]=4,a[3][2]=1,a[3][3]=0,a[4][0]=1,a[4][1]=4,a[4][2]=5,a[4][3]=2):(i.set((s+.25)*o,(t+.25)*o,c),l[0].set(-.25*o,-.25*o,r[s][t]-c),l[1].set(.75*o,-.25*o,r[s+1][t]-c),l[2].set(-.25*o,.75*o,r[s][t+1]-c),l[3].set(-.25*o,-.25*o,-Math.abs(c)-1),l[4].set(.75*o,-.25*o,-Math.abs(c)-1),l[5].set(-.25*o,.75*o,-Math.abs(c)-1),a[0][0]=0,a[0][1]=1,a[0][2]=2,a[1][0]=5,a[1][1]=4,a[1][2]=3,a[2][0]=0,a[2][1]=2,a[2][2]=5,a[2][3]=3,a[3][0]=1,a[3][1]=0,a[3][2]=3,a[3][3]=4,a[4][0]=4,a[4][1]=5,a[4][2]=2,a[4][3]=1),n.computeNormals(),n.computeEdges(),n.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(s,t,e,n,i)}calculateLocalInertia(s,t){return t===void 0&&(t=new S),t.set(0,0,0),t}volume(){return Number.MAX_VALUE}calculateWorldAABB(s,t,e,n){e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),n.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)}updateBoundingSphereRadius(){const s=this.data,t=this.elementSize;this.boundingSphereRadius=new S(s.length*t,s[0].length*t,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).length()}setHeightsFromImage(s,t){const{x:e,z:n,y:i}=t,r=document.createElement("canvas");r.width=s.width,r.height=s.height;const o=r.getContext("2d");o.drawImage(s,0,0);const a=o.getImageData(0,0,s.width,s.height),l=this.data;l.length=0,this.elementSize=Math.abs(e)/a.width;for(let c=0;c<a.height;c++){const h=[];for(let u=0;u<a.width;u++){const d=(a.data[4*(c*a.height+u)]+a.data[4*(c*a.height+u)+1]+a.data[4*(c*a.height+u)+2])/4/255*n;e<0?h.push(d):h.unshift(d)}i<0?l.unshift(h):l.push(h)}this.updateMaxValue(),this.updateMinValue(),this.update()}},HingeConstraint:em,JacobianElement:yu,LockConstraint:class extends Bl{constructor(s,t,e){e===void 0&&(e={});const n=e.maxForce!==void 0?e.maxForce:1e6,i=new S,r=new S,o=new S;s.position.vadd(t.position,o),o.scale(.5,o),t.pointToLocalFrame(o,r),s.pointToLocalFrame(o,i),super(s,i,t,r,n),this.xA=s.vectorToLocalFrame(S.UNIT_X),this.xB=t.vectorToLocalFrame(S.UNIT_X),this.yA=s.vectorToLocalFrame(S.UNIT_Y),this.yB=t.vectorToLocalFrame(S.UNIT_Y),this.zA=s.vectorToLocalFrame(S.UNIT_Z),this.zB=t.vectorToLocalFrame(S.UNIT_Z);const a=this.rotationalEquation1=new Ys(s,t,e),l=this.rotationalEquation2=new Ys(s,t,e),c=this.rotationalEquation3=new Ys(s,t,e);this.equations.push(a,l,c)}update(){const s=this.bodyA,t=this.bodyB,e=this.rotationalEquation1,n=this.rotationalEquation2,i=this.rotationalEquation3;super.update(),s.vectorToWorldFrame(this.xA,e.axisA),t.vectorToWorldFrame(this.yB,e.axisB),s.vectorToWorldFrame(this.yA,n.axisA),t.vectorToWorldFrame(this.zB,n.axisB),s.vectorToWorldFrame(this.zA,i.axisA),t.vectorToWorldFrame(this.xB,i.axisB)}},Mat3:zn,Material:as,NaiveBroadphase:Lf,Narrowphase:Hf,ObjectCollisionMatrix:class{constructor(){this.matrix={}}get(s,t){let{id:e}=s,{id:n}=t;if(n>e){const i=n;n=e,e=i}return`${e}-${n}`in this.matrix}set(s,t,e){let{id:n}=s,{id:i}=t;if(i>n){const r=i;i=n,n=r}e?this.matrix[`${n}-${i}`]=!0:delete this.matrix[`${n}-${i}`]}reset(){this.matrix={}}setNumObjects(s){}},Particle:class extends gt{constructor(){super({type:gt.types.PARTICLE})}calculateLocalInertia(s,t){return t===void 0&&(t=new S),t.set(0,0,0),t}volume(){return 0}updateBoundingSphereRadius(){this.boundingSphereRadius=0}calculateWorldAABB(s,t,e,n){e.copy(s),n.copy(s)}},Plane:Ju,PointToPointConstraint:Bl,Pool:Wf,Quaternion:me,RAY_MODES:zl,Ray:Me,RaycastResult:no,RaycastVehicle:class{constructor(s){this.chassisBody=s.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=s.indexRightAxis!==void 0?s.indexRightAxis:2,this.indexForwardAxis=s.indexForwardAxis!==void 0?s.indexForwardAxis:0,this.indexUpAxis=s.indexUpAxis!==void 0?s.indexUpAxis:1,this.constraints=[],this.preStepCallback=()=>{},this.currentVehicleSpeedKmHour=0,this.numWheelsOnGround=0}addWheel(s){s===void 0&&(s={});const t=new nm(s),e=this.wheelInfos.length;return this.wheelInfos.push(t),e}setSteeringValue(s,t){this.wheelInfos[t].steering=s}applyEngineForce(s,t){this.wheelInfos[t].engineForce=s}setBrake(s,t){this.wheelInfos[t].brake=s}addToWorld(s){s.addBody(this.chassisBody);const t=this;this.preStepCallback=()=>{t.updateVehicle(s.dt)},s.addEventListener("preStep",this.preStepCallback),this.world=s}getVehicleAxisWorld(s,t){t.set(s===0?1:0,s===1?1:0,s===2?1:0),this.chassisBody.vectorToWorldFrame(t,t)}updateVehicle(s){const t=this.wheelInfos,e=t.length,n=this.chassisBody;for(let h=0;h<e;h++)this.updateWheelTransform(h);this.currentVehicleSpeedKmHour=3.6*n.velocity.length();const i=new S;this.getVehicleAxisWorld(this.indexForwardAxis,i),i.dot(n.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(let h=0;h<e;h++)this.castRay(t[h]);this.updateSuspension(s);const r=new S,o=new S;for(let h=0;h<e;h++){const u=t[h];let d=u.suspensionForce;d>u.maxSuspensionForce&&(d=u.maxSuspensionForce),u.raycastResult.hitNormalWorld.scale(d*s,r),u.raycastResult.hitPointWorld.vsub(n.position,o),n.applyImpulse(r,o)}this.updateFriction(s);const a=new S,l=new S,c=new S;for(let h=0;h<e;h++){const u=t[h];n.getVelocityAtWorldPoint(u.chassisConnectionPointWorld,c);let d=1;if(this.indexUpAxis===1&&(d=-1),u.isInContact){this.getVehicleAxisWorld(this.indexForwardAxis,l);const p=l.dot(u.raycastResult.hitNormalWorld);u.raycastResult.hitNormalWorld.scale(p,a),l.vsub(a,l);const f=l.dot(c);u.deltaRotation=d*f*s/u.radius}!u.sliding&&u.isInContact||u.engineForce===0||!u.useCustomSlidingRotationalSpeed||(u.deltaRotation=(u.engineForce>0?1:-1)*u.customSlidingRotationalSpeed*s),Math.abs(u.brake)>Math.abs(u.engineForce)&&(u.deltaRotation=0),u.rotation+=u.deltaRotation,u.deltaRotation*=.99}}updateSuspension(s){const t=this.chassisBody.mass,e=this.wheelInfos,n=e.length;for(let i=0;i<n;i++){const r=e[i];if(r.isInContact){let o;const a=r.suspensionRestLength-r.suspensionLength;o=r.suspensionStiffness*a*r.clippedInvContactDotSuspension;const l=r.suspensionRelativeVelocity;let c;c=l<0?r.dampingCompression:r.dampingRelaxation,o-=c*l,r.suspensionForce=o*t,r.suspensionForce<0&&(r.suspensionForce=0)}else r.suspensionForce=0}}removeFromWorld(s){s.removeBody(this.chassisBody),s.removeEventListener("preStep",this.preStepCallback),this.world=null}castRay(s){const t=Sx,e=Mx;this.updateWheelTransformWorld(s);const n=this.chassisBody;let i=-1;const r=s.suspensionRestLength+s.radius;s.directionWorld.scale(r,t);const o=s.chassisConnectionPointWorld;o.vadd(t,e);const a=s.raycastResult;a.reset();const l=n.collisionResponse;n.collisionResponse=!1,this.world.rayTest(o,e,a),n.collisionResponse=l;const c=a.body;if(s.raycastResult.groundObject=0,c){i=a.distance,s.raycastResult.hitNormalWorld=a.hitNormalWorld,s.isInContact=!0;const h=a.distance;s.suspensionLength=h-s.radius;const u=s.suspensionRestLength-s.maxSuspensionTravel,d=s.suspensionRestLength+s.maxSuspensionTravel;s.suspensionLength<u&&(s.suspensionLength=u),s.suspensionLength>d&&(s.suspensionLength=d,s.raycastResult.reset());const p=s.raycastResult.hitNormalWorld.dot(s.directionWorld),f=new S;n.getVelocityAtWorldPoint(s.raycastResult.hitPointWorld,f);const g=s.raycastResult.hitNormalWorld.dot(f);if(p>=-.1)s.suspensionRelativeVelocity=0,s.clippedInvContactDotSuspension=10;else{const m=-1/p;s.suspensionRelativeVelocity=g*m,s.clippedInvContactDotSuspension=m}}else s.suspensionLength=s.suspensionRestLength+0*s.maxSuspensionTravel,s.suspensionRelativeVelocity=0,s.directionWorld.scale(-1,s.raycastResult.hitNormalWorld),s.clippedInvContactDotSuspension=1;return i}updateWheelTransformWorld(s){s.isInContact=!1;const t=this.chassisBody;t.pointToWorldFrame(s.chassisConnectionPointLocal,s.chassisConnectionPointWorld),t.vectorToWorldFrame(s.directionLocal,s.directionWorld),t.vectorToWorldFrame(s.axleLocal,s.axleWorld)}updateWheelTransform(s){const t=xx,e=wx,n=bx,i=this.wheelInfos[s];this.updateWheelTransformWorld(i),i.directionLocal.scale(-1,t),e.copy(i.axleLocal),t.cross(e,n),n.normalize(),e.normalize();const r=i.steering,o=new me;o.setFromAxisAngle(t,r);const a=new me;a.setFromAxisAngle(e,i.rotation);const l=i.worldTransform.quaternion;this.chassisBody.quaternion.mult(o,l),l.mult(a,l),l.normalize();const c=i.worldTransform.position;c.copy(i.directionWorld),c.scale(i.suspensionLength,c),c.vadd(i.chassisConnectionPointWorld,c)}getWheelTransformWorld(s){return this.wheelInfos[s].worldTransform}updateFriction(s){const t=Ex,e=this.wheelInfos,n=e.length,i=this.chassisBody,r=Cx,o=Ax;this.numWheelsOnGround=0;for(let a=0;a<n;a++){const l=e[a];l.raycastResult.body&&this.numWheelsOnGround++,l.sideImpulse=0,l.forwardImpulse=0,r[a]||(r[a]=new S),o[a]||(o[a]=new S)}for(let a=0;a<n;a++){const l=e[a],c=l.raycastResult.body;if(c){const h=o[a];this.getWheelTransformWorld(a).vectorToWorldFrame(Tx[this.indexRightAxis],h);const u=l.raycastResult.hitNormalWorld,d=h.dot(u);u.scale(d,t),h.vsub(t,h),h.normalize(),u.cross(h,r[a]),r[a].normalize(),l.sideImpulse=Vx(i,l.raycastResult.hitPointWorld,c,l.raycastResult.hitPointWorld,h),l.sideImpulse*=Rx}}this.sliding=!1;for(let a=0;a<n;a++){const l=e[a],c=l.raycastResult.body;let h=0;if(l.slipInfo=1,c){const d=l.brake?l.brake:0;h=Lx(i,c,l.raycastResult.hitPointWorld,r[a],d),h+=l.engineForce*s;const p=d/h;l.slipInfo*=p}if(l.forwardImpulse=0,l.skidInfo=1,c){l.skidInfo=1;const u=l.suspensionForce*s*l.frictionSlip,d=u*u;l.forwardImpulse=h;const p=.5*l.forwardImpulse/l.forwardAcceleration,f=1*l.sideImpulse/l.sideAcceleration,g=p*p+f*f;if(l.sliding=!1,g>d){this.sliding=!0,l.sliding=!0;const m=u/Math.sqrt(g);l.skidInfo*=m}}}if(this.sliding)for(let a=0;a<n;a++){const l=e[a];l.sideImpulse!==0&&l.skidInfo<1&&(l.forwardImpulse*=l.skidInfo,l.sideImpulse*=l.skidInfo)}for(let a=0;a<n;a++){const l=e[a],c=new S;if(l.raycastResult.hitPointWorld.vsub(i.position,c),l.forwardImpulse!==0){const h=new S;r[a].scale(l.forwardImpulse,h),i.applyImpulse(h,c)}if(l.sideImpulse!==0){const h=l.raycastResult.body,u=new S;l.raycastResult.hitPointWorld.vsub(h.position,u);const d=new S;o[a].scale(l.sideImpulse,d),i.vectorToLocalFrame(c,c),c["xyz"[this.indexUpAxis]]*=l.rollInfluence,i.vectorToWorldFrame(c,c),i.applyImpulse(d,c),d.scale(-1,d),h.applyImpulse(d,u)}}}},RigidVehicle:class{constructor(s){s===void 0&&(s={}),this.wheelBodies=[],this.coordinateSystem=s.coordinateSystem!==void 0?s.coordinateSystem.clone():new S(1,2,3),s.chassisBody?this.chassisBody=s.chassisBody:this.chassisBody=new vt({mass:1,shape:new Ve(new S(5,.5,2))}),this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}addWheel(s){let t;s===void 0&&(s={}),t=s.body?s.body:new vt({mass:1,shape:new so(1.2)}),this.wheelBodies.push(t),this.wheelForces.push(0);const e=s.position!==void 0?s.position.clone():new S,n=new S;this.chassisBody.pointToWorldFrame(e,n),t.position.set(n.x,n.y,n.z);const i=s.axis!==void 0?s.axis.clone():new S(0,0,1);this.wheelAxes.push(i);const r=new em(this.chassisBody,t,{pivotA:e,axisA:i,pivotB:S.ZERO,axisB:i,collideConnected:!1});return this.constraints.push(r),this.wheelBodies.length-1}setSteeringValue(s,t){const e=this.wheelAxes[t],n=Math.cos(s),i=Math.sin(s),r=e.x,o=e.z;this.constraints[t].axisA.set(-n*r+i*o,0,i*r+n*o)}setMotorSpeed(s,t){const e=this.constraints[t];e.enableMotor(),e.motorTargetVelocity=s}disableMotor(s){this.constraints[s].disableMotor()}setWheelForce(s,t){this.wheelForces[t]=s}applyWheelForce(s,t){const e=this.wheelAxes[t],n=this.wheelBodies[t],i=n.torque;e.scale(s,xl),n.vectorToWorldFrame(xl,xl),i.vadd(xl,i)}addToWorld(s){const t=this.constraints,e=this.wheelBodies.concat([this.chassisBody]);for(let n=0;n<e.length;n++)s.addBody(e[n]);for(let n=0;n<t.length;n++)s.addConstraint(t[n]);s.addEventListener("preStep",this._update.bind(this))}_update(){const s=this.wheelForces;for(let t=0;t<s.length;t++)this.applyWheelForce(s[t],t)}removeFromWorld(s){const t=this.constraints,e=this.wheelBodies.concat([this.chassisBody]);for(let n=0;n<e.length;n++)s.removeBody(e[n]);for(let n=0;n<t.length;n++)s.removeConstraint(t[n])}getWheelSpeed(s){const t=this.wheelAxes[s],e=this.wheelBodies[s].angularVelocity;return this.chassisBody.vectorToWorldFrame(t,om),e.dot(om)}},RotationalEquation:Ys,RotationalMotorEquation:Vf,SAPBroadphase:Ks,SHAPE_TYPES:If,SPHSystem:class{constructor(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}add(s){this.particles.push(s),this.neighbors.length<this.particles.length&&this.neighbors.push([])}remove(s){const t=this.particles.indexOf(s);t!==-1&&(this.particles.splice(t,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())}getNeighbors(s,t){const e=this.particles.length,n=s.id,i=this.smoothingRadius*this.smoothingRadius,r=qx;for(let o=0;o!==e;o++){const a=this.particles[o];a.position.vsub(s.position,r),n!==a.id&&r.lengthSquared()<i&&t.push(a)}}update(){const s=this.particles.length,t=Wx,e=this.speedOfSound,n=this.eps;for(let c=0;c!==s;c++){const h=this.particles[c],u=this.neighbors[c];u.length=0,this.getNeighbors(h,u),u.push(this.particles[c]);const d=u.length;let p=0;for(let f=0;f!==d;f++){h.position.vsub(u[f].position,t);const g=t.length(),m=this.w(g);p+=u[f].mass*m}this.densities[c]=p,this.pressures[c]=e*e*(this.densities[c]-this.density)}const i=Gx,r=Hx,o=jx,a=Xx,l=Yx;for(let c=0;c!==s;c++){const h=this.particles[c];let u,d;i.set(0,0,0),r.set(0,0,0);const p=this.neighbors[c],f=p.length;for(let g=0;g!==f;g++){const m=p[g];h.position.vsub(m.position,a);const x=a.length();u=-m.mass*(this.pressures[c]/(this.densities[c]*this.densities[c]+n)+this.pressures[g]/(this.densities[g]*this.densities[g]+n)),this.gradw(a,o),o.scale(u,o),i.vadd(o,i),m.velocity.vsub(h.velocity,l),l.scale(1/(1e-4+this.densities[c]*this.densities[g])*this.viscosity*m.mass,l),d=this.nablaw(x),l.scale(d,l),r.vadd(l,r)}r.scale(h.mass,r),i.scale(h.mass,i),h.force.vadd(r,h.force),h.force.vadd(i,h.force)}}w(s){const t=this.smoothingRadius;return 315/(64*Math.PI*t**9)*(t*t-s*s)**3}gradw(s,t){const e=s.length(),n=this.smoothingRadius;s.scale(945/(32*Math.PI*n**9)*(n*n-e*e)**2,t)}nablaw(s){const t=this.smoothingRadius;return 945/(32*Math.PI*t**9)*(t*t-s*s)*(7*s*s-3*t*t)}},Shape:gt,Solver:wu,Sphere:so,SplitSolver:class extends wu{constructor(s){for(super(),this.iterations=10,this.tolerance=1e-7,this.subsolver=s,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}createNode(){return{body:null,children:[],eqs:[],visited:!1}}solve(s,t){const e=pw,n=this.nodePool,i=t.bodies,r=this.equations,o=r.length,a=i.length,l=this.subsolver;for(;n.length<a;)n.push(this.createNode());e.length=a;for(let p=0;p<a;p++)e[p]=n[p];for(let p=0;p!==a;p++){const f=e[p];f.body=i[p],f.children.length=0,f.eqs.length=0,f.visited=!1}for(let p=0;p!==o;p++){const f=r[p],g=i.indexOf(f.bi),m=i.indexOf(f.bj),x=e[g],_=e[m];x.children.push(_),x.eqs.push(f),_.children.push(x),_.eqs.push(f)}let c,h=0,u=mw;l.tolerance=this.tolerance,l.iterations=this.iterations;const d=fw;for(;c=qf(e);){u.length=0,d.bodies.length=0,_w(c,vw,d.bodies,u);const p=u.length;u=u.sort(yw);for(let f=0;f!==p;f++)l.addEquation(u[f]);l.solve(s,d),l.removeAllEquations(),h++}return h}},Spring:class{constructor(s,t,e){e===void 0&&(e={}),this.restLength=typeof e.restLength=="number"?e.restLength:1,this.stiffness=e.stiffness||100,this.damping=e.damping||1,this.bodyA=s,this.bodyB=t,this.localAnchorA=new S,this.localAnchorB=new S,e.localAnchorA&&this.localAnchorA.copy(e.localAnchorA),e.localAnchorB&&this.localAnchorB.copy(e.localAnchorB),e.worldAnchorA&&this.setWorldAnchorA(e.worldAnchorA),e.worldAnchorB&&this.setWorldAnchorB(e.worldAnchorB)}setWorldAnchorA(s){this.bodyA.pointToLocalFrame(s,this.localAnchorA)}setWorldAnchorB(s){this.bodyB.pointToLocalFrame(s,this.localAnchorB)}getWorldAnchorA(s){this.bodyA.pointToWorldFrame(this.localAnchorA,s)}getWorldAnchorB(s){this.bodyB.pointToWorldFrame(this.localAnchorB,s)}applyForce(){const s=this.stiffness,t=this.damping,e=this.restLength,n=this.bodyA,i=this.bodyB,r=cx,o=hx,a=ux,l=dx,c=yx,h=px,u=mx,d=fx,p=gx,f=_x,g=vx;this.getWorldAnchorA(h),this.getWorldAnchorB(u),h.vsub(n.position,d),u.vsub(i.position,p),u.vsub(h,r);const m=r.length();o.copy(r),o.normalize(),i.velocity.vsub(n.velocity,a),i.angularVelocity.cross(p,c),a.vadd(c,a),n.angularVelocity.cross(d,c),a.vsub(c,a),o.scale(-s*(m-e)-t*a.dot(o),l),n.force.vsub(l,n.force),i.force.vadd(l,i.force),d.cross(l,f),p.cross(l,g),n.torque.vsub(f,n.torque),i.torque.vadd(g,i.torque)}},Transform:jt,Trimesh:Ql,Vec3:S,Vec3Pool:Gf,WheelInfo:nm,World:ed},Symbol.toStringTag,{value:"Module"})),jf="14.8.49",ym=(s,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:s}),xm=(s,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:s}),bu=(s,t)=>({startTime:t,type:"setValue",value:s}),Xf=(s,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:s}),Yf=(s,t,{startTime:e,target:n,timeConstant:i})=>n+(t-n)*Math.exp((e-s)/i),Gr=s=>s.type==="exponentialRampToValue",Jl=s=>s.type==="linearRampToValue",gs=s=>Gr(s)||Jl(s),nd=s=>s.type==="setValue",Yi=s=>s.type==="setValueCurve",tc=(s,t,e,n)=>{const i=s[t];return i===void 0?n:gs(i)||nd(i)?i.value:Yi(i)?i.values[i.values.length-1]:Yf(e,tc(s,t-1,i.startTime,n),i)},wm=(s,t,e,n,i)=>e===void 0?[n.insertTime,i]:gs(e)?[e.endTime,e.value]:nd(e)?[e.startTime,e.value]:Yi(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,tc(s,t-1,e.startTime,i)],Su=s=>s.type==="cancelAndHold",Mu=s=>s.type==="cancelScheduledValues",fs=s=>Su(s)||Mu(s)?s.cancelTime:Gr(s)||Jl(s)?s.endTime:s.startTime,bm=(s,t,e,{endTime:n,value:i})=>e===i?i:0<e&&0<i||e<0&&i<0?e*(i/e)**((s-t)/(n-t)):0,Sm=(s,t,e,{endTime:n,value:i})=>e+(s-t)/(n-t)*(i-e),Nb=(s,{duration:t,startTime:e,values:n})=>((i,r)=>{const o=Math.floor(r),a=Math.ceil(r);return o===a?i[o]:(1-(r-o))*i[o]+(1-(a-r))*i[a]})(n,(s-e)/t*(n.length-1)),El=s=>s.type==="setTarget";class kb{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=fs(t);if(Su(t)||Mu(t)){const n=this._automationEvents.findIndex(r=>Mu(t)&&Yi(r)?r.startTime+r.duration>=e:fs(r)>=e),i=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),Su(t)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&gs(i)){if(r!==void 0&&El(r))throw new Error("The internal list is malformed.");const o=r===void 0?i.insertTime:Yi(r)?r.startTime+r.duration:fs(r),a=r===void 0?this._defaultValue:Yi(r)?r.values[r.values.length-1]:r.value,l=Gr(i)?bm(e,o,a,i):Sm(e,o,a,i),c=Gr(i)?ym(l,e,this._currenTime):xm(l,e,this._currenTime);this._automationEvents.push(c)}if(r!==void 0&&El(r)&&this._automationEvents.push(bu(this.getValue(e),e)),r!==void 0&&Yi(r)&&r.startTime+r.duration>e){const o=e-r.startTime,a=(r.values.length-1)/r.duration,l=Math.max(2,1+Math.ceil(o*a)),c=o/(l-1)*a,h=r.values.slice(0,l);if(c<1)for(let u=1;u<l;u+=1){const d=c*u%1;h[u]=r.values[u-1]*(1-d)+r.values[u]*d}this._automationEvents[this._automationEvents.length-1]=Xf(h,r.startTime,o)}}}else{const n=this._automationEvents.findIndex(o=>fs(o)>e),i=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(i!==void 0&&Yi(i)&&fs(i)+i.duration>e)return!1;const r=Gr(t)?ym(t.value,t.endTime,this._currenTime):Jl(t)?xm(t.value,e,this._currenTime):t;if(n===-1)this._automationEvents.push(r);else{if(Yi(t)&&e+t.duration>fs(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(n=>fs(n)>t);if(e>1){const n=this._automationEvents.slice(e-1),i=n[0];El(i)&&n.unshift(bu(tc(this._automationEvents,e-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=n}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(o=>fs(o)>t),n=this._automationEvents[e],i=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[i];if(r!==void 0&&El(r)&&(n===void 0||!gs(n)||n.insertTime>t))return Yf(t,tc(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&nd(r)&&(n===void 0||!gs(n)))return r.value;if(r!==void 0&&Yi(r)&&(n===void 0||!gs(n)||r.startTime+r.duration>t))return t<r.startTime+r.duration?Nb(t,r):r.values[r.values.length-1];if(r!==void 0&&gs(r)&&(n===void 0||!gs(n)))return r.value;if(n!==void 0&&Gr(n)){const[o,a]=wm(this._automationEvents,i,r,n,this._defaultValue);return bm(t,o,a,n)}if(n!==void 0&&Jl(n)){const[o,a]=wm(this._automationEvents,i,r,n,this._defaultValue);return Sm(t,o,a,n)}return this._defaultValue}}const ro=new WeakSet,$f=new WeakMap,id=new WeakMap,Zf=new WeakMap,sd=new WeakMap,uh=new WeakMap,Kf=new WeakMap,Tu=new WeakMap,Eu=new WeakMap,Au=new WeakMap,Qf={construct:()=>Qf},Mm=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,Tm=(s,t)=>{const e=[];let n=s.replace(/^[\s]+/,""),i=n.match(Mm);for(;i!==null;){const r=i[1].slice(1,-1),o=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(o),n=n.slice(i[0].length).replace(/^[\s]+/,""),i=n.match(Mm)}return[e.join(";"),n]},Em=s=>{if(s!==void 0&&!Array.isArray(s))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},Am=s=>{if(!(t=>{try{new new Proxy(t,Qf)}catch{return!1}return!0})(s))throw new TypeError("The given value for processorCtor should be a constructor.");if(s.prototype===null||typeof s.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},ci=(s,t)=>{const e=s.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},dh=(s,t)=>{const e=Array.from(s).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[n]=e;return s.delete(n),n},Jf=(s,t,e,n)=>{const i=ci(s,t),r=dh(i,o=>o[0]===e&&o[1]===n);return i.size===0&&s.delete(t),r},Fa=s=>ci(Kf,s),$r=s=>{if(ro.has(s))throw new Error("The AudioNode is already stored.");ro.add(s),Fa(s).forEach(t=>t(!0))},tg=s=>"port"in s,Na=s=>{if(!ro.has(s))throw new Error("The AudioNode is not stored.");ro.delete(s),Fa(s).forEach(t=>t(!1))},Cu=(s,t)=>{!tg(s)&&t.every(e=>e.size===0)&&Na(s)},Ub={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},en=(s,t)=>s.context===t,ec=s=>{try{s.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Pi=()=>new DOMException("","IndexSizeError"),rd=s=>{var t;s.getChannelData=(t=s.getChannelData,e=>{try{return t.call(s,e)}catch(n){throw n.code===12?Pi():n}})},zb={numberOfChannels:1},_n=-34028234663852886e22,ln=-_n,Qi=s=>ro.has(s),Bb={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},on=s=>ci($f,s),ka=s=>ci(Zf,s),Ru=(s,t)=>{const{activeInputs:e}=on(s);e.forEach(i=>i.forEach(([r])=>{t.includes(s)||Ru(r,[...t,s])}));const n=(i=>"playbackRate"in i)(s)?[s.playbackRate]:tg(s)?Array.from(s.parameters.values()):(i=>"frequency"in i&&"gain"in i)(s)?[s.Q,s.detune,s.frequency,s.gain]:(i=>"offset"in i)(s)?[s.offset]:(i=>!("frequency"in i)&&"gain"in i)(s)?[s.gain]:(i=>"detune"in i&&"frequency"in i&&!("gain"in i))(s)?[s.detune,s.frequency]:(i=>"pan"in i)(s)?[s.pan]:[];for(const i of n){const r=ka(i);r!==void 0&&r.activeInputs.forEach(([o])=>Ru(o,t))}Qi(s)&&Na(s)},eg=s=>{Ru(s.destination,[])},Vl=s=>"context"in s,ca=s=>Vl(s[0]),fr=(s,t,e,n)=>{for(const i of s)if(e(i)){if(n)return!1;throw Error("The set contains at least one similar element.")}return s.add(t),!0},Cm=(s,t,[e,n],i)=>{fr(s,[t,e,n],r=>r[0]===t&&r[1]===e,i)},Rm=(s,[t,e,n],i)=>{const r=s.get(t);r===void 0?s.set(t,new Set([[e,n]])):fr(r,[e,n],o=>o[0]===e,i)},Uo=s=>"inputs"in s,ql=(s,t,e,n)=>{if(Uo(t)){const i=t.inputs[n];return s.connect(i,e,0),[i,e,0]}return s.connect(t,e,n),[t,e,n]},ng=(s,t,e)=>{for(const n of s)if(n[0]===t&&n[1]===e)return s.delete(n),n;return null},ig=(s,t)=>{if(!Fa(s).delete(t))throw new Error("Missing the expected event listener.")},sg=(s,t,e)=>{const n=ci(s,t),i=dh(n,r=>r[0]===e);return n.size===0&&s.delete(t),i},nc=(s,t,e,n)=>{Uo(t)?s.disconnect(t.inputs[n],e,0):s.disconnect(t,e,n)},ce=s=>ci(id,s),va=s=>ci(sd,s),or=s=>Tu.has(s),Al=s=>!ro.has(s),Dm=(s,t)=>new Promise(e=>{if(t!==null)e(!0);else{const n=s.createScriptProcessor(256,1,1),i=s.createGain(),r=s.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=s.createBufferSource();a.buffer=r,a.loop=!0,a.connect(n).connect(s.destination),a.connect(i),a.disconnect(i),n.onaudioprocess=l=>{const c=l.inputBuffer.getChannelData(0);Array.prototype.some.call(c,h=>h===1)?e(!0):e(!1),a.stop(),n.onaudioprocess=null,a.disconnect(n),n.disconnect(s.destination)},a.start()}}),au=(s,t)=>{const e=new Map;for(const n of s)for(const i of n){const r=e.get(i);e.set(i,r===void 0?1:r+1)}e.forEach((n,i)=>t(i,n))},ic=s=>"context"in s,Vb=(s,t,e,n)=>{const{activeInputs:i,passiveInputs:r}=ka(t),{outputs:o}=on(s),a=Fa(s),l=c=>{const h=ce(s),u=va(t);if(c){const d=sg(r,s,e);Cm(i,s,d,!1),n||or(s)||h.connect(u,e)}else{const d=((p,f,g)=>dh(p,m=>m[0]===f&&m[1]===g))(i,s,e);Rm(r,d,!1),n||or(s)||h.disconnect(u,e)}};return!!fr(o,[t,e],c=>c[0]===t&&c[1]===e,!0)&&(a.add(l),Qi(s)?Cm(i,s,[e,l],!0):Rm(r,[s,e,l],!0),!0)},lu=(s,t,e,n,i)=>{const[r,o]=((a,l,c,h)=>{const{activeInputs:u,passiveInputs:d}=on(l),p=ng(u[h],a,c);return p===null?[Jf(d,a,c,h)[2],!1]:[p[2],!0]})(s,e,n,i);if(r!==null&&(ig(s,r),!o||t||or(s)||nc(ce(s),ce(e),n,i)),Qi(e)){const{activeInputs:a}=on(e);Cu(e,a)}},cu=(s,t,e,n)=>{const[i,r]=((o,a,l)=>{const{activeInputs:c,passiveInputs:h}=ka(a),u=ng(c,o,l);return u===null?[sg(h,o,l)[1],!1]:[u[2],!0]})(s,e,n);i!==null&&(ig(s,i),!r||t||or(s)||ce(s).disconnect(va(e),n))};class rg{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((n,i)=>t.call(e,n,i,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const qb={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}};function sc(s,t,e,n,i){if(typeof s.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),s.copyFromChannel(t[e],n,i);else{const r=s.getChannelData(n);if(t[e].byteLength===0)t[e]=r.slice(i,i+128);else{const o=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(o)}}}const og=(s,t,e,n,i)=>{typeof s.copyToChannel=="function"?t[e].byteLength!==0&&s.copyToChannel(t[e],n,i):t[e].byteLength!==0&&s.getChannelData(n).set(t[e],i)},rc=(s,t)=>{const e=[];for(let n=0;n<s;n+=1){const i=[],r=typeof t=="number"?t:t[n];for(let o=0;o<r;o+=1)i.push(new Float32Array(128));e.push(i)}return e},Wb=async(s,t,e,n,i,r,o)=>{const a=t===null?128*Math.ceil(s.context.length/128):t.length,l=n.channelCount*n.numberOfInputs,c=i.reduce((m,x)=>m+x,0),h=c===0?null:e.createBuffer(c,a,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const u=on(s),d=await((m,x)=>{const _=ci(Au,m),y=ce(x);return ci(_,y)})(e,s),p=rc(n.numberOfInputs,n.channelCount),f=rc(n.numberOfOutputs,i),g=Array.from(s.parameters.keys()).reduce((m,x)=>({...m,[x]:new Float32Array(128)}),{});for(let m=0;m<a;m+=128){if(n.numberOfInputs>0&&t!==null)for(let x=0;x<n.numberOfInputs;x+=1)for(let _=0;_<n.channelCount;_+=1)sc(t,p[x],_,_,m);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:x},_)=>{sc(t,g,x,l+_,m)});for(let x=0;x<n.numberOfInputs;x+=1)for(let _=0;_<i[x];_+=1)f[x][_].byteLength===0&&(f[x][_]=new Float32Array(128));try{const x=p.map((y,A)=>u.activeInputs[A].size===0?[]:y),_=o(m/e.sampleRate,e.sampleRate,()=>d.process(x,f,g));if(h!==null)for(let y=0,A=0;y<n.numberOfOutputs;y+=1){for(let b=0;b<i[y];b+=1)og(h,f[y],b,A+b,m);A+=i[y]}if(!_)break}catch(x){s.dispatchEvent(new ErrorEvent("processorerror",{colno:x.colno,filename:x.filename,lineno:x.lineno,message:x.message}));break}}return h},Gb={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},Hb={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},jb={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},Xb={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},Yb={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Pm=s=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(n=>{const i=()=>{e.onmessage=null,t.close(),e.close(),n()};e.onmessage=()=>i();try{t.postMessage(s,[s])}catch{}finally{i()}})},$b={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},Cl=(s,t,e)=>{const n=t[e];if(n===void 0)throw s();return n},Zb={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},Kb={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},je=()=>new DOMException("","InvalidStateError"),ph=()=>new DOMException("","InvalidAccessError"),Qb={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},ag=(s,t,e,n,i,r,o,a,l,c,h)=>{const u=c.length;let d=a;for(let p=0;p<u;p+=1){let f=e[0]*c[p];for(let g=1;g<i;g+=1){const m=d-g&l-1;f+=e[g]*r[m],f-=s[g]*o[m]}for(let g=i;g<n;g+=1)f+=e[g]*r[d-g&l-1];for(let g=i;g<t;g+=1)f-=s[g]*o[d-g&l-1];r[d]=c[p],o[d]=f,d=d+1&l-1,h[p]=f}return d},Jb={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},Ta=s=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=s.decodeAudioData(t.buffer,()=>{});return e!==void 0&&(e.catch(()=>{}),!0)}catch{}return!1},de=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e]&&(s[e]=n)},ke=(s,t)=>{de(s,t,"channelCount"),de(s,t,"channelCountMode"),de(s,t,"channelInterpretation")},Im=s=>typeof s.getFloatTimeDomainData=="function",ye=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e].value&&(s[e].value=n)},od=s=>{s.start=(t=>(e=0,n=0,i)=>{if(typeof i=="number"&&i<0||n<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(s,e,n,i)})(s.start)},ad=s=>{var t;s.stop=(t=s.stop,(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(s,e)})},lg=(s,t)=>s===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(s*t))))),t1=async(s,t)=>{const e=await(n=>new Promise((i,r)=>{const{port1:o,port2:a}=new MessageChannel;o.onmessage=({data:l})=>{o.close(),a.close(),i(l)},o.onmessageerror=({data:l})=>{o.close(),a.close(),r(l)},a.postMessage(n)}))(t);return new s(e)},cg=(s,t)=>{const e=s.createBiquadFilter();return ke(e,t),ye(e,t,"Q"),ye(e,t,"detune"),ye(e,t,"frequency"),ye(e,t,"gain"),de(e,t,"type"),e},Ua=(s,t)=>{const e=s.createChannelSplitter(t.numberOfOutputs);return ke(e,t),(n=>{const i=n.numberOfOutputs;Object.defineProperty(n,"channelCount",{get:()=>i,set:r=>{if(r!==i)throw je()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:r=>{if(r!=="explicit")throw je()}}),Object.defineProperty(n,"channelInterpretation",{get:()=>"discrete",set:r=>{if(r!=="discrete")throw je()}})})(e),e},zo=(s,t)=>(s.connect=t.connect.bind(t),s.disconnect=t.disconnect.bind(t),s),hg=(s,t)=>{const e=s.createDelay(t.maxDelayTime);return ke(e,t),ye(e,t,"delayTime"),e},wn=(s,t)=>{const e=s.createGain();return ke(e,t),ye(e,t,"gain"),e};function e1(s,t){const e=t[0]*t[0]+t[1]*t[1];return[(s[0]*t[0]+s[1]*t[1])/e,(s[1]*t[0]-s[0]*t[1])/e]}function n1(s,t){return[s[0]*t[0]-s[1]*t[1],s[0]*t[1]+s[1]*t[0]]}function Lm(s,t){let e=[0,0];for(let n=s.length-1;n>=0;n-=1)e=n1(e,t),e[0]+=s[n];return e}const za=(s,t,e,n)=>s.createScriptProcessor(t,e,n),pn=()=>new DOMException("","NotSupportedError"),i1={numberOfChannels:1},s1={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},r1={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},o1={disableNormalization:!1},a1={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},l1={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},ug=(s,t,e)=>s.copyFromChannel===void 0?s.getChannelData(e)[0]:(s.copyFromChannel(t,e),t[0]),dg=s=>{if(s===null)return!1;const t=s.length;return t%2!=0?s[Math.floor(t/2)]!==0:s[t/2-1]+s[t/2]!==0},Ba=(s,t,e,n)=>{let i=s;for(;!i.hasOwnProperty(t);)i=Object.getPrototypeOf(i);const{get:r,set:o}=Object.getOwnPropertyDescriptor(i,t);Object.defineProperty(s,t,{get:e(r),set:n(o)})},pg=(s,t,e)=>{try{s.setValueAtTime(t,e)}catch(n){if(n.code!==9)throw n;pg(s,t,e+1e-7)}},ld=s=>{const t=s.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},mg=s=>{const t=s.createBuffer(1,1,44100),e=s.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},cd=s=>{const t=s.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},c1=()=>{try{new DOMException}catch{return!1}return!0},h1=()=>new Promise(s=>{const t=new ArrayBuffer(0),{port1:e,port2:n}=new MessageChannel;e.onmessage=({data:i})=>s(i!==null),n.postMessage(t,[t])}),fg=(s,t)=>{const e=t.createGain();s.connect(e);const n=(i=>()=>{i.call(s,e),s.removeEventListener("ended",n)})(s.disconnect);s.addEventListener("ended",n),zo(s,e),s.stop=(i=>{let r=!1;return(o=0)=>{if(r)try{i.call(s,o)}catch{e.gain.setValueAtTime(0,o)}else i.call(s,o),r=!0}})(s.stop)},Bo=(s,t)=>e=>{const n={value:s};return Object.defineProperties(e,{currentTarget:n,target:n}),typeof t=="function"?t.call(s,e):t.handleEvent.call(s,e)},u1=(s=>(t,e,[n,i,r],o)=>{s(t[i],[e,n,r],a=>a[0]===e&&a[1]===n,o)})(fr),d1=(s=>(t,e,[n,i,r],o)=>{const a=t.get(n);a===void 0?t.set(n,new Set([[i,e,r]])):s(a,[i,e,r],l=>l[0]===i&&l[1]===e,o)})(fr),p1=(s=>(t,e,n,i)=>s(t[i],r=>r[0]===e&&r[1]===n))(dh),gg=new WeakMap,m1=(s=>t=>{var e;return(e=s.get(t))!==null&&e!==void 0?e:0})(gg),Hn=(Rl=new Map,ha=new WeakMap,(s,t)=>{const e=ha.get(s);if(e!==void 0)return e;const n=Rl.get(s);if(n!==void 0)return n;try{const i=t();return i instanceof Promise?(Rl.set(s,i),i.catch(()=>!1).then(r=>(Rl.delete(s),ha.set(s,r),r))):(ha.set(s,i),i)}catch{return ha.set(s,!1),!1}});var Rl,ha;const hi=typeof window>"u"?null:window,_g=((s,t)=>(e,n)=>{const i=e.createAnalyser();if(ke(i,n),!(n.maxDecibels>n.minDecibels))throw t();return de(i,n,"fftSize"),de(i,n,"maxDecibels"),de(i,n,"minDecibels"),de(i,n,"smoothingTimeConstant"),s(Im,()=>Im(i))||(r=>{r.getFloatTimeDomainData=o=>{const a=new Uint8Array(o.length);r.getByteTimeDomainData(a);const l=Math.max(a.length,r.fftSize);for(let c=0;c<l;c+=1)o[c]=.0078125*(a[c]-128);return o}})(i),i})(Hn,Pi),hd=(s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer})(on),Ke=((s,t,e)=>async(n,i,r)=>{const o=s(n);await Promise.all(o.activeInputs.map((a,l)=>Array.from(a).map(async([c,h])=>{const u=t(c),d=await u.render(c,i),p=n.context.destination;e(c)||n===p&&e(n)||d.connect(r,h,l)})).reduce((a,l)=>[...a,...l],[]))})(on,hd,or),f1=((s,t,e)=>()=>{const n=new WeakMap;return{render(i,r){const o=n.get(r);return o!==void 0?Promise.resolve(o):(async(a,l)=>{let c=t(a);if(!en(c,l)){const h={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,fftSize:c.fftSize,maxDecibels:c.maxDecibels,minDecibels:c.minDecibels,smoothingTimeConstant:c.smoothingTimeConstant};c=s(l,h)}return n.set(l,c),await e(a,l,c),c})(i,r)}}})(_g,ce,Ke),re=(Om=uh,s=>{const t=Om.get(s);if(t===void 0)throw je();return t});var Om;const qe=(s=>s===null?null:s.hasOwnProperty("OfflineAudioContext")?s.OfflineAudioContext:s.hasOwnProperty("webkitOfflineAudioContext")?s.webkitOfflineAudioContext:null)(hi),te=(s=>t=>s!==null&&t instanceof s)(qe),vg=new WeakMap,yg=(s=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,e,n){if(e!==null){let i=this._listeners.get(e);i===void 0&&(i=s(this,e),typeof e=="function"&&this._listeners.set(e,i)),this._nativeEventTarget.addEventListener(t,i,n)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,e,n){const i=e===null?void 0:this._listeners.get(e);this._nativeEventTarget.removeEventListener(t,i===void 0?null:i,n)}})(Bo),Ts=(s=>s===null?null:s.hasOwnProperty("AudioContext")?s.AudioContext:s.hasOwnProperty("webkitAudioContext")?s.webkitAudioContext:null)(hi),ud=(s=>t=>s!==null&&t instanceof s)(Ts),dd=(s=>t=>s!==null&&typeof s.AudioNode=="function"&&t instanceof s.AudioNode)(hi),xg=(s=>t=>s!==null&&typeof s.AudioParam=="function"&&t instanceof s.AudioParam)(hi),oo=(s=>s===null?null:s.hasOwnProperty("AudioWorkletNode")?s.AudioWorkletNode:null)(hi),Te=((s,t,e,n,i,r,o,a,l,c,h,u,d,p,f,g)=>class extends c{constructor(m,x,_,y){super(_),this._context=m,this._nativeAudioNode=_;const A=h(m);u(A)&&e(Dm,()=>Dm(A,g))!==!0&&(b=>{const v=new Map;b.connect=(w=>(M,C=0,T=0)=>{const E=ic(M)?w(M,C,T):w(M,C),D=v.get(M);return D===void 0?v.set(M,[{input:T,output:C}]):D.every(R=>R.input!==T||R.output!==C)&&D.push({input:T,output:C}),E})(b.connect.bind(b)),b.disconnect=(w=>(M,C,T)=>{if(w.apply(b),M===void 0)v.clear();else if(typeof M=="number")for(const[E,D]of v){const R=D.filter(P=>P.output!==M);R.length===0?v.delete(E):v.set(E,R)}else if(v.has(M))if(C===void 0)v.delete(M);else{const E=v.get(M);if(E!==void 0){const D=E.filter(R=>R.output!==C&&(R.input!==T||T===void 0));D.length===0?v.delete(M):v.set(M,D)}}for(const[E,D]of v)D.forEach(R=>{ic(E)?b.connect(E,R.output,R.input):b.connect(E,R.output)})})(b.disconnect)})(_),id.set(this,_),Kf.set(this,new Set),m.state!=="closed"&&x&&$r(this),s(this,y,_)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(m){this._nativeAudioNode.channelCount=m}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(m){this._nativeAudioNode.channelCountMode=m}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(m){this._nativeAudioNode.channelInterpretation=m}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(m,x=0,_=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw i();const y=h(this._context),A=f(y);if(d(m)||p(m))throw r();if(Vl(m)){const v=ce(m);try{const w=ql(this._nativeAudioNode,v,x,_),M=Al(this);(A||M)&&this._nativeAudioNode.disconnect(...w),this.context.state!=="closed"&&!M&&Al(m)&&$r(m)}catch(w){throw w.code===12?r():w}if(t(this,m,x,_,A)){const w=l([this],m);au(w,n(A))}return m}const b=va(m);if(b.name==="playbackRate"&&b.maxValue===1024)throw o();try{this._nativeAudioNode.connect(b,x),(A||Al(this))&&this._nativeAudioNode.disconnect(b,x)}catch(v){throw v.code===12?r():v}if(Vb(this,m,x,A)){const v=l([this],m);au(v,n(A))}}disconnect(m,x,_){let y;const A=h(this._context),b=f(A);if(m===void 0)y=((v,w)=>{const M=on(v),C=[];for(const T of M.outputs)ca(T)?lu(v,w,...T):cu(v,w,...T),C.push(T[0]);return M.outputs.clear(),C})(this,b);else if(typeof m=="number"){if(m<0||m>=this.numberOfOutputs)throw i();y=((v,w,M)=>{const C=on(v),T=[];for(const E of C.outputs)E[1]===M&&(ca(E)?lu(v,w,...E):cu(v,w,...E),T.push(E[0]),C.outputs.delete(E));return T})(this,b,m)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||Vl(m)&&_!==void 0&&(_<0||_>=m.numberOfInputs))throw i();if(y=((v,w,M,C,T)=>{const E=on(v);return Array.from(E.outputs).filter(D=>!(D[0]!==M||C!==void 0&&D[1]!==C||T!==void 0&&D[2]!==T)).map(D=>(ca(D)?lu(v,w,...D):cu(v,w,...D),E.outputs.delete(D),D[0]))})(this,b,m,x,_),y.length===0)throw r()}for(const v of y){const w=l([this],v);au(w,a)}}})((Fm=$f,(s,t,e)=>{const n=[];for(let i=0;i<e.numberOfInputs;i+=1)n.push(new Set);Fm.set(s,{activeInputs:n,outputs:new Set,passiveInputs:new WeakMap,renderer:t})}),((s,t,e,n,i,r,o,a,l,c,h,u,d)=>{const p=new WeakMap;return(f,g,m,x,_)=>{const{activeInputs:y,passiveInputs:A}=r(g),{outputs:b}=r(f),v=a(f),w=M=>{const C=l(g),T=l(f);if(M){const E=Jf(A,f,m,x);s(y,f,E,!1),_||u(f)||e(T,C,m,x),d(g)&&$r(g)}else{const E=n(y,f,m,x);t(A,x,E,!1),_||u(f)||i(T,C,m,x);const D=o(g);if(D===0)h(g)&&Cu(g,y);else{const R=p.get(g);R!==void 0&&clearTimeout(R),p.set(g,setTimeout(()=>{h(g)&&Cu(g,y)},1e3*D))}}};return!!c(b,[g,m,x],M=>M[0]===g&&M[1]===m&&M[2]===x,!0)&&(v.add(w),h(f)?s(y,f,[m,x,w],!0):t(A,x,[f,m,w],!0),!0)}})(u1,d1,ql,p1,nc,on,m1,Fa,ce,fr,Qi,or,Al),Hn,((s,t,e,n,i,r)=>o=>(a,l)=>{const c=s.get(a);if(c===void 0){if(!o&&r(a)){const h=n(a),{outputs:u}=e(a);for(const d of u)if(ca(d)){const p=n(d[0]);t(h,p,d[1],d[2])}else{const p=i(d[0]);h.disconnect(p,d[1])}}s.set(a,l)}else s.set(a,c+l)})(Tu,nc,on,ce,va,Qi),Pi,ph,pn,((s,t,e,n,i,r,o,a)=>(l,c)=>{const h=t.get(l);if(h===void 0)throw new Error("Missing the expected cycle count.");const u=r(l.context),d=a(u);if(h===c){if(t.delete(l),!d&&o(l)){const p=n(l),{outputs:f}=e(l);for(const g of f)if(ca(g)){const m=n(g[0]);s(p,m,g[1],g[2])}else{const m=i(g[0]);p.connect(m,g[1])}}}else t.set(l,h-c)})(ql,Tu,on,ce,va,re,Qi,te),((s,t,e)=>function n(i,r){const o=Vl(r)?r:e(s,r);if((l=>"delayTime"in l)(o))return[];if(i[0]===o)return[i];if(i.includes(o))return[];const{outputs:a}=t(o);return Array.from(a).map(l=>n([...i,o],l[0])).reduce((l,c)=>l.concat(c),[])})(vg,on,ci),yg,re,ud,dd,xg,te,oo);var Fm;const g1=((s,t,e,n,i,r)=>class extends s{constructor(o,a){const l=i(o),c={...Ub,...a},h=n(l,c);super(o,!1,h,r(l)?t():null),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(o){this._nativeAnalyserNode.fftSize=o}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(o){const a=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=o,!(o>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=a,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(o){const a=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=o,!(this._nativeAnalyserNode.maxDecibels>o))throw this._nativeAnalyserNode.minDecibels=a,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(o){this._nativeAnalyserNode.smoothingTimeConstant=o}getByteFrequencyData(o){this._nativeAnalyserNode.getByteFrequencyData(o)}getByteTimeDomainData(o){this._nativeAnalyserNode.getByteTimeDomainData(o)}getFloatFrequencyData(o){this._nativeAnalyserNode.getFloatFrequencyData(o)}getFloatTimeDomainData(o){this._nativeAnalyserNode.getFloatTimeDomainData(o)}})(Te,f1,Pi,_g,re,te),pd=new WeakSet,Nm=(s=>s===null?null:s.hasOwnProperty("AudioBuffer")?s.AudioBuffer:null)(hi),wg=(hu=new Uint32Array(1),s=>(hu[0]=s,hu[0]));var hu;const md=((s,t)=>e=>{e.copyFromChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=e.numberOfChannels)throw t();const l=e.length,c=e.getChannelData(a),h=n.length;for(let u=o<0?-o:0;u+o<l&&u<h;u+=1)n[u]=c[u+o]},e.copyToChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=e.numberOfChannels)throw t();const l=e.length,c=e.getChannelData(a),h=n.length;for(let u=o<0?-o:0;u+o<l&&u<h;u+=1)c[u+o]=n[u]}})(wg,Pi),fd=(s=>t=>{t.copyFromChannel=(e=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<t.length)return e.call(t,n,a,o)})(t.copyFromChannel),t.copyToChannel=(e=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<t.length)return e.call(t,n,a,o)})(t.copyToChannel)})(wg),bg=((s,t,e,n,i,r,o,a)=>{let l=null;return class Sg{constructor(h){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:u,numberOfChannels:d,sampleRate:p}={...zb,...h};l===null&&(l=new i(1,1,44100));const f=n!==null&&t(r,r)?new n({length:u,numberOfChannels:d,sampleRate:p}):l.createBuffer(d,u,p);if(f.numberOfChannels===0)throw e();return typeof f.copyFromChannel!="function"?(o(f),rd(f)):t(ec,()=>ec(f))||a(f),s.add(f),f}static[Symbol.hasInstance](h){return h!==null&&typeof h=="object"&&Object.getPrototypeOf(h)===Sg.prototype||s.has(h)}}})(pd,Hn,pn,Nm,qe,(s=>()=>{if(s===null)return!1;try{new s({length:1,sampleRate:44100})}catch{return!1}return!0})(Nm),md,fd),mh=(s=>(t,e)=>{const n=s(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(n).connect(t.destination);const i=()=>{e.removeEventListener("ended",i),e.disconnect(n),n.disconnect()};e.addEventListener("ended",i)})(wn),Mg=((s,t,e)=>async(n,i,r)=>{const o=t(n);await Promise.all(Array.from(o.activeInputs).map(async([a,l])=>{const c=s(a),h=await c.render(a,i);e(a)||h.connect(r,l)}))})(hd,ka,or),Ii=(s=>(t,e,n)=>s(e,t,n))(Mg),Vo=((s,t,e,n,i,r,o,a,l,c,h)=>(u,d)=>{const p=u.createBufferSource();return ke(p,d),ye(p,d,"playbackRate"),de(p,d,"buffer"),de(p,d,"loop"),de(p,d,"loopEnd"),de(p,d,"loopStart"),t(e,()=>e(u))||(f=>{f.start=(g=>{let m=!1;return(x=0,_=0,y)=>{if(m)throw je();g.call(f,x,_,y),m=!0}})(f.start)})(p),t(n,()=>n(u))||l(p),t(i,()=>i(u))||c(p,u),t(r,()=>r(u))||od(p),t(o,()=>o(u))||h(p,u),t(a,()=>a(u))||ad(p),s(u,p),p})(mh,Hn,s=>{const t=s.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},s=>{const t=s.createBufferSource(),e=s.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},s=>{const t=s.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},ld,mg,cd,s=>{s.start=(t=>(e=0,n=0,i)=>{const r=s.buffer,o=r===null?n:Math.min(r.duration,n);r!==null&&o>r.duration-.5/s.context.sampleRate?t.call(s,e,0,0):t.call(s,e,o,i)})(s.start)},(s=>(t,e)=>{const n=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=n),s(t,"buffer",i=>()=>{const r=i.call(t);return r===n?null:r},i=>r=>i.call(t,r===null?n:r))})(Ba),fg),Li=((s,t)=>(e,n,i)=>(s(n).replay(i),t(n,e,i)))((s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer})(ka),Mg),_1=((s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;return{set start(l){o=l},set stop(l){a=l},render(l,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):(async(u,d)=>{let p=e(u);const f=en(p,d);if(!f){const g={buffer:p.buffer,channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,loop:p.loop,loopEnd:p.loopEnd,loopStart:p.loopStart,playbackRate:p.playbackRate.value};p=t(d,g),o!==null&&p.start(...o),a!==null&&p.stop(a)}return r.set(d,p),f?await s(d,u.playbackRate,p.playbackRate):await n(d,u.playbackRate,p.playbackRate),await i(u,d,p),p})(l,c)}}})(Ii,Vo,ce,Li,Ke),mi=((s,t,e,n,i,r,o,a,l,c,h,u,d)=>(p,f,g,m=null,x=null)=>{const _=g.value,y=new kb(_),A=f?n(y):null,b={get defaultValue(){return _},get maxValue(){return m===null?g.maxValue:m},get minValue(){return x===null?g.minValue:x},get value(){return g.value},set value(v){g.value=v,b.setValueAtTime(v,p.context.currentTime)},cancelAndHoldAtTime(v){if(typeof g.cancelAndHoldAtTime=="function")A===null&&y.flush(p.context.currentTime),y.add(i(v)),g.cancelAndHoldAtTime(v);else{const w=Array.from(y).pop();A===null&&y.flush(p.context.currentTime),y.add(i(v));const M=Array.from(y).pop();g.cancelScheduledValues(v),w!==M&&M!==void 0&&(M.type==="exponentialRampToValue"?g.exponentialRampToValueAtTime(M.value,M.endTime):M.type==="linearRampToValue"?g.linearRampToValueAtTime(M.value,M.endTime):M.type==="setValue"?g.setValueAtTime(M.value,M.startTime):M.type==="setValueCurve"&&g.setValueCurveAtTime(M.values,M.startTime,M.duration))}return b},cancelScheduledValues:v=>(A===null&&y.flush(p.context.currentTime),y.add(r(v)),g.cancelScheduledValues(v),b),exponentialRampToValueAtTime(v,w){if(v===0)throw new RangeError;if(!Number.isFinite(w)||w<0)throw new RangeError;const M=p.context.currentTime;return A===null&&y.flush(M),Array.from(y).length===0&&(y.add(c(_,M)),g.setValueAtTime(_,M)),y.add(o(v,w)),g.exponentialRampToValueAtTime(v,w),b},linearRampToValueAtTime(v,w){const M=p.context.currentTime;return A===null&&y.flush(M),Array.from(y).length===0&&(y.add(c(_,M)),g.setValueAtTime(_,M)),y.add(a(v,w)),g.linearRampToValueAtTime(v,w),b},setTargetAtTime:(v,w,M)=>(A===null&&y.flush(p.context.currentTime),y.add(l(v,w,M)),g.setTargetAtTime(v,w,M),b),setValueAtTime:(v,w)=>(A===null&&y.flush(p.context.currentTime),y.add(c(v,w)),g.setValueAtTime(v,w),b),setValueCurveAtTime(v,w,M){const C=v instanceof Float32Array?v:new Float32Array(v);if(u!==null&&u.name==="webkitAudioContext"){const T=w+M,E=p.context.sampleRate,D=Math.ceil(w*E),R=Math.floor(T*E),P=R-D,k=new Float32Array(P);for(let z=0;z<P;z+=1){const q=(C.length-1)/M*((D+z)/E-w),B=Math.floor(q),W=Math.ceil(q);k[z]=B===W?C[B]:(1-(q-B))*C[B]+(1-(W-q))*C[W]}A===null&&y.flush(p.context.currentTime),y.add(h(k,w,M)),g.setValueCurveAtTime(k,w,M);const F=R/E;F<T&&d(b,k[k.length-1],F),d(b,C[C.length-1],T)}else A===null&&y.flush(p.context.currentTime),y.add(h(C,w,M)),g.setValueCurveAtTime(C,w,M);return b}};return e.set(b,g),t.set(b,p),s(b,A),b})((km=Zf,(s,t)=>{km.set(s,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})}),vg,sd,s=>({replay(t){for(const e of s)if(e.type==="exponentialRampToValue"){const{endTime:n,value:i}=e;t.exponentialRampToValueAtTime(i,n)}else if(e.type==="linearRampToValue"){const{endTime:n,value:i}=e;t.linearRampToValueAtTime(i,n)}else if(e.type==="setTarget"){const{startTime:n,target:i,timeConstant:r}=e;t.setTargetAtTime(i,n,r)}else if(e.type==="setValue"){const{startTime:n,value:i}=e;t.setValueAtTime(i,n)}else{if(e.type!=="setValueCurve")throw new Error("Can't apply an unknown automation.");{const{duration:n,startTime:i,values:r}=e;t.setValueCurveAtTime(r,i,n)}}}}),s=>({cancelTime:s,type:"cancelAndHold"}),s=>({cancelTime:s,type:"cancelScheduledValues"}),(s,t)=>({endTime:t,type:"exponentialRampToValue",value:s}),(s,t)=>({endTime:t,type:"linearRampToValue",value:s}),(s,t,e)=>({startTime:t,target:s,timeConstant:e,type:"setTarget"}),bu,Xf,Ts,pg);var km;const v1=((s,t,e,n,i,r,o,a)=>class extends s{constructor(l,c){const h=r(l),u={...Bb,...c},d=i(h,u),p=o(h),f=p?t():null;super(l,!1,d,f),this._audioBufferSourceNodeRenderer=f,this._isBufferNullified=!1,this._isBufferSet=u.buffer!==null,this._nativeAudioBufferSourceNode=d,this._onended=null,this._playbackRate=e(this,p,d.playbackRate,ln,_n)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const c=typeof l=="function"?a(this,l):null;this._nativeAudioBufferSourceNode.onended=c;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===c?l:h}get playbackRate(){return this._playbackRate}start(l=0,c=0,h){if(this._nativeAudioBufferSourceNode.start(l,c,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[l,c]:[l,c,h]),this.context.state!=="closed"){$r(this);const u=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",u),Qi(this)&&Na(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",u)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}})(Te,_1,mi,je,Vo,re,te,Bo),y1=((s,t,e,n,i,r,o,a)=>class extends s{constructor(l,c){const h=r(l),u=o(h),d=i(h,c,u);super(l,!1,d,u?t(a):null),this._isNodeOfNativeOfflineAudioContext=u,this._nativeAudioDestinationNode=d}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}})(Te,s=>{const t=new WeakMap;return{render(e,n){const i=t.get(n);return i!==void 0?Promise.resolve(i):(async(r,o)=>{const a=o.destination;return t.set(o,a),await s(r,o,a),a})(e,n)}}},Pi,je,((s,t)=>(e,n,i)=>{const r=e.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const o=s(e,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(o,"channelCount",a=>()=>a.call(o),a=>l=>{a.call(o,l);try{r.channelCount=l}catch(c){if(l>r.maxChannelCount)throw c}}),t(o,"channelCountMode",a=>()=>a.call(o),a=>l=>{a.call(o,l),r.channelCountMode=l}),t(o,"channelInterpretation",a=>()=>a.call(o),a=>l=>{a.call(o,l),r.channelInterpretation=l}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o})(wn,Ba),re,te,Ke),x1=((s,t,e,n,i)=>()=>{const r=new WeakMap;return{render(o,a){const l=r.get(a);return l!==void 0?Promise.resolve(l):(async(c,h)=>{let u=e(c);const d=en(u,h);if(!d){const p={Q:u.Q.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,gain:u.gain.value,type:u.type};u=t(h,p)}return r.set(h,u),d?(await s(h,c.Q,u.Q),await s(h,c.detune,u.detune),await s(h,c.frequency,u.frequency),await s(h,c.gain,u.gain)):(await n(h,c.Q,u.Q),await n(h,c.detune,u.detune),await n(h,c.frequency,u.frequency),await n(h,c.gain,u.gain)),await i(c,h,u),u})(o,a)}}})(Ii,cg,ce,Li,Ke),gr=(s=>(t,e)=>s.set(t,e))(gg),w1=((s,t,e,n,i,r,o,a)=>class extends s{constructor(l,c){const h=r(l),u={...Gb,...c},d=i(h,u),p=o(h);super(l,!1,d,p?e():null),this._Q=t(this,p,d.Q,ln,_n),this._detune=t(this,p,d.detune,1200*Math.log2(ln),-1200*Math.log2(ln)),this._frequency=t(this,p,d.frequency,l.sampleRate/2,0),this._gain=t(this,p,d.gain,40*Math.log10(ln),_n),this._nativeBiquadFilterNode=d,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,c,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,c,h)}catch(u){throw u.code===11?n():u}if(l.length!==c.length||c.length!==h.length)throw n()}})(Te,mi,x1,ph,cg,re,te,gr),Is=((s,t)=>(e,n,i)=>{const r=new Set;return e.connect=(o=>(a,l=0,c=0)=>{const h=r.size===0;if(t(a))return o.call(e,a,l,c),s(r,[a,l,c],u=>u[0]===a&&u[1]===l&&u[2]===c,!0),h&&n(),a;o.call(e,a,l),s(r,[a,l],u=>u[0]===a&&u[1]===l,!0),h&&n()})(e.connect),e.disconnect=(o=>(a,l,c)=>{const h=r.size>0;if(a===void 0)o.apply(e),r.clear();else if(typeof a=="number"){o.call(e,a);for(const d of r)d[1]===a&&r.delete(d)}else{t(a)?o.call(e,a,l,c):o.call(e,a,l);for(const d of r)d[0]!==a||l!==void 0&&d[1]!==l||c!==void 0&&d[2]!==c||r.delete(d)}const u=r.size===0;h&&u&&i()})(e.disconnect),e})(fr,dd),b1=((s,t)=>(e,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw s()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw s()}});const i=e.createBufferSource();t(n,()=>{const r=n.numberOfInputs;for(let o=0;o<r;o+=1)i.connect(n,0,o)},()=>i.disconnect(n))})(je,Is),Ls=((s,t)=>(e,n)=>{const i=e.createChannelMerger(n.numberOfInputs);return s!==null&&s.name==="webkitAudioContext"&&t(e,i),ke(i,n),i})(Ts,b1),S1=((s,t,e)=>()=>{const n=new WeakMap;return{render(i,r){const o=n.get(r);return o!==void 0?Promise.resolve(o):(async(a,l)=>{let c=t(a);if(!en(c,l)){const h={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,numberOfInputs:c.numberOfInputs};c=s(l,h)}return n.set(l,c),await e(a,l,c),c})(i,r)}}})(Ls,ce,Ke),M1=((s,t,e,n,i)=>class extends s{constructor(r,o){const a=n(r),l={...Hb,...o};super(r,!1,e(a,l),i(a)?t():null)}})(Te,S1,Ls,re,te),T1=((s,t,e)=>()=>{const n=new WeakMap;return{render(i,r){const o=n.get(r);return o!==void 0?Promise.resolve(o):(async(a,l)=>{let c=t(a);if(!en(c,l)){const h={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,numberOfOutputs:c.numberOfOutputs};c=s(l,h)}return n.set(l,c),await e(a,l,c),c})(i,r)}}})(Ua,ce,Ke),E1=((s,t,e,n,i,r)=>class extends s{constructor(o,a){const l=n(o),c=r({...jb,...a});super(o,!1,e(l,c),i(l)?t():null)}})(Te,T1,Ua,re,te,s=>({...s,channelCount:s.numberOfOutputs})),A1=((s,t,e,n)=>(i,{offset:r,...o})=>{const a=i.createBuffer(1,2,44100),l=t(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),c=e(i,{...o,gain:r}),h=a.getChannelData(0);h[0]=1,h[1]=1,l.buffer=a,l.loop=!0;const u={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(d){c.channelCount=d},get channelCountMode(){return c.channelCountMode},set channelCountMode(d){c.channelCountMode=d},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(d){c.channelInterpretation=d},get context(){return c.context},get inputs(){return[]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get offset(){return c.gain},get onended(){return l.onended},set onended(d){l.onended=d},addEventListener:(...d)=>l.addEventListener(d[0],d[1],d[2]),dispatchEvent:(...d)=>l.dispatchEvent(d[0]),removeEventListener:(...d)=>l.removeEventListener(d[0],d[1],d[2]),start(d=0){l.start.call(l,d)},stop(d=0){l.stop.call(l,d)}};return s(i,l),n(zo(u,c),()=>l.connect(c),()=>l.disconnect(c))})(mh,Vo,wn,Is),qo=((s,t,e,n,i)=>(r,o)=>{if(r.createConstantSource===void 0)return e(r,o);const a=r.createConstantSource();return ke(a,o),ye(a,o,"offset"),t(n,()=>n(r))||od(a),t(i,()=>i(r))||ad(a),s(r,a),a})(mh,Hn,A1,ld,cd),C1=((s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;return{set start(l){o=l},set stop(l){a=l},render(l,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):(async(u,d)=>{let p=e(u);const f=en(p,d);if(!f){const g={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,offset:p.offset.value};p=t(d,g),o!==null&&p.start(o),a!==null&&p.stop(a)}return r.set(d,p),f?await s(d,u.offset,p.offset):await n(d,u.offset,p.offset),await i(u,d,p),p})(l,c)}}})(Ii,qo,ce,Li,Ke),R1=((s,t,e,n,i,r,o)=>class extends s{constructor(a,l){const c=i(a),h={...Xb,...l},u=n(c,h),d=r(c),p=d?e():null;super(a,!1,u,p),this._constantSourceNodeRenderer=p,this._nativeConstantSourceNode=u,this._offset=t(this,d,u.offset,ln,_n),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(a){const l=typeof a=="function"?o(this,a):null;this._nativeConstantSourceNode.onended=l;const c=this._nativeConstantSourceNode.onended;this._onended=c!==null&&c===l?a:c}start(a=0){if(this._nativeConstantSourceNode.start(a),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=a),this.context.state!=="closed"){$r(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),Qi(this)&&Na(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(a=0){this._nativeConstantSourceNode.stop(a),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=a)}})(Te,mi,C1,qo,re,te,Bo),Tg=((s,t)=>(e,n)=>{const i=e.createConvolver();if(ke(i,n),n.disableNormalization===i.normalize&&(i.normalize=!n.disableNormalization),de(i,n,"buffer"),n.channelCount>2||(t(i,"channelCount",r=>()=>r.call(i),r=>o=>{if(o>2)throw s();return r.call(i,o)}),n.channelCountMode==="max"))throw s();return t(i,"channelCountMode",r=>()=>r.call(i),r=>o=>{if(o==="max")throw s();return r.call(i,o)}),i})(pn,Ba),D1=((s,t,e)=>()=>{const n=new WeakMap;return{render(i,r){const o=n.get(r);return o!==void 0?Promise.resolve(o):(async(a,l)=>{let c=t(a);if(!en(c,l)){const h={buffer:c.buffer,channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,disableNormalization:!c.normalize};c=s(l,h)}return n.set(l,c),Uo(c)?await e(a,l,c.inputs[0]):await e(a,l,c),c})(i,r)}}})(Tg,ce,Ke),P1=((s,t,e,n,i,r)=>class extends s{constructor(o,a){const l=n(o),c={...Yb,...a},h=e(l,c);super(o,!1,h,i(l)?t():null),this._isBufferNullified=!1,this._nativeConvolverNode=h,c.buffer!==null&&r(this,c.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(o){if(this._nativeConvolverNode.buffer=o,o===null&&this._nativeConvolverNode.buffer!==null){const a=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=a.createBuffer(1,1,a.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(o){this._nativeConvolverNode.normalize=o}})(Te,D1,Tg,re,te,gr),I1=((s,t,e,n,i)=>r=>{const o=new WeakMap;return{render(a,l){const c=o.get(l);return c!==void 0?Promise.resolve(c):(async(h,u)=>{let d=e(h);const p=en(d,u);if(!p){const f={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,delayTime:d.delayTime.value,maxDelayTime:r};d=t(u,f)}return o.set(u,d),p?await s(u,h.delayTime,d.delayTime):await n(u,h.delayTime,d.delayTime),await i(h,u,d),d})(a,l)}}})(Ii,hg,ce,Li,Ke),L1=((s,t,e,n,i,r,o)=>class extends s{constructor(a,l){const c=i(a),h={...$b,...l},u=n(c,h),d=r(c);super(a,!1,u,d?e(h.maxDelayTime):null),this._delayTime=t(this,d,u.delayTime),o(this,h.maxDelayTime)}get delayTime(){return this._delayTime}})(Te,mi,I1,hg,re,te,gr),Eg=(s=>(t,e)=>{const n=t.createDynamicsCompressor();if(ke(n,e),e.channelCount>2||e.channelCountMode==="max")throw s();return ye(n,e,"attack"),ye(n,e,"knee"),ye(n,e,"ratio"),ye(n,e,"release"),ye(n,e,"threshold"),n})(pn),O1=((s,t,e,n,i)=>()=>{const r=new WeakMap;return{render(o,a){const l=r.get(a);return l!==void 0?Promise.resolve(l):(async(c,h)=>{let u=e(c);const d=en(u,h);if(!d){const p={attack:u.attack.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,knee:u.knee.value,ratio:u.ratio.value,release:u.release.value,threshold:u.threshold.value};u=t(h,p)}return r.set(h,u),d?(await s(h,c.attack,u.attack),await s(h,c.knee,u.knee),await s(h,c.ratio,u.ratio),await s(h,c.release,u.release),await s(h,c.threshold,u.threshold)):(await n(h,c.attack,u.attack),await n(h,c.knee,u.knee),await n(h,c.ratio,u.ratio),await n(h,c.release,u.release),await n(h,c.threshold,u.threshold)),await i(c,h,u),u})(o,a)}}})(Ii,Eg,ce,Li,Ke),F1=((s,t,e,n,i,r,o,a)=>class extends s{constructor(l,c){const h=r(l),u={...Zb,...c},d=n(h,u),p=o(h);super(l,!1,d,p?e():null),this._attack=t(this,p,d.attack),this._knee=t(this,p,d.knee),this._nativeDynamicsCompressorNode=d,this._ratio=t(this,p,d.ratio),this._release=t(this,p,d.release),this._threshold=t(this,p,d.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const c=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=c,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const c=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=c,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}})(Te,mi,O1,Eg,pn,re,te,gr),N1=((s,t,e,n,i)=>()=>{const r=new WeakMap;return{render(o,a){const l=r.get(a);return l!==void 0?Promise.resolve(l):(async(c,h)=>{let u=e(c);const d=en(u,h);if(!d){const p={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,gain:u.gain.value};u=t(h,p)}return r.set(h,u),d?await s(h,c.gain,u.gain):await n(h,c.gain,u.gain),await i(c,h,u),u})(o,a)}}})(Ii,wn,ce,Li,Ke),k1=((s,t,e,n,i,r)=>class extends s{constructor(o,a){const l=i(o),c={...Kb,...a},h=n(l,c),u=r(l);super(o,!1,h,u?e():null),this._gain=t(this,u,h.gain,ln,_n)}get gain(){return this._gain}})(Te,mi,N1,wn,re,te),U1=((s,t,e,n)=>(i,r,{channelCount:o,channelCountMode:a,channelInterpretation:l,feedback:c,feedforward:h})=>{const u=lg(r,i.sampleRate),d=c instanceof Float64Array?c:new Float64Array(c),p=h instanceof Float64Array?h:new Float64Array(h),f=d.length,g=p.length,m=Math.min(f,g);if(f===0||f>20)throw n();if(d[0]===0)throw t();if(g===0||g>20)throw n();if(p[0]===0)throw t();if(d[0]!==1){for(let v=0;v<g;v+=1)p[v]/=d[0];for(let v=1;v<f;v+=1)d[v]/=d[0]}const x=e(i,u,o,o);x.channelCount=o,x.channelCountMode=a,x.channelInterpretation=l;const _=[],y=[],A=[];for(let v=0;v<o;v+=1){_.push(0);const w=new Float32Array(32),M=new Float32Array(32);w.fill(0),M.fill(0),y.push(w),A.push(M)}x.onaudioprocess=v=>{const w=v.inputBuffer,M=v.outputBuffer,C=w.numberOfChannels;for(let T=0;T<C;T+=1){const E=w.getChannelData(T),D=M.getChannelData(T);_[T]=ag(d,f,p,g,m,y[T],A[T],_[T],32,E,D)}};const b=i.sampleRate/2;return zo({get bufferSize(){return u},get channelCount(){return x.channelCount},set channelCount(v){x.channelCount=v},get channelCountMode(){return x.channelCountMode},set channelCountMode(v){x.channelCountMode=v},get channelInterpretation(){return x.channelInterpretation},set channelInterpretation(v){x.channelInterpretation=v},get context(){return x.context},get inputs(){return[x]},get numberOfInputs(){return x.numberOfInputs},get numberOfOutputs(){return x.numberOfOutputs},addEventListener:(...v)=>x.addEventListener(v[0],v[1],v[2]),dispatchEvent:(...v)=>x.dispatchEvent(v[0]),getFrequencyResponse(v,w,M){if(v.length!==w.length||w.length!==M.length)throw s();const C=v.length;for(let T=0;T<C;T+=1){const E=-Math.PI*(v[T]/b),D=[Math.cos(E),Math.sin(E)],R=e1(Lm(p,D),Lm(d,D));w[T]=Math.sqrt(R[0]*R[0]+R[1]*R[1]),M[T]=Math.atan2(R[1],R[0])}},removeEventListener:(...v)=>x.removeEventListener(v[0],v[1],v[2])},x)})(ph,je,za,pn),fh=((s,t,e,n)=>i=>s(Ta,()=>Ta(i))?Promise.resolve(s(n,n)).then(r=>{if(!r){const o=e(i,512,0,1);i.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>i.currentTime,o.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const o=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(i.destination),i.startRendering()}))(Hn,wn,za,((s,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),n=s(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{e.oncomplete=()=>{n.disconnect(),i(e.currentTime!==0)},e.startRendering()})})(wn,qe)),z1=((s,t,e,n,i)=>(r,o)=>{const a=new WeakMap;let l=null;const c=async(h,u)=>{let d=null,p=t(h);const f=en(p,u);if(u.createIIRFilter===void 0?d=s(u,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):f||(p=u.createIIRFilter(o,r)),a.set(u,d===null?p:d),d!==null){if(l===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const m=new e(h.context.destination.channelCount,h.context.length,u.sampleRate);l=(async()=>(await n(h,m,m.destination),((x,_,y,A)=>{const b=y instanceof Float64Array?y:new Float64Array(y),v=A instanceof Float64Array?A:new Float64Array(A),w=b.length,M=v.length,C=Math.min(w,M);if(b[0]!==1){for(let P=0;P<w;P+=1)v[P]/=b[0];for(let P=1;P<M;P+=1)b[P]/=b[0]}const T=new Float32Array(32),E=new Float32Array(32),D=_.createBuffer(x.numberOfChannels,x.length,x.sampleRate),R=x.numberOfChannels;for(let P=0;P<R;P+=1){const k=x.getChannelData(P),F=D.getChannelData(P);T.fill(0),E.fill(0),ag(b,w,v,M,C,T,E,0,32,k,F)}return D})(await i(m),u,r,o)))()}const g=await l;return d.buffer=g,d.start(0),d}return await n(h,u,p),p};return{render(h,u){const d=a.get(u);return d!==void 0?Promise.resolve(d):c(h,u)}}})(Vo,ce,qe,Ke,fh),B1=(s=>(t,e,n)=>{if(t.createIIRFilter===void 0)return s(t,e,n);const i=t.createIIRFilter(n.feedforward,n.feedback);return ke(i,n),i})(U1),V1=((s,t,e,n,i,r)=>class extends s{constructor(o,a){const l=n(o),c=i(l),h={...Qb,...a},u=t(l,c?null:o.baseLatency,h);super(o,!1,u,c?e(h.feedback,h.feedforward):null),(d=>{var p;d.getFrequencyResponse=(p=d.getFrequencyResponse,(f,g,m)=>{if(f.length!==g.length||g.length!==m.length)throw ph();return p.call(d,f,g,m)})})(u),this._nativeIIRFilterNode=u,r(this,1)}getFrequencyResponse(o,a,l){return this._nativeIIRFilterNode.getFrequencyResponse(o,a,l)}})(Te,B1,z1,re,te,gr),q1=((s,t,e,n,i,r,o,a)=>(l,c)=>{const h=c.listener,{forwardX:u,forwardY:d,forwardZ:p,positionX:f,positionY:g,positionZ:m,upX:x,upY:_,upZ:y}=h.forwardX===void 0?(()=>{const A=new Float32Array(1),b=t(c,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),v=o(c);let w=!1,M=[0,0,-1,0,1,0],C=[0,0,0];const T=()=>{if(w)return;w=!0;const P=n(c,256,9,0);P.onaudioprocess=({inputBuffer:k})=>{const F=[r(k,A,0),r(k,A,1),r(k,A,2),r(k,A,3),r(k,A,4),r(k,A,5)];F.some((q,B)=>q!==M[B])&&(h.setOrientation(...F),M=F);const z=[r(k,A,6),r(k,A,7),r(k,A,8)];z.some((q,B)=>q!==C[B])&&(h.setPosition(...z),C=z)},b.connect(P)},E=P=>k=>{k!==M[P]&&(M[P]=k,h.setOrientation(...M))},D=P=>k=>{k!==C[P]&&(C[P]=k,h.setPosition(...C))},R=(P,k,F)=>{const z=e(c,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:k});z.connect(b,0,P),z.start(),Object.defineProperty(z.offset,"defaultValue",{get:()=>k});const q=s({context:l},v,z.offset,ln,_n);var B,W,Q,j,dt,ct,rt;return a(q,"value",$=>()=>$.call(q),$=>O=>{try{$.call(q,O)}catch(I){if(I.code!==9)throw I}T(),v&&F(O)}),q.cancelAndHoldAtTime=(B=q.cancelAndHoldAtTime,v?()=>{throw i()}:(...$)=>{const O=B.apply(q,$);return T(),O}),q.cancelScheduledValues=(W=q.cancelScheduledValues,v?()=>{throw i()}:(...$)=>{const O=W.apply(q,$);return T(),O}),q.exponentialRampToValueAtTime=(Q=q.exponentialRampToValueAtTime,v?()=>{throw i()}:(...$)=>{const O=Q.apply(q,$);return T(),O}),q.linearRampToValueAtTime=(j=q.linearRampToValueAtTime,v?()=>{throw i()}:(...$)=>{const O=j.apply(q,$);return T(),O}),q.setTargetAtTime=(dt=q.setTargetAtTime,v?()=>{throw i()}:(...$)=>{const O=dt.apply(q,$);return T(),O}),q.setValueAtTime=(ct=q.setValueAtTime,v?()=>{throw i()}:(...$)=>{const O=ct.apply(q,$);return T(),O}),q.setValueCurveAtTime=(rt=q.setValueCurveAtTime,v?()=>{throw i()}:(...$)=>{const O=rt.apply(q,$);return T(),O}),q};return{forwardX:R(0,0,E(0)),forwardY:R(1,0,E(1)),forwardZ:R(2,-1,E(2)),positionX:R(6,0,D(0)),positionY:R(7,0,D(1)),positionZ:R(8,0,D(2)),upX:R(3,0,E(3)),upY:R(4,1,E(4)),upZ:R(5,0,E(5))}})():h;return{get forwardX(){return u},get forwardY(){return d},get forwardZ(){return p},get positionX(){return f},get positionY(){return g},get positionZ(){return m},get upX(){return x},get upY(){return _},get upZ(){return y}}})(mi,Ls,qo,za,pn,ug,te,Ba),Ag=new WeakMap,W1=((s,t,e,n,i,r)=>class extends e{constructor(o,a){super(o),this._nativeContext=o,uh.set(this,o),n(o)&&i.set(o,new Set),this._destination=new s(this,a),this._listener=t(this,o),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(o){const a=typeof o=="function"?r(this,o):null;this._nativeContext.onstatechange=a;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===a?o:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}})(y1,q1,yg,te,Ag,Bo),Cg=((s,t,e,n,i,r)=>(o,a)=>{const l=o.createOscillator();return ke(l,a),ye(l,a,"detune"),ye(l,a,"frequency"),a.periodicWave!==void 0?l.setPeriodicWave(a.periodicWave):de(l,a,"type"),t(e,()=>e(o))||od(l),t(n,()=>n(o))||r(l,o),t(i,()=>i(o))||ad(l),s(o,l),l})(mh,Hn,ld,mg,cd,fg),G1=((s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null,l=null;return{set periodicWave(c){o=c},set start(c){a=c},set stop(c){l=c},render(c,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):(async(d,p)=>{let f=e(d);const g=en(f,p);if(!g){const m={channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,detune:f.detune.value,frequency:f.frequency.value,periodicWave:o===null?void 0:o,type:f.type};f=t(p,m),a!==null&&f.start(a),l!==null&&f.stop(l)}return r.set(p,f),g?(await s(p,d.detune,f.detune),await s(p,d.frequency,f.frequency)):(await n(p,d.detune,f.detune),await n(p,d.frequency,f.frequency)),await i(d,p,f),f})(c,h)}}})(Ii,Cg,ce,Li,Ke),H1=((s,t,e,n,i,r,o)=>class extends s{constructor(a,l){const c=i(a),h={...s1,...l},u=e(c,h),d=r(c),p=d?n():null,f=a.sampleRate/2;super(a,!1,u,p),this._detune=t(this,d,u.detune,153600,-153600),this._frequency=t(this,d,u.frequency,f,-f),this._nativeOscillatorNode=u,this._onended=null,this._oscillatorNodeRenderer=p,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(a){const l=typeof a=="function"?o(this,a):null;this._nativeOscillatorNode.onended=l;const c=this._nativeOscillatorNode.onended;this._onended=c!==null&&c===l?a:c}get type(){return this._nativeOscillatorNode.type}set type(a){this._nativeOscillatorNode.type=a,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(a){this._nativeOscillatorNode.setPeriodicWave(a),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=a)}start(a=0){if(this._nativeOscillatorNode.start(a),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=a),this.context.state!=="closed"){$r(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),Qi(this)&&Na(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(a=0){this._nativeOscillatorNode.stop(a),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=a)}})(Te,mi,Cg,G1,re,te,Bo),Rg=(s=>(t,e)=>{const n=s(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=t.createBuffer(1,2,44100);return n.buffer=i,n.loop=!0,n.connect(e),n.start(),()=>{n.stop(),n.disconnect(e)}})(Vo),j1=((s,t,e,n,i)=>(r,{curve:o,oversample:a,...l})=>{const c=r.createWaveShaper(),h=r.createWaveShaper();ke(c,l),ke(h,l);const u=e(r,{...l,gain:1}),d=e(r,{...l,gain:-1}),p=e(r,{...l,gain:1}),f=e(r,{...l,gain:-1});let g=null,m=!1,x=null;const _={get bufferSize(){},get channelCount(){return c.channelCount},set channelCount(y){u.channelCount=y,d.channelCount=y,c.channelCount=y,p.channelCount=y,h.channelCount=y,f.channelCount=y},get channelCountMode(){return c.channelCountMode},set channelCountMode(y){u.channelCountMode=y,d.channelCountMode=y,c.channelCountMode=y,p.channelCountMode=y,h.channelCountMode=y,f.channelCountMode=y},get channelInterpretation(){return c.channelInterpretation},set channelInterpretation(y){u.channelInterpretation=y,d.channelInterpretation=y,c.channelInterpretation=y,p.channelInterpretation=y,h.channelInterpretation=y,f.channelInterpretation=y},get context(){return c.context},get curve(){return x},set curve(y){if(y!==null&&y.length<2)throw t();if(y===null)c.curve=y,h.curve=y;else{const A=y.length,b=new Float32Array(A+2-A%2),v=new Float32Array(A+2-A%2);b[0]=y[0],v[0]=-y[A-1];const w=Math.ceil((A+1)/2),M=(A+1)/2-1;for(let C=1;C<w;C+=1){const T=C/w*M,E=Math.floor(T),D=Math.ceil(T);b[C]=E===D?y[E]:(1-(T-E))*y[E]+(1-(D-T))*y[D],v[C]=E===D?-y[A-1-E]:-(1-(T-E))*y[A-1-E]-(1-(D-T))*y[A-1-D]}b[w]=A%2==1?y[w-1]:(y[w-2]+y[w-1])/2,c.curve=b,h.curve=v}x=y,m&&(n(x)&&g===null?g=s(r,u):g!==null&&(g(),g=null))},get inputs(){return[u]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return c.numberOfOutputs},get oversample(){return c.oversample},set oversample(y){c.oversample=y,h.oversample=y},addEventListener:(...y)=>u.addEventListener(y[0],y[1],y[2]),dispatchEvent:(...y)=>u.dispatchEvent(y[0]),removeEventListener:(...y)=>u.removeEventListener(y[0],y[1],y[2])};return o!==null&&(_.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==_.oversample&&(_.oversample=a),i(zo(_,p),()=>{u.connect(c).connect(p),u.connect(d).connect(h).connect(f).connect(p),m=!0,n(x)&&(g=s(r,u))},()=>{u.disconnect(c),c.disconnect(p),u.disconnect(d),d.disconnect(h),h.disconnect(f),f.disconnect(p),m=!1,g!==null&&(g(),g=null)})})(Rg,je,wn,dg,Is),gh=((s,t,e,n,i,r,o)=>(a,l)=>{const c=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return e(a,l);ke(c,l);const h=l.curve===null||l.curve instanceof Float32Array?l.curve:new Float32Array(l.curve);if(h!==null&&h.length<2)throw t();de(c,{curve:h},"curve"),de(c,l,"oversample");let u=null,d=!1;return o(c,"curve",p=>()=>p.call(c),p=>f=>(p.call(c,f),d&&(n(f)&&u===null?u=s(a,c):n(f)||u===null||(u(),u=null)),f)),i(c,()=>{d=!0,n(c.curve)&&(u=s(a,c))},()=>{d=!1,u!==null&&(u(),u=null)})})(Rg,je,j1,dg,Is,Ts,Ba),X1=((s,t,e,n,i,r,o,a,l,c)=>(h,{coneInnerAngle:u,coneOuterAngle:d,coneOuterGain:p,distanceModel:f,maxDistance:g,orientationX:m,orientationY:x,orientationZ:_,panningModel:y,positionX:A,positionY:b,positionZ:v,refDistance:w,rolloffFactor:M,...C})=>{const T=h.createPanner();if(C.channelCount>2||C.channelCountMode==="max")throw o();ke(T,C);const E={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},D=e(h,{...E,channelInterpretation:"speakers",numberOfInputs:6}),R=n(h,{...C,gain:1}),P=n(h,{...E,gain:1}),k=n(h,{...E,gain:0}),F=n(h,{...E,gain:0}),z=n(h,{...E,gain:0}),q=n(h,{...E,gain:0}),B=n(h,{...E,gain:0}),W=i(h,256,6,1),Q=r(h,{...E,curve:new Float32Array([1,1]),oversample:"none"});let j=[m,x,_],dt=[A,b,v];const ct=new Float32Array(1);W.onaudioprocess=({inputBuffer:$})=>{const O=[l($,ct,0),l($,ct,1),l($,ct,2)];O.some((K,at)=>K!==j[at])&&(T.setOrientation(...O),j=O);const I=[l($,ct,3),l($,ct,4),l($,ct,5)];I.some((K,at)=>K!==dt[at])&&(T.setPosition(...I),dt=I)},Object.defineProperty(k.gain,"defaultValue",{get:()=>0}),Object.defineProperty(F.gain,"defaultValue",{get:()=>0}),Object.defineProperty(z.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0}),Object.defineProperty(B.gain,"defaultValue",{get:()=>0});const rt={get bufferSize(){},get channelCount(){return T.channelCount},set channelCount($){if($>2)throw o();R.channelCount=$,T.channelCount=$},get channelCountMode(){return T.channelCountMode},set channelCountMode($){if($==="max")throw o();R.channelCountMode=$,T.channelCountMode=$},get channelInterpretation(){return T.channelInterpretation},set channelInterpretation($){R.channelInterpretation=$,T.channelInterpretation=$},get coneInnerAngle(){return T.coneInnerAngle},set coneInnerAngle($){T.coneInnerAngle=$},get coneOuterAngle(){return T.coneOuterAngle},set coneOuterAngle($){T.coneOuterAngle=$},get coneOuterGain(){return T.coneOuterGain},set coneOuterGain($){if($<0||$>1)throw t();T.coneOuterGain=$},get context(){return T.context},get distanceModel(){return T.distanceModel},set distanceModel($){T.distanceModel=$},get inputs(){return[R]},get maxDistance(){return T.maxDistance},set maxDistance($){if($<0)throw new RangeError;T.maxDistance=$},get numberOfInputs(){return T.numberOfInputs},get numberOfOutputs(){return T.numberOfOutputs},get orientationX(){return P.gain},get orientationY(){return k.gain},get orientationZ(){return F.gain},get panningModel(){return T.panningModel},set panningModel($){T.panningModel=$},get positionX(){return z.gain},get positionY(){return q.gain},get positionZ(){return B.gain},get refDistance(){return T.refDistance},set refDistance($){if($<0)throw new RangeError;T.refDistance=$},get rolloffFactor(){return T.rolloffFactor},set rolloffFactor($){if($<0)throw new RangeError;T.rolloffFactor=$},addEventListener:(...$)=>R.addEventListener($[0],$[1],$[2]),dispatchEvent:(...$)=>R.dispatchEvent($[0]),removeEventListener:(...$)=>R.removeEventListener($[0],$[1],$[2])};return u!==rt.coneInnerAngle&&(rt.coneInnerAngle=u),d!==rt.coneOuterAngle&&(rt.coneOuterAngle=d),p!==rt.coneOuterGain&&(rt.coneOuterGain=p),f!==rt.distanceModel&&(rt.distanceModel=f),g!==rt.maxDistance&&(rt.maxDistance=g),m!==rt.orientationX.value&&(rt.orientationX.value=m),x!==rt.orientationY.value&&(rt.orientationY.value=x),_!==rt.orientationZ.value&&(rt.orientationZ.value=_),y!==rt.panningModel&&(rt.panningModel=y),A!==rt.positionX.value&&(rt.positionX.value=A),b!==rt.positionY.value&&(rt.positionY.value=b),v!==rt.positionZ.value&&(rt.positionZ.value=v),w!==rt.refDistance&&(rt.refDistance=w),M!==rt.rolloffFactor&&(rt.rolloffFactor=M),j[0]===1&&j[1]===0&&j[2]===0||T.setOrientation(...j),dt[0]===0&&dt[1]===0&&dt[2]===0||T.setPosition(...dt),c(zo(rt,T),()=>{R.connect(T),s(R,Q,0,0),Q.connect(P).connect(D,0,0),Q.connect(k).connect(D,0,1),Q.connect(F).connect(D,0,2),Q.connect(z).connect(D,0,3),Q.connect(q).connect(D,0,4),Q.connect(B).connect(D,0,5),D.connect(W).connect(h.destination)},()=>{R.disconnect(T),a(R,Q,0,0),Q.disconnect(P),P.disconnect(D),Q.disconnect(k),k.disconnect(D),Q.disconnect(F),F.disconnect(D),Q.disconnect(z),z.disconnect(D),Q.disconnect(q),q.disconnect(D),Q.disconnect(B),B.disconnect(D),D.disconnect(W),W.disconnect(h.destination)})})(ql,je,Ls,wn,za,gh,pn,nc,ug,Is),Dg=(s=>(t,e)=>{const n=t.createPanner();return n.orientationX===void 0?s(t,e):(ke(n,e),ye(n,e,"orientationX"),ye(n,e,"orientationY"),ye(n,e,"orientationZ"),ye(n,e,"positionX"),ye(n,e,"positionY"),ye(n,e,"positionZ"),de(n,e,"coneInnerAngle"),de(n,e,"coneOuterAngle"),de(n,e,"coneOuterGain"),de(n,e,"distanceModel"),de(n,e,"maxDistance"),de(n,e,"panningModel"),de(n,e,"refDistance"),de(n,e,"rolloffFactor"),n)})(X1),Y1=((s,t,e,n,i,r,o,a,l,c)=>()=>{const h=new WeakMap;let u=null;return{render(d,p){const f=h.get(p);return f!==void 0?Promise.resolve(f):(async(g,m)=>{let x=null,_=r(g);const y={channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation},A={...y,coneInnerAngle:_.coneInnerAngle,coneOuterAngle:_.coneOuterAngle,coneOuterGain:_.coneOuterGain,distanceModel:_.distanceModel,maxDistance:_.maxDistance,panningModel:_.panningModel,refDistance:_.refDistance,rolloffFactor:_.rolloffFactor},b=en(_,m);if("bufferSize"in _)x=n(m,{...y,gain:1});else if(!b){const v={...A,orientationX:_.orientationX.value,orientationY:_.orientationY.value,orientationZ:_.orientationZ.value,positionX:_.positionX.value,positionY:_.positionY.value,positionZ:_.positionZ.value};_=i(m,v)}if(h.set(m,x===null?_:x),x!==null){if(u===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const R=new o(6,g.context.length,m.sampleRate),P=t(R,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});P.connect(R.destination),u=(async()=>{const k=await Promise.all([g.orientationX,g.orientationY,g.orientationZ,g.positionX,g.positionY,g.positionZ].map(async(F,z)=>{const q=e(R,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:z===0?1:0});return await a(R,F,q.offset),q}));for(let F=0;F<6;F+=1)k[F].connect(P,0,F),k[F].start(0);return c(R)})()}const v=await u,w=n(m,{...y,gain:1});await l(g,m,w);const M=[];for(let R=0;R<v.numberOfChannels;R+=1)M.push(v.getChannelData(R));let C=[M[0][0],M[1][0],M[2][0]],T=[M[3][0],M[4][0],M[5][0]],E=n(m,{...y,gain:1}),D=i(m,{...A,orientationX:C[0],orientationY:C[1],orientationZ:C[2],positionX:T[0],positionY:T[1],positionZ:T[2]});w.connect(E).connect(D.inputs[0]),D.connect(x);for(let R=128;R<v.length;R+=128){const P=[M[0][R],M[1][R],M[2][R]],k=[M[3][R],M[4][R],M[5][R]];if(P.some((F,z)=>F!==C[z])||k.some((F,z)=>F!==T[z])){C=P,T=k;const F=R/m.sampleRate;E.gain.setValueAtTime(0,F),E=n(m,{...y,gain:0}),D=i(m,{...A,orientationX:C[0],orientationY:C[1],orientationZ:C[2],positionX:T[0],positionY:T[1],positionZ:T[2]}),E.gain.setValueAtTime(1,F),w.connect(E).connect(D.inputs[0]),D.connect(x)}}return x}return b?(await s(m,g.orientationX,_.orientationX),await s(m,g.orientationY,_.orientationY),await s(m,g.orientationZ,_.orientationZ),await s(m,g.positionX,_.positionX),await s(m,g.positionY,_.positionY),await s(m,g.positionZ,_.positionZ)):(await a(m,g.orientationX,_.orientationX),await a(m,g.orientationY,_.orientationY),await a(m,g.orientationZ,_.orientationZ),await a(m,g.positionX,_.positionX),await a(m,g.positionY,_.positionY),await a(m,g.positionZ,_.positionZ)),Uo(_)?await l(g,m,_.inputs[0]):await l(g,m,_),_})(d,p)}}})(Ii,Ls,qo,wn,Dg,ce,qe,Li,Ke,fh),$1=((s,t,e,n,i,r,o)=>class extends s{constructor(a,l){const c=i(a),h={...r1,...l},u=e(c,h),d=r(c);super(a,!1,u,d?n():null),this._nativePannerNode=u,this._orientationX=t(this,d,u.orientationX,ln,_n),this._orientationY=t(this,d,u.orientationY,ln,_n),this._orientationZ=t(this,d,u.orientationZ,ln,_n),this._positionX=t(this,d,u.positionX,ln,_n),this._positionY=t(this,d,u.positionY,ln,_n),this._positionZ=t(this,d,u.positionZ,ln,_n),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(a){this._nativePannerNode.coneInnerAngle=a}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(a){this._nativePannerNode.coneOuterAngle=a}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(a){this._nativePannerNode.coneOuterGain=a}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(a){this._nativePannerNode.distanceModel=a}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(a){this._nativePannerNode.maxDistance=a}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(a){this._nativePannerNode.panningModel=a}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(a){this._nativePannerNode.refDistance=a}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(a){this._nativePannerNode.rolloffFactor=a}})(Te,mi,Dg,Y1,re,te,gr),Z1=(s=>(t,{disableNormalization:e,imag:n,real:i})=>{const r=n instanceof Float32Array?n:new Float32Array(n),o=i instanceof Float32Array?i:new Float32Array(i),a=t.createPeriodicWave(o,r,{disableNormalization:e});if(Array.from(n).length<2)throw s();return a})(Pi),K1=((s,t,e,n)=>class Pg{constructor(r,o){const a=t(r),l=n({...o1,...o}),c=s(a,l);return e.add(c),c}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===Pg.prototype||e.has(r)}})(Z1,re,new WeakSet,s=>{const{imag:t,real:e}=s;return t===void 0?e===void 0?{...s,imag:[0,0],real:[0,0]}:{...s,imag:Array.from(e,()=>0),real:e}:e===void 0?{...s,imag:t,real:Array.from(t,()=>0)}:{...s,imag:t,real:e}}),Q1=((s,t,e,n,i,r)=>{const a=new Float32Array([1,1]),l=Math.PI/2,c={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},h={...c,oversample:"none"},u=(d,p,f,g,m)=>{if(p===1)return((x,_,y,A)=>{const b=new Float32Array(16385),v=new Float32Array(16385);for(let D=0;D<16385;D+=1){const R=D/16384*l;b[D]=Math.cos(R),v[D]=Math.sin(R)}const w=e(x,{...c,gain:0}),M=n(x,{...h,curve:b}),C=n(x,{...h,curve:a}),T=e(x,{...c,gain:0}),E=n(x,{...h,curve:v});return{connectGraph(){_.connect(w),_.connect(C.inputs===void 0?C:C.inputs[0]),_.connect(T),C.connect(y),y.connect(M.inputs===void 0?M:M.inputs[0]),y.connect(E.inputs===void 0?E:E.inputs[0]),M.connect(w.gain),E.connect(T.gain),w.connect(A,0,0),T.connect(A,0,1)},disconnectGraph(){_.disconnect(w),_.disconnect(C.inputs===void 0?C:C.inputs[0]),_.disconnect(T),C.disconnect(y),y.disconnect(M.inputs===void 0?M:M.inputs[0]),y.disconnect(E.inputs===void 0?E:E.inputs[0]),M.disconnect(w.gain),E.disconnect(T.gain),w.disconnect(A,0,0),T.disconnect(A,0,1)}}})(d,f,g,m);if(p===2)return((x,_,y,A)=>{const b=new Float32Array(16385),v=new Float32Array(16385),w=new Float32Array(16385),M=new Float32Array(16385),C=Math.floor(8192.5);for(let W=0;W<16385;W+=1)if(W>C){const Q=(W-C)/(16384-C)*l;b[W]=Math.cos(Q),v[W]=Math.sin(Q),w[W]=0,M[W]=1}else{const Q=W/(16384-C)*l;b[W]=1,v[W]=0,w[W]=Math.cos(Q),M[W]=Math.sin(Q)}const T=t(x,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),E=e(x,{...c,gain:0}),D=n(x,{...h,curve:b}),R=e(x,{...c,gain:0}),P=n(x,{...h,curve:v}),k=n(x,{...h,curve:a}),F=e(x,{...c,gain:0}),z=n(x,{...h,curve:w}),q=e(x,{...c,gain:0}),B=n(x,{...h,curve:M});return{connectGraph(){_.connect(T),_.connect(k.inputs===void 0?k:k.inputs[0]),T.connect(E,0),T.connect(R,0),T.connect(F,1),T.connect(q,1),k.connect(y),y.connect(D.inputs===void 0?D:D.inputs[0]),y.connect(P.inputs===void 0?P:P.inputs[0]),y.connect(z.inputs===void 0?z:z.inputs[0]),y.connect(B.inputs===void 0?B:B.inputs[0]),D.connect(E.gain),P.connect(R.gain),z.connect(F.gain),B.connect(q.gain),E.connect(A,0,0),F.connect(A,0,0),R.connect(A,0,1),q.connect(A,0,1)},disconnectGraph(){_.disconnect(T),_.disconnect(k.inputs===void 0?k:k.inputs[0]),T.disconnect(E,0),T.disconnect(R,0),T.disconnect(F,1),T.disconnect(q,1),k.disconnect(y),y.disconnect(D.inputs===void 0?D:D.inputs[0]),y.disconnect(P.inputs===void 0?P:P.inputs[0]),y.disconnect(z.inputs===void 0?z:z.inputs[0]),y.disconnect(B.inputs===void 0?B:B.inputs[0]),D.disconnect(E.gain),P.disconnect(R.gain),z.disconnect(F.gain),B.disconnect(q.gain),E.disconnect(A,0,0),F.disconnect(A,0,0),R.disconnect(A,0,1),q.disconnect(A,0,1)}}})(d,f,g,m);throw i()};return(d,{channelCount:p,channelCountMode:f,pan:g,...m})=>{if(f==="max")throw i();const x=s(d,{...m,channelCount:1,channelCountMode:f,numberOfInputs:2}),_=e(d,{...m,channelCount:p,channelCountMode:f,gain:1}),y=e(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:g});let{connectGraph:A,disconnectGraph:b}=u(d,p,_,y,x);Object.defineProperty(y.gain,"defaultValue",{get:()=>0}),Object.defineProperty(y.gain,"maxValue",{get:()=>1}),Object.defineProperty(y.gain,"minValue",{get:()=>-1});const v={get bufferSize(){},get channelCount(){return _.channelCount},set channelCount(M){_.channelCount!==M&&(w&&b(),{connectGraph:A,disconnectGraph:b}=u(d,M,_,y,x),w&&A()),_.channelCount=M},get channelCountMode(){return _.channelCountMode},set channelCountMode(M){if(M==="clamped-max"||M==="max")throw i();_.channelCountMode=M},get channelInterpretation(){return _.channelInterpretation},set channelInterpretation(M){_.channelInterpretation=M},get context(){return _.context},get inputs(){return[_]},get numberOfInputs(){return _.numberOfInputs},get numberOfOutputs(){return _.numberOfOutputs},get pan(){return y.gain},addEventListener:(...M)=>_.addEventListener(M[0],M[1],M[2]),dispatchEvent:(...M)=>_.dispatchEvent(M[0]),removeEventListener:(...M)=>_.removeEventListener(M[0],M[1],M[2])};let w=!1;return r(zo(v,x),()=>{A(),w=!0},()=>{b(),w=!1})}})(Ls,Ua,wn,gh,pn,Is),Ig=((s,t)=>(e,n)=>{const i=n.channelCountMode;if(i==="clamped-max")throw t();if(e.createStereoPanner===void 0)return s(e,n);const r=e.createStereoPanner();return ke(r,n),ye(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:o=>{if(o!==i)throw t()}}),r})(Q1,pn),J1=((s,t,e,n,i)=>()=>{const r=new WeakMap;return{render(o,a){const l=r.get(a);return l!==void 0?Promise.resolve(l):(async(c,h)=>{let u=e(c);const d=en(u,h);if(!d){const p={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,pan:u.pan.value};u=t(h,p)}return r.set(h,u),d?await s(h,c.pan,u.pan):await n(h,c.pan,u.pan),Uo(u)?await i(c,h,u.inputs[0]):await i(c,h,u),u})(o,a)}}})(Ii,Ig,ce,Li,Ke),tS=((s,t,e,n,i,r)=>class extends s{constructor(o,a){const l=i(o),c={...a1,...a},h=e(l,c),u=r(l);super(o,!1,h,u?n():null),this._pan=t(this,u,h.pan)}get pan(){return this._pan}})(Te,mi,Ig,J1,re,te),eS=((s,t,e)=>()=>{const n=new WeakMap;return{render(i,r){const o=n.get(r);return o!==void 0?Promise.resolve(o):(async(a,l)=>{let c=t(a);if(!en(c,l)){const h={channelCount:c.channelCount,channelCountMode:c.channelCountMode,channelInterpretation:c.channelInterpretation,curve:c.curve,oversample:c.oversample};c=s(l,h)}return n.set(l,c),Uo(c)?await e(a,l,c.inputs[0]):await e(a,l,c),c})(i,r)}}})(gh,ce,Ke),nS=((s,t,e,n,i,r,o)=>class extends s{constructor(a,l){const c=i(a),h={...l1,...l},u=e(c,h);super(a,!0,u,r(c)?n():null),this._isCurveNullified=!1,this._nativeWaveShaperNode=u,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(a){if(a===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(a.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=a}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(a){this._nativeWaveShaperNode.oversample=a}})(Te,je,gh,eS,re,te,gr),Lg=(s=>s!==null&&s.isSecureContext)(hi),gd=(s=>(t,e,n)=>{Object.defineProperties(s,{currentFrame:{configurable:!0,get:()=>Math.round(t*e)},currentTime:{configurable:!0,get:()=>t}});try{return n()}finally{s!==null&&(delete s.currentFrame,delete s.currentTime)}})(hi),Og=new WeakMap,iS=((s,t)=>e=>{let n=s.get(e);if(n!==void 0)return n;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new t(1,1,44100),s.set(e,n),n})(Og,qe),sS=Lg?((s,t,e,n,i,r,o,a,l,c,h,u,d)=>{let p=0;return(f,g,m={credentials:"omit"})=>{const x=h.get(f);if(x!==void 0&&x.has(g))return Promise.resolve();const _=c.get(f);if(_!==void 0){const b=_.get(g);if(b!==void 0)return b}const y=r(f),A=y.audioWorklet===void 0?i(g).then(([b,v])=>{const[w,M]=Tm(b,v);return e(`${w};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${M}
})})(window,'_AWGS')`)}).then(()=>{const b=d._AWGS.pop();if(b===void 0)throw new SyntaxError;n(y.currentTime,y.sampleRate,()=>b(class{},void 0,(v,w)=>{if(v.trim()==="")throw t();const M=Eu.get(y);if(M!==void 0){if(M.has(v))throw t();Am(w),Em(w.parameterDescriptors),M.set(v,w)}else Am(w),Em(w.parameterDescriptors),Eu.set(y,new Map([[v,w]]))},y.sampleRate,void 0,void 0))}):Promise.all([i(g),Promise.resolve(s(u,u))]).then(([[b,v],w])=>{const M=p+1;p=M;const[C,T]=Tm(b,v),E=new Blob([`${C};((AudioWorkletProcessor,registerProcessor)=>{${T}
})(${w?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${w?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${w?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${M}',class extends AudioWorkletProcessor{process(){return !1}})`],{type:"application/javascript; charset=utf-8"}),D=URL.createObjectURL(E);return y.audioWorklet.addModule(D,m).then(()=>{if(a(y))return y;const R=o(y);return R.audioWorklet.addModule(D,m).then(()=>R)}).then(R=>{if(l===null)throw new SyntaxError;try{new l(R,`__sac${M}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(D))});return _===void 0?c.set(f,new Map([[g,A]])):_.set(g,A),A.then(()=>{const b=h.get(f);b===void 0?h.set(f,new Set([g])):b.add(g)}).finally(()=>{const b=c.get(f);b!==void 0&&b.delete(g)}),A}})(Hn,pn,(s=>t=>new Promise((e,n)=>{if(s===null)return n(new SyntaxError),void 0;const i=s.document.head;if(i===null)n(new SyntaxError);else{const r=s.document.createElement("script"),o=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(o),l=s.onerror,c=()=>{s.onerror=l,URL.revokeObjectURL(a)};s.onerror=(h,u,d,p,f)=>u===a||u===s.location.href&&d===1&&p===1?(c(),n(f),!1):l!==null?l(h,u,d,p,f):void 0,r.onerror=()=>{c(),n(new SyntaxError)},r.onload=()=>{c(),e()},r.src=a,r.type="module",i.appendChild(r)}}))(hi),gd,(s=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw s()})(()=>new DOMException("","AbortError")),re,iS,te,oo,new WeakMap,new WeakMap,((s,t)=>async()=>{if(s===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new t(1,128,44100),i=URL.createObjectURL(e);let r=!1,o=!1;try{await n.audioWorklet.addModule(i);const a=new s(n,"a",{numberOfOutputs:0}),l=n.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,l.connect(a),l.start(0),await n.startRendering(),await new Promise(c=>setTimeout(c))}catch{}finally{URL.revokeObjectURL(i)}return r&&!o})(oo,qe),hi):void 0,rS=((s,t)=>e=>s(e)||t(e))(ud,te),oS=((s,t,e,n,i,r,o,a,l,c,h)=>(u,d)=>{const p=o(u)?u:r(u);if(i.has(d)){const f=e();return Promise.reject(f)}try{i.add(d)}catch{}return t(l,()=>l(p))?p.decodeAudioData(d).then(f=>(Pm(d).catch(()=>{}),t(a,()=>a(f))||h(f),s.add(f),f)):new Promise((f,g)=>{const m=async()=>{try{await Pm(d)}catch{}},x=_=>{g(_),m()};try{p.decodeAudioData(d,_=>{typeof _.copyFromChannel!="function"&&(c(_),rd(_)),s.add(_),m().then(()=>f(_))},_=>{x(_===null?n():_)})}catch(_){x(_)}})})(pd,Hn,()=>new DOMException("","DataCloneError"),()=>new DOMException("","EncodingError"),new WeakSet,re,rS,ec,Ta,md,fd),Fg=((s,t,e,n,i,r,o,a,l,c,h,u,d,p,f,g,m,x,_,y)=>class extends f{constructor(A,b){super(A,b),this._nativeContext=A,this._audioWorklet=s===void 0?void 0:{addModule:(v,w)=>s(this,v,w)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new i(this)}createBuffer(A,b,v){return new e({length:b,numberOfChannels:A,sampleRate:v})}createBufferSource(){return new n(this)}createChannelMerger(A=6){return new r(this,{numberOfInputs:A})}createChannelSplitter(A=6){return new o(this,{numberOfOutputs:A})}createConstantSource(){return new a(this)}createConvolver(){return new l(this)}createDelay(A=1){return new h(this,{maxDelayTime:A})}createDynamicsCompressor(){return new u(this)}createGain(){return new d(this)}createIIRFilter(A,b){return new p(this,{feedback:b,feedforward:A})}createOscillator(){return new g(this)}createPanner(){return new m(this)}createPeriodicWave(A,b,v={disableNormalization:!1}){return new x(this,{...v,imag:b,real:A})}createStereoPanner(){return new _(this)}createWaveShaper(){return new y(this)}decodeAudioData(A,b,v){return c(this._nativeContext,A).then(w=>(typeof b=="function"&&b(w),w),w=>{throw typeof v=="function"&&v(w),w})}})(sS,g1,bg,v1,w1,M1,E1,R1,P1,oS,L1,F1,k1,V1,W1,H1,$1,K1,tS,nS),aS=((s,t,e,n)=>class extends s{constructor(i,r){const o=e(i),a=t(o,r);if(n(o))throw TypeError();super(i,!0,a,null),this._nativeMediaElementAudioSourceNode=a}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}})(Te,(s,t)=>s.createMediaElementSource(t.mediaElement),re,te),lS=((s,t,e,n)=>class extends s{constructor(i,r){const o=e(i);if(n(o))throw new TypeError;const a={...Jb,...r},l=t(o,a);super(i,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}})(Te,(s,t)=>{const e=s.createMediaStreamDestination();return ke(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},re,te),cS=((s,t,e,n)=>class extends s{constructor(i,r){const o=e(i),a=t(o,r);if(n(o))throw new TypeError;super(i,!0,a,null),this._nativeMediaStreamAudioSourceNode=a}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}})(Te,(s,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const n=e.slice(0,1),i=s.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(i,"mediaStream",{value:t}),i},re,te),hS=((s,t)=>(e,{mediaStreamTrack:n})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(n);const i=new MediaStream([n]),r=e.createMediaStreamSource(i);if(n.kind!=="audio")throw s();if(t(e))throw new TypeError;return r})(je,te),uS=((s,t,e)=>class extends s{constructor(n,i){const r=e(n);super(n,!0,t(r,i),null)}})(Te,hS,re),dS=((s,t,e,n,i,r,o,a,l)=>class extends s{constructor(c={}){if(l===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new l(c)}catch(p){throw p.code===12&&p.message==="sampleRate is not in range"?e():p}if(h===null)throw n();if(!(p=>p===void 0||typeof p=="number"||typeof p=="string"&&(p==="balanced"||p==="interactive"||p==="playback"))(c.latencyHint))throw new TypeError(`The provided value '${c.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(c.sampleRate!==void 0&&h.sampleRate!==c.sampleRate)throw e();super(h,2);const{latencyHint:u}=c,{sampleRate:d}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:u==="balanced"?512/d:u==="interactive"||u===void 0?256/d:u==="playback"?1024/d:128*Math.max(2,Math.min(128,Math.round(u*d/128)))/d,this._nativeAudioContext=h,l.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const p=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",p)};h.addEventListener("statechange",p)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),eg(this)}))}createMediaElementSource(c){return new i(this,{mediaElement:c})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(c){return new o(this,{mediaStream:c})}createMediaStreamTrackSource(c){return new a(this,{mediaStreamTrack:c})}resume(){return this._state==="suspended"?new Promise((c,h)=>{const u=()=>{this._nativeAudioContext.removeEventListener("statechange",u),this._nativeAudioContext.state==="running"?c():this.resume().then(c,h)};this._nativeAudioContext.addEventListener("statechange",u)}):this._nativeAudioContext.resume().catch(c=>{throw c===void 0||c.code===15?t():c})}suspend(){return this._nativeAudioContext.suspend().catch(c=>{throw c===void 0?t():c})}})(Fg,je,pn,()=>new DOMException("","UnknownError"),aS,lS,cS,uS,Ts),_d=(s=>t=>{const e=s.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e})(Ag),pS=(s=>(t,e)=>{s(t).add(e)})(_d),Ng=(s=>(t,e,n=0,i=0)=>{const r=t[n];if(r===void 0)throw s();return ic(e)?r.connect(e,0,i):r.connect(e,0)})(Pi),mS=(s=>(t,e)=>{s(t).delete(e)})(_d),kg=(s=>(t,e=void 0,n=void 0,i=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?Cl(s,t,e).disconnect():ic(e)?n===void 0?t.forEach(r=>r.disconnect(e)):i===void 0?Cl(s,t,n).disconnect(e,0):Cl(s,t,n).disconnect(e,0,i):n===void 0?t.forEach(r=>r.disconnect(e)):Cl(s,t,n).disconnect(e,0))(Pi),Ug=new WeakMap,fS=((s,t)=>e=>t(s,e))(Ug,ci),gS=((s,t,e,n,i,r,o,a,l,c,h,u,d)=>(p,f,g,m)=>{if(m.numberOfInputs===0&&m.numberOfOutputs===0)throw l();const x=Array.isArray(m.outputChannelCount)?m.outputChannelCount:Array.from(m.outputChannelCount);if(x.some(N=>N<1))throw l();if(x.length!==m.numberOfOutputs)throw t();if(m.channelCountMode!=="explicit")throw l();const _=m.channelCount*m.numberOfInputs,y=x.reduce((N,Z)=>N+Z,0),A=g.parameterDescriptors===void 0?0:g.parameterDescriptors.length;if(_+A>6||y>6)throw l();const b=new MessageChannel,v=[],w=[];for(let N=0;N<m.numberOfInputs;N+=1)v.push(o(p,{channelCount:m.channelCount,channelCountMode:m.channelCountMode,channelInterpretation:m.channelInterpretation,gain:1})),w.push(i(p,{channelCount:m.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:m.channelCount}));const M=[];if(g.parameterDescriptors!==void 0)for(const{defaultValue:N,maxValue:Z,minValue:it,name:nt}of g.parameterDescriptors){const pt=r(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:m.parameterData[nt]!==void 0?m.parameterData[nt]:N===void 0?0:N});Object.defineProperties(pt.offset,{defaultValue:{get:()=>N===void 0?0:N},maxValue:{get:()=>Z===void 0?ln:Z},minValue:{get:()=>it===void 0?_n:it}}),M.push(pt)}const C=n(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,_+A)}),T=lg(f,p.sampleRate),E=a(p,T,_+A,Math.max(1,y)),D=i(p,{channelCount:Math.max(1,y),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,y)}),R=[];for(let N=0;N<m.numberOfOutputs;N+=1)R.push(n(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:x[N]}));for(let N=0;N<m.numberOfInputs;N+=1){v[N].connect(w[N]);for(let Z=0;Z<m.channelCount;Z+=1)w[N].connect(C,Z,N*m.channelCount+Z)}const P=new rg(g.parameterDescriptors===void 0?[]:g.parameterDescriptors.map(({name:N},Z)=>{const it=M[Z];return it.connect(C,0,_+Z),it.start(0),[N,it.offset]}));C.connect(E);let k=m.channelInterpretation,F=null;const z=m.numberOfOutputs===0?[E]:R,q={get bufferSize(){return T},get channelCount(){return m.channelCount},set channelCount(N){throw e()},get channelCountMode(){return m.channelCountMode},set channelCountMode(N){throw e()},get channelInterpretation(){return k},set channelInterpretation(N){for(const Z of v)Z.channelInterpretation=N;k=N},get context(){return E.context},get inputs(){return v},get numberOfInputs(){return m.numberOfInputs},get numberOfOutputs(){return m.numberOfOutputs},get onprocessorerror(){return F},set onprocessorerror(N){typeof F=="function"&&q.removeEventListener("processorerror",F),F=typeof N=="function"?N:null,typeof F=="function"&&q.addEventListener("processorerror",F)},get parameters(){return P},get port(){return b.port2},addEventListener:(...N)=>E.addEventListener(N[0],N[1],N[2]),connect:s.bind(null,z),disconnect:c.bind(null,z),dispatchEvent:(...N)=>E.dispatchEvent(N[0]),removeEventListener:(...N)=>E.removeEventListener(N[0],N[1],N[2])},B=new Map;var W,Q;b.port1.addEventListener=(W=b.port1.addEventListener,(...N)=>{if(N[0]==="message"){const Z=typeof N[1]=="function"?N[1]:typeof N[1]=="object"&&N[1]!==null&&typeof N[1].handleEvent=="function"?N[1].handleEvent:null;if(Z!==null){const it=B.get(N[1]);it!==void 0?N[1]=it:(N[1]=nt=>{h(p.currentTime,p.sampleRate,()=>Z(nt))},B.set(Z,N[1]))}}return W.call(b.port1,N[0],N[1],N[2])}),b.port1.removeEventListener=(Q=b.port1.removeEventListener,(...N)=>{if(N[0]==="message"){const Z=B.get(N[1]);Z!==void 0&&(B.delete(N[1]),N[1]=Z)}return Q.call(b.port1,N[0],N[1],N[2])});let j=null;Object.defineProperty(b.port1,"onmessage",{get:()=>j,set:N=>{typeof j=="function"&&b.port1.removeEventListener("message",j),j=typeof N=="function"?N:null,typeof j=="function"&&(b.port1.addEventListener("message",j),b.port1.start())}}),g.prototype.port=b.port1;let dt=null;((N,Z,it,nt)=>{let pt=Au.get(N);pt===void 0&&(pt=new WeakMap,Au.set(N,pt));const mt=t1(it,nt);return pt.set(Z,mt),mt})(p,q,g,m).then(N=>dt=N);const rt=rc(m.numberOfInputs,m.channelCount),$=rc(m.numberOfOutputs,x),O=g.parameterDescriptors===void 0?[]:g.parameterDescriptors.reduce((N,{name:Z})=>({...N,[Z]:new Float32Array(128)}),{});let I=!0;const K=()=>{m.numberOfOutputs>0&&E.disconnect(D);for(let N=0,Z=0;N<m.numberOfOutputs;N+=1){const it=R[N];for(let nt=0;nt<x[N];nt+=1)D.disconnect(it,Z+nt,nt);Z+=x[N]}},at=new Map;E.onaudioprocess=({inputBuffer:N,outputBuffer:Z})=>{if(dt!==null){const it=u(q);for(let nt=0;nt<T;nt+=128){for(let pt=0;pt<m.numberOfInputs;pt+=1)for(let mt=0;mt<m.channelCount;mt+=1)sc(N,rt[pt],mt,mt,nt);g.parameterDescriptors!==void 0&&g.parameterDescriptors.forEach(({name:pt},mt)=>{sc(N,O,pt,_+mt,nt)});for(let pt=0;pt<m.numberOfInputs;pt+=1)for(let mt=0;mt<x[pt];mt+=1)$[pt][mt].byteLength===0&&($[pt][mt]=new Float32Array(128));try{const pt=rt.map((_t,St)=>{if(it[St].size>0)return at.set(St,T/128),_t;const Rt=at.get(St);return Rt===void 0?[]:(_t.every(Kt=>Kt.every(Pt=>Pt===0))&&(Rt===1?at.delete(St):at.set(St,Rt-1)),_t)});I=h(p.currentTime+nt/p.sampleRate,p.sampleRate,()=>dt.process(pt,$,O));for(let _t=0,St=0;_t<m.numberOfOutputs;_t+=1){for(let Rt=0;Rt<x[_t];Rt+=1)og(Z,$[_t],Rt,St+Rt,nt);St+=x[_t]}}catch(pt){I=!1,q.dispatchEvent(new ErrorEvent("processorerror",{colno:pt.colno,filename:pt.filename,lineno:pt.lineno,message:pt.message}))}if(!I){for(let pt=0;pt<m.numberOfInputs;pt+=1){v[pt].disconnect(w[pt]);for(let mt=0;mt<m.channelCount;mt+=1)w[nt].disconnect(C,mt,pt*m.channelCount+mt)}if(g.parameterDescriptors!==void 0){const pt=g.parameterDescriptors.length;for(let mt=0;mt<pt;mt+=1){const _t=M[mt];_t.disconnect(C,0,_+mt),_t.stop()}}C.disconnect(E),E.onaudioprocess=null,X?K():G();break}}}};let X=!1;const L=o(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Y=()=>E.connect(L).connect(p.destination),G=()=>{E.disconnect(L),L.disconnect()};return Y(),d(q,()=>{if(I){G(),m.numberOfOutputs>0&&E.connect(D);for(let N=0,Z=0;N<m.numberOfOutputs;N+=1){const it=R[N];for(let nt=0;nt<x[N];nt+=1)D.connect(it,Z+nt,nt);Z+=x[N]}}X=!0},()=>{I&&(Y(),K()),X=!1})})(Ng,Pi,je,Ls,Ua,qo,wn,za,pn,kg,gd,fS,Is),_S=((s,t,e,n,i)=>(r,o,a,l,c,h)=>{if(a!==null)try{const p=new a(r,l,h),f=new Map;let g=null;if(Object.defineProperties(p,{channelCount:{get:()=>h.channelCount,set:()=>{throw s()}},channelCountMode:{get:()=>"explicit",set:()=>{throw s()}},onprocessorerror:{get:()=>g,set:m=>{typeof g=="function"&&p.removeEventListener("processorerror",g),g=typeof m=="function"?m:null,typeof g=="function"&&p.addEventListener("processorerror",g)}}}),p.addEventListener=(d=p.addEventListener,(...m)=>{if(m[0]==="processorerror"){const x=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(x!==null){const _=f.get(m[1]);_!==void 0?m[1]=_:(m[1]=y=>{y.type==="error"?(Object.defineProperties(y,{type:{value:"processorerror"}}),x(y)):x(new ErrorEvent(m[0],{...y}))},f.set(x,m[1]))}}return d.call(p,"error",m[1],m[2]),d.call(p,...m)}),p.removeEventListener=(u=p.removeEventListener,(...m)=>{if(m[0]==="processorerror"){const x=f.get(m[1]);x!==void 0&&(f.delete(m[1]),m[1]=x)}return u.call(p,"error",m[1],m[2]),u.call(p,m[0],m[1],m[2])}),h.numberOfOutputs!==0){const m=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return p.connect(m).connect(r.destination),i(p,()=>m.disconnect(),()=>m.connect(r.destination))}return p}catch(p){throw p.code===11?n():p}var u,d;if(c===void 0)throw n();return(p=>{const{port1:f}=new MessageChannel;try{f.postMessage(p)}finally{f.close()}})(h),t(r,o,c,h)})(je,gS,wn,pn,Is),vS=((s,t,e,n,i,r,o,a,l,c,h,u,d,p,f,g)=>(m,x,_)=>{const y=new WeakMap;let A=null;return{render(b,v){a(v,b);const w=y.get(v);return w!==void 0?Promise.resolve(w):(async(M,C)=>{let T=h(M),E=null;const D=en(T,C),R=Array.isArray(x.outputChannelCount)?x.outputChannelCount:Array.from(x.outputChannelCount);if(u===null){const P=R.reduce((q,B)=>q+B,0),k=i(C,{channelCount:Math.max(1,P),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,P)}),F=[];for(let q=0;q<M.numberOfOutputs;q+=1)F.push(n(C,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:R[q]}));const z=o(C,{channelCount:x.channelCount,channelCountMode:x.channelCountMode,channelInterpretation:x.channelInterpretation,gain:1});z.connect=t.bind(null,F),z.disconnect=l.bind(null,F),E=[k,F,z]}else D||(T=new u(C,m));if(y.set(C,E===null?T:E[2]),E!==null){if(A===null){if(_===void 0)throw new Error("Missing the processor constructor.");if(d===null)throw new Error("Missing the native OfflineAudioContext constructor.");const B=M.channelCount*M.numberOfInputs,W=_.parameterDescriptors===void 0?0:_.parameterDescriptors.length,Q=B+W;A=Wb(M,Q===0?null:await(async()=>{const dt=new d(Q,128*Math.ceil(M.context.length/128),C.sampleRate),ct=[],rt=[];for(let I=0;I<x.numberOfInputs;I+=1)ct.push(o(dt,{channelCount:x.channelCount,channelCountMode:x.channelCountMode,channelInterpretation:x.channelInterpretation,gain:1})),rt.push(i(dt,{channelCount:x.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:x.channelCount}));const $=await Promise.all(Array.from(M.parameters.values()).map(async I=>{const K=r(dt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:I.value});return await p(dt,I,K.offset),K})),O=n(dt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,B+W)});for(let I=0;I<x.numberOfInputs;I+=1){ct[I].connect(rt[I]);for(let K=0;K<x.channelCount;K+=1)rt[I].connect(O,K,I*x.channelCount+K)}for(const[I,K]of $.entries())K.connect(O,0,B+I),K.start(0);return O.connect(dt.destination),await Promise.all(ct.map(I=>f(M,dt,I))),g(dt)})(),C,x,R,_,c)}const P=await A,k=e(C,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[F,z,q]=E;P!==null&&(k.buffer=P,k.start(0)),k.connect(F);for(let B=0,W=0;B<M.numberOfOutputs;B+=1){const Q=z[B];for(let j=0;j<R[B];j+=1)F.connect(Q,W+j,j);W+=R[B]}return q}if(D)for(const[P,k]of M.parameters.entries())await s(C,k,T.parameters.get(P));else for(const[P,k]of M.parameters.entries())await p(C,k,T.parameters.get(P));return await f(M,C,T),T})(b,v)}}})(Ii,Ng,Vo,Ls,Ua,qo,wn,mS,kg,gd,ce,oo,qe,Li,Ke,fh),yS=(s=>t=>s.get(t))(Og),xS=(s=>(t,e)=>{s.set(t,e)})(Ug),Um=Lg?((s,t,e,n,i,r,o,a,l,c,h,u,d,p)=>class extends t{constructor(f,g,m){var x;const _=a(f),y=l(_),A=h({...qb,...m});d(A);const b=Eu.get(_),v=b?.get(g),w=y||_.state!=="closed"?_:(x=o(_))!==null&&x!==void 0?x:_,M=i(w,y?null:f.baseLatency,c,g,v,A);super(f,!0,M,y?n(g,A,v):null);const C=[];M.parameters.forEach((E,D)=>{const R=e(this,y,E);C.push([D,R])}),this._nativeAudioWorkletNode=M,this._onprocessorerror=null,this._parameters=new rg(C),y&&s(_,this);const{activeInputs:T}=r(this);u(M,T)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(f){const g=typeof f=="function"?p(this,f):null;this._nativeAudioWorkletNode.onprocessorerror=g;const m=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=m!==null&&m===g?f:m}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}})(pS,Te,mi,vS,_S,on,yS,re,te,oo,s=>({...s,outputChannelCount:s.outputChannelCount!==void 0?s.outputChannelCount:s.numberOfInputs===1&&s.numberOfOutputs===1?[s.channelCount]:Array.from({length:s.numberOfOutputs},()=>1)}),xS,s=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(s)}finally{t.close(),e.close()}},Bo):void 0,wS=((s,t)=>(e,n,i)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,n,i)}catch(r){throw r.name==="SyntaxError"?s():r}})(pn,qe),bS=((s,t,e,n,i,r,o,a)=>(l,c)=>e(l).render(l,c).then(()=>Promise.all(Array.from(n(c)).map(h=>e(h).render(h,c)))).then(()=>i(c)).then(h=>(typeof h.copyFromChannel!="function"?(o(h),rd(h)):t(r,()=>r(h))||a(h),s.add(h),h)))(pd,Hn,hd,_d,fh,ec,md,fd),SS=((s,t,e,n,i)=>class extends s{constructor(r,o,a){let l;if(typeof r=="number"&&o!==void 0&&a!==void 0)l={length:o,numberOfChannels:r,sampleRate:a};else{if(typeof r!="object")throw new Error("The given parameters are not valid.");l=r}const{length:c,numberOfChannels:h,sampleRate:u}={...i1,...l},d=n(h,c,u);t(Ta,()=>Ta(d))||d.addEventListener("statechange",(()=>{let p=0;const f=g=>{this._state==="running"&&(p>0?(d.removeEventListener("statechange",f),g.stopImmediatePropagation(),this._waitForThePromiseToSettle(g)):p+=1)};return f})()),super(d,h),this._length=c,this._nativeOfflineAudioContext=d,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,eg(this)}))}_waitForThePromiseToSettle(r){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(r):setTimeout(()=>this._waitForThePromiseToSettle(r))}})(Fg,Hn,je,wS,bS),MS=((s,t)=>e=>{const n=s.get(e);return t(n)||t(e)})(uh,ud),TS=((s,t)=>e=>s.has(e)||t(e))(id,dd),ES=((s,t)=>e=>s.has(e)||t(e))(sd,xg),AS=((s,t)=>e=>{const n=s.get(e);return t(n)||t(e)})(uh,te);function un(s){return s===void 0}function Lt(s){return!un(s)}function zg(s){return typeof s=="function"}function Pn(s){return typeof s=="number"}function Ji(s){return Object.prototype.toString.call(s)==="[object Object]"&&s.constructor===Object}function vd(s){return typeof s=="boolean"}function Ze(s){return Array.isArray(s)}function ui(s){return typeof s=="string"}function ma(s){return ui(s)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(s)}function bt(s,t){if(!s)throw new Error(t)}function Ye(s,t,e=1/0){if(!(t<=s&&s<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${s}`)}function yd(s){s.isOffline||s.state==="running"||Wo('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let Bg=!1,zm=!1;function Du(s){Bg=s}function Vg(s){un(s)&&Bg&&!zm&&(zm=!0,Wo("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let xd=console;function qg(...s){xd.log(...s)}function Wo(...s){xd.warn(...s)}const CS=Object.freeze(Object.defineProperty({__proto__:null,assert:bt,assertContextRunning:yd,assertRange:Ye,assertUsedScheduleTime:Vg,enterScheduledCallback:Du,log:qg,setLogger:function(s){xd=s},warn:Wo},Symbol.toStringTag,{value:"Module"})),ts=typeof self=="object"?self:null,RS=ts&&(ts.hasOwnProperty("AudioContext")||ts.hasOwnProperty("webkitAudioContext"));function oi(s,t,e,n){var i,r=arguments.length,o=r<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,e):n;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(s,t,e,n);else for(var a=s.length-1;a>=0;a--)(i=s[a])&&(o=(r<3?i(o):r>3?i(t,e,o):i(t,e))||o);return r>3&&o&&Object.defineProperty(t,e,o),o}function ee(s,t,e,n){return new(e||(e=Promise))(function(i,r){function o(c){try{l(n.next(c))}catch(h){r(h)}}function a(c){try{l(n.throw(c))}catch(h){r(h)}}function l(c){var h;c.done?i(c.value):(h=c.value,h instanceof e?h:new e(function(u){u(h)})).then(o,a)}l((n=n.apply(s,t||[])).next())})}class DS{constructor(t,e,n,i){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(i||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(1e3*this._updateInterval).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},1e3*this._updateInterval)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),this._type==="worker"&&((e=this._worker)===null||e===void 0||e.postMessage(1e3*this._updateInterval))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function ar(s){return ES(s)}function Es(s){return TS(s)}function Wl(s){return AS(s)}function qr(s){return MS(s)}function PS(s,t){return s==="value"||ar(t)||Es(t)||function(e){return e instanceof bg}(t)}function Bn(s,...t){if(!t.length)return s;const e=t.shift();if(Ji(s)&&Ji(e))for(const n in e)PS(n,e[n])?s[n]=e[n]:Ji(e[n])?(s[n]||Object.assign(s,{[n]:{}}),Bn(s[n],e[n])):Object.assign(s,{[n]:e[n]});return Bn(s,...t)}function V(s,t,e=[],n){const i={},r=Array.from(t);if(Ji(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(o=>Reflect.has(s,o))||(Bn(i,{[n]:r[0]}),e.splice(e.indexOf(n),1),r.shift())),r.length===1&&Ji(r[0]))Bn(i,r[0]);else for(let o=0;o<e.length;o++)Lt(r[o])&&(i[e[o]]=r[o]);return Bn(s,i)}function Vn(s,t){return un(s)?t:s}function $e(s,t){return t.forEach(e=>{Reflect.has(s,e)&&delete s[e]}),s}let ls=class{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...s){(this.debug||ts&&this.toString()===ts.TONE_DEBUG_CLASS)&&qg(this,...s)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}};ls.version=jf;const wd=1e-6;function ao(s,t){return s>t+wd}function Pu(s,t){return ao(s,t)||ni(s,t)}function oc(s,t){return s+wd<t}function ni(s,t){return Math.abs(s-t)<wd}function _r(s,t,e){return Math.max(Math.min(s,e),t)}class Rn extends ls{constructor(){super(),this.name="Timeline",this._timeline=[];const t=V(Rn.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(bt(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];bt(Pu(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(ni(this._timeline[e].time,t)){for(let n=e;n>=0&&ni(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&Pu(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let n=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][e]<=t)return i-1;for(;n<r;){let o=Math.floor(n+(r-n)/2);const a=this._timeline[o],l=this._timeline[o+1];if(ni(a[e],t)){for(let c=o;c<this._timeline.length&&ni(this._timeline[c][e],t);c++)o=c;return o}if(oc(a[e],t)&&ao(l[e],t))return o;ao(a[e],t)?r=o:n=o+1}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return n!==-1&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let i=this._search(t),r=this._search(e);return i!==-1&&r!==-1?(this._timeline[i].time!==t&&(i+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,i,r)):i===-1&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(n!==-1&&ni(this._timeline[n].time,t)){let i=n;for(let r=n;r>=0&&ni(this._timeline[r].time,t);r--)i=r;this._iterate(r=>{e(r)},i,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Wg=[];function _h(s){Wg.push(s)}const Gg=[];function vh(s){Gg.push(s)}class Go extends ls{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(n=>{un(this._events)&&(this._events={}),this._events.hasOwnProperty(n)||(this._events[n]=[]),this._events[n].push(e)}),this}once(t,e){const n=(...i)=>{e(...i),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach(n=>{if(un(this._events)&&(this._events={}),this._events.hasOwnProperty(n))if(un(e))this._events[n]=[];else{const i=this._events[n];for(let r=i.length-1;r>=0;r--)i[r]===e&&i.splice(r,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let i=0,r=n.length;i<r;i++)n[i].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const n=Object.getOwnPropertyDescriptor(Go.prototype,e);Object.defineProperty(t.prototype,e,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class bd extends Go{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Ho extends bd{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new Rn,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const n=V(Ho.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=((t=arguments[0])===null||t===void 0?void 0:t.latencyHint)||""):(this._context=function(i){return new dS(i)}({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new DS(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((e=arguments[0])===null||e===void 0)&&e.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){var t;return this._initialized||(t=this,Wg.forEach(e=>e(t)),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return bt(qr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return bt(qr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return bt(qr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){bt(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){bt(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){bt(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){bt(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return function(n,i,r){return bt(Lt(Um),"This node only works in a secure context (https or localhost)"),new Um(n,i,r)}(this.rawContext,t,e)}addAudioWorkletModule(t){return ee(this,void 0,void 0,function*(){bt(Lt(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise})}workletsAreReady(){return ee(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return qr(this._context)?this._context.resume():Promise.resolve()}close(){return ee(this,void 0,void 0,function*(){var t;qr(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&(t=this,Gg.forEach(e=>e(t)))})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=t;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=e,i.loop=!0,i.start(0),this._constants.set(t,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this.close(),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),i()},id:n,time:r+e})};return i(),n}}function Tt(s,t){Ze(t)?t.forEach(e=>Tt(s,e)):Object.defineProperty(s,t,{enumerable:!0,writable:!1})}function Va(s,t){Ze(t)?t.forEach(e=>Va(s,e)):Object.defineProperty(s,t,{writable:!0})}const Ut=()=>{};class Ht extends ls{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Ut;const t=V(Ht.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,ui(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Ut,onload:Ut,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:ae().sampleRate}set(t){return t instanceof Ht?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return ee(this,void 0,void 0,function*(){const e=Ht.load(t).then(n=>{this.set(n),this.onload(this)});Ht.downloads.push(e);try{yield e}finally{const n=Ht.downloads.indexOf(e);Ht.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Ze(t)&&t[0].length>0,n=e?t.length:1,i=e?t[0].length:t.length,r=ae(),o=r.createBuffer(n,i,r.sampleRate),a=e||n!==1?t:[t];for(let l=0;l<n;l++)o.copyToChannel(a[l],l);return this._buffer=o,this}toMono(t){if(Pn(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const n=this.numberOfChannels;for(let i=0;i<n;i++){const r=this.toArray(i);for(let o=0;o<r.length;o++)e[o]+=r[o]}e=e.map(i=>i/n),this.fromArray(e)}return this}toArray(t){if(Pn(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let n=0;n<this.numberOfChannels;n++)e[n]=this.getChannelData(n);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){bt(this.loaded,"Buffer is not loaded");const n=Math.floor(t*this.sampleRate),i=Math.floor(e*this.sampleRate);bt(n<i,"The start time must be less than the end time");const r=i-n,o=ae().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(n,i),a);return new Ht(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new Ht().fromArray(t)}static fromUrl(t){return ee(this,void 0,void 0,function*(){return yield new Ht().load(t)})}static load(t){return ee(this,void 0,void 0,function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const a=e[1].split("|");let l=a[0];for(const c of a)if(Ht.supportsType(c)){l=c;break}t=t.replace(e[0],l)}const n=Ht.baseUrl===""||Ht.baseUrl.endsWith("/")?Ht.baseUrl:Ht.baseUrl+"/",i=document.createElement("a");i.href=n+t,i.pathname=(i.pathname+i.hash).split("/").map(encodeURIComponent).join("/");const r=yield fetch(i.href);if(!r.ok)throw new Error(`could not load url: ${t}`);const o=yield r.arrayBuffer();return yield ae().decodeAudioData(o)})}static supportsType(t){const e=t.split("."),n=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return ee(this,void 0,void 0,function*(){for(yield Promise.resolve();Ht.downloads.length;)yield Ht.downloads[0]})}}Ht.baseUrl="",Ht.downloads=[];class lo extends Ho{constructor(){var t,e,n;super({clockSource:"offline",context:Wl(arguments[0])?arguments[0]:(t=arguments[0],e=arguments[1]*arguments[2],n=arguments[2],new SS(t,e,n)),lookAhead:0,updateInterval:Wl(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Wl(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return ee(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(t=!0){return ee(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new Ht(e)})}close(){return Promise.resolve()}}const Hg=new class extends bd{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(s,t,e){return{}}createChannelMerger(s){return{}}createChannelSplitter(s){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(s){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(s,t){return{}}createPanner(){return{}}createPeriodicWave(s,t,e){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(s){return{}}createMediaElementSource(s){return{}}createMediaStreamDestination(){return{}}decodeAudioData(s){return Promise.resolve({})}createAudioWorkletNode(s,t){return{}}get rawContext(){return{}}addAudioWorkletModule(s){return ee(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(s,t){return 0}clearTimeout(s){return this}setInterval(s,t){return 0}clearInterval(s){return this}getConstant(s){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(s){}get destination(){return{}}set destination(s){}now(){return 0}immediate(){return 0}};let Ea=Hg;function ae(){return Ea===Hg&&RS&&Gl(new Ho),Ea}function Gl(s,t=!1){t&&Ea.dispose(),Ea=qr(s)?new Ho(s):Wl(s)?new lo(s):s}function Sd(){return Ea.resume()}ts&&ts.TONE_SILENCE_LOGGING;function co(s){return Math.pow(10,s/20)}function qa(s){return Math.log(s)/Math.LN10*20}function ho(s){return Math.pow(2,s/12)}let ac=440;function Ss(s){return Math.round(jg(s))}function jg(s){return 69+12*Math.log2(s/ac)}function Md(s){return ac*Math.pow(2,(s-69)/12)}class Td extends ls{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),i=e==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/n)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(3*Math.floor(e)))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let i=0;return t&&t!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i+=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(i+=this._beatsToUnits(parseFloat(n)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Td&&this.fromType(this._val),un(this._val))return this._noArg();if(ui(this._val)&&un(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(Ji(this._val)){let t=0;for(const e in this._val)if(Lt(this._val[e])){const n=this._val[e];t+=new this.constructor(this.context,e).valueOf()*n}return t}if(Lt(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}return ui(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi()}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return 1e3*this.toSeconds()}}class Cn extends Td{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Cn(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),i=this.valueOf();return i+(Math.round(i/n)*n-i)*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);e.push(o+"n."),e.push(o+"n"),e.push(o+"t")}e.push("0");let n=e[0],i=new Cn(this.context,e[0]).toSeconds();return e.forEach(r=>{const o=new Cn(this.context,r).toSeconds();Math.abs(o-t)<Math.abs(i-t)&&(n=r,i=o)}),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let i=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[n,e,i].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return Ss(this.toFrequency())}_now(){return this.context.now()}}class hn extends Cn{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return ac}static set A4(t){(function(e){ac=e})(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:hn.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const n=IS[t.toLowerCase()]+12*(parseInt(e,10)+1);return this.defaultUnits==="midi"?n:hn.mtof(n)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let i=1;return t&&t!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i*=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(i*=this._beatsToUnits(parseFloat(n)/4)),i}}})}transpose(t){return new hn(this.context,this.valueOf()*ho(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return Ss(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/hn.A4);let n=Math.round(12*e)+57;const i=Math.floor(n/12);return i<0&&(n+=-12*i),LS[n%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(60*t/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return Md(t)}static ftom(t){return Ss(t)}}const IS={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},LS=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class Re extends Cn{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class Xe extends ls{constructor(){super();const t=V(Xe.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:ae()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return Vg(t),new Cn(this.context,t).toSeconds()}toFrequency(t){return new hn(this.context,t).toFrequency()}toTicks(t){return new Re(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(n=>{un(t[n])&&delete e[n]}),e}get(){const t=this.constructor.getDefaults();return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const n=this[e];Lt(n)&&Lt(n.value)&&Lt(n.setValueAtTime)?t[e]=n.value:n instanceof Xe?t[e]=n._getPartialProperties(t[e]):Ze(n)||Pn(n)||ui(n)||vd(n)?t[e]=n:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&Lt(this[e])&&(this[e]&&Lt(this[e].value)&&Lt(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof Xe?this[e].set(t[e]):this[e]=t[e])}),this}}class jo extends Rn{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,n){return Ye(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){for(let n=this._search(e);n>=0;n--){const i=this._timeline[n];if(i.state===t)return i}}getNextState(t,e){const n=this._search(e);if(n!==-1)for(let i=n;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===t)return r}}}class Dt extends Xe{constructor(){super(V(Dt.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=V(Dt.getDefaults(),arguments,["param","units","convert"]);for(bt(Lt(t.param)&&(ar(t.param)||t.param instanceof Dt),"param must be an AudioParam");!ar(t.param);)t.param=t.param._param;this._swappable=!!Lt(t.swappable)&&t.swappable,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new Rn(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,Lt(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Xe.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return Lt(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return Lt(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return Lt(this.maxValue)&&Lt(this.minValue)&&Ye(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?co(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?qa(t):t}setValueAtTime(t,e){const n=this.toSeconds(e),i=this._fromType(t);return bt(isFinite(i)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),i=this._events.get(e);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type!=="setTargetAtTime"||n!==null&&n.type!=="setValueAtTime")if(n===null)r=i.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let o=i.value;if(i.type==="setTargetAtTime"){const a=this._events.getBefore(i.time);o=a===null?this._initialValue:a.value}r=n.type==="linearRampToValueAtTime"?this._linearInterpolate(i.time,o,n.time,n.value,e):this._exponentialInterpolate(i.time,o,n.time,n.value,e)}else r=i.value;else{const o=this._events.getBefore(i.time);let a;a=o===null?this._initialValue:o.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,a,i.value,i.constant,e))}return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),i=this.toSeconds(e);return bt(isFinite(n)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:i,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,i),this._param.linearRampToValueAtTime(n,i),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=ni(n,0)?this._minOutput:n,this._assertRange(n);const i=this.toSeconds(e);return bt(isFinite(n)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,i),this._param.exponentialRampToValueAtTime(n,i),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const i=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,i),this.cancelAndHoldAtTime(e+.9*n),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const i=this._fromType(t);bt(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(i),bt(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(i,r,n),this}setValueCurveAtTime(t,e,n,i=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*i;this.setValueAtTime(this._toType(r),e);const o=n/(t.length-1);for(let a=1;a<t.length;a++){const l=this._fromType(t[a])*i;this.linearRampToValueAtTime(this._toType(l),e+a*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return bt(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));bt(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const i=this._events.get(e),r=this._events.getAfter(e);return i&&ni(i.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&n.type==="setTargetAtTime"){const i=this._events.getAfter(n.time),r=i?i.time:e+2,o=(r-e)/10;for(let a=e;a<r;a+=o)t.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?t.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?t.setTargetAtTime(i.value,i.time,i.constant):t[i.type](i.value,i.time)}),this}setParam(t){bt(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,i,r){return n+(e-n)*Math.exp(-(r-t)/i)}_linearInterpolate(t,e,n,i,r){return e+(r-t)/(n-t)*(i-e)}_exponentialInterpolate(t,e,n,i,r){return e*Math.pow(i/e,(r-t)/(n-t))}}class ut extends Xe{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return Lt(this.input)?ar(this.input)||this.input instanceof Dt?1:this.input.numberOfInputs:0}get numberOfOutputs(){return Lt(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return Lt(t)&&(t instanceof ut||Es(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(e=>{e.channelCount=t.channelCount,e.channelCountMode=t.channelCountMode,e.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();bt(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return dn(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Wo("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return Ed(this,t,e,n),this}chain(...t){return In(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),Lt(this.input)&&(this.input instanceof ut?this.input.dispose():Es(this.input)&&this.input.disconnect()),Lt(this.output)&&(this.output instanceof ut?this.output.dispose():Es(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function In(...s){const t=s.shift();s.reduce((e,n)=>(e instanceof ut?e.connect(n):Es(e)&&dn(e,n),n),t)}function dn(s,t,e=0,n=0){for(bt(Lt(s),"Cannot connect from undefined node"),bt(Lt(t),"Cannot connect to undefined node"),(t instanceof ut||Es(t))&&bt(t.numberOfInputs>0,"Cannot connect to node with no inputs"),bt(s.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof ut||t instanceof Dt;)Lt(t.input)&&(t=t.input);for(;s instanceof ut;)Lt(s.output)&&(s=s.output);ar(t)?s.connect(t,e):s.connect(t,e,n)}function Ed(s,t,e=0,n=0){if(Lt(t))for(;t instanceof ut;)t=t.input;for(;!Es(s);)Lt(s.output)&&(s=s.output);ar(t)?s.disconnect(t,e):Es(t)?s.disconnect(t,e,n):s.disconnect()}class xt extends ut{constructor(){super(V(xt.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=V(xt.getDefaults(),arguments,["gain","units"]);this.gain=new Dt({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Tt(this,"gain")}static getDefaults(){return Object.assign(ut.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class uo extends ut{constructor(t){super(t),this.onended=Ut,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new xt({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const n=this.toSeconds(e);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(ut.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Ut})}_startGain(t,e=1){bt(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){bt(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?2*e:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Ut&&(this.onended(this),this.onended=Ut,!this.context.isOffline)){const t=()=>this.dispose();window.requestIdleCallback!==void 0?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),bt(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Ut,this}}class Aa extends uo{constructor(){super(V(Aa.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=V(Aa.getDefaults(),arguments,["offset"]);dn(this._source,this._gainNode),this.offset=new Dt({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(uo.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Et extends ut{constructor(){super(V(Et.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=V(Et.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new Aa({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(ut.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return Wa(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,i){return this._param.setValueCurveAtTime(t,e,n,i),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function Wa(s,t,e,n){(t instanceof Dt||ar(t)||t instanceof Et&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof Et&&(t.overridden=!0)),dn(s,t,e,n)}class lc extends Dt{constructor(){super(V(lc.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new Rn(1/0),this._multiplier=1;const t=V(lc.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Dt.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const i=this._fromType(t),r=this._events.get(e),o=Math.round(Math.max(1/n,1));for(let a=0;a<=o;a++){const l=n*a+e,c=this._exponentialApproach(r.time,r.value,i,n,l);this.linearRampToValueAtTime(this._toType(c),l)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),i=this._events.get(e),r=Math.round(Math.max(10*(e-i.time),1)),o=(e-i.time)/r;for(let a=0;a<=r;a++){const l=o*a+i.time,c=this._exponentialInterpolate(i.time,i.value,e,n,l);this.linearRampToValueAtTime(this._toType(c),l)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(un(t.ticks)){const o=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(o,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let i=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+i)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),i=this.getTicksAtTime(e);return this.getTimeOfTick(i+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&n.type==="linearRampToValueAtTime"&&e.value!==n.value){const i=this._fromType(this.getValueAtTime(e.time)),r=(this._fromType(this.getValueAtTime(n.time))-i)/(n.time-e.time),o=Math.sqrt(Math.pow(i,2)-2*r*(e.ticks-t)),a=(-i+o)/r;return(a>0?a:(-i-o)/r)+e.time}return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),i=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+i)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class cc extends Et{constructor(){super(V(cc.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=V(cc.getDefaults(),arguments,["value"]);this.input=this._param=new lc({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(Et.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class hc extends Xe{constructor(){super(V(hc.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new jo,this._tickOffset=new Rn,this._ticksAtTime=new Rn,this._secondsAtTime=new Rn;const t=V(hc.getDefaults(),arguments,["frequency"]);this.frequency=new cc({context:this.context,units:t.units,value:t.frequency}),Tt(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Xe.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),Lt(e)&&this.setTicksAtTime(e,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const n=this._state.get(e);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),i=this._ticksAtTime.get(e),r={state:"paused",time:e};this._state.add(r);let o=i||n,a=i?i.ticks:0,l=null;return this._state.forEachBetween(o.time,e+this.sampleTime,c=>{let h=o.time;const u=this._tickOffset.get(c.time);u&&u.time>=o.time&&(a=u.ticks,h=u.time),o.state==="started"&&c.state!=="started"&&(a+=this.frequency.getTicksAtTime(c.time)-this.frequency.getTicksAtTime(h),c.time!=r.time&&(l={state:c.state,time:c.time,ticks:a})),o=c}),this._state.remove(r),l&&this._ticksAtTime.add(l),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);const i=this._secondsAtTime.get(t);let r=i||e,o=i?i.seconds:0,a=null;return this._state.forEachBetween(r.time,t+this.sampleTime,l=>{let c=r.time;const h=this._tickOffset.get(l.time);h&&h.time>=r.time&&(o=h.seconds,c=h.time),r.state==="started"&&l.state!=="started"&&(o+=l.time-c,l.time!=n.time&&(a={state:l.state,time:l.time,seconds:o})),r=l}),this._state.remove(n),a&&this._secondsAtTime.add(a),o}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),i=this._state.get(e),r=Math.max(n.time,i.time),o=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,n){let i=this._state.get(t);this._state.forEachBetween(t,e,o=>{i&&i.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(i.time,t),o.time-this.sampleTime,n),i=o});let r=null;if(i&&i.state==="started"){const o=Math.max(i.time,t),a=this.frequency.getTicksAtTime(o),l=a-this.frequency.getTicksAtTime(i.time);let c=Math.ceil(l)-l;c=ni(c,1)?0:c;let h=this.frequency.getTimeOfTick(a+c);for(;h<e;){try{n(h,Math.round(this.getTicksAtTime(h)))}catch(u){r=u;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class lr extends Xe{constructor(){super(V(lr.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=Ut,this._lastUpdate=0,this._state=new jo("stopped"),this._boundLoop=this._loop.bind(this);const t=V(lr.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new hc({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Tt(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Xe.getDefaults(),{callback:Ut,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){yd(this.context);const n=this.toSeconds(t);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),i=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(i+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,n=>{switch(n.state){case"started":const i=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,i);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time)}}),this._tickSource.forEachTickBetween(t,e,(n,i)=>{this.callback(n,i)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Go.mixin(lr);class xn extends ut{constructor(){super(V(xn.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const t=V(xn.getDefaults(),arguments,["delayTime","maxDelay"]),e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new Dt({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),Tt(this,"delayTime")}static getDefaults(){return Object.assign(ut.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}class Xo extends ls{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=V(Xo.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Ut,onload:Ut,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return bt(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,n=Ut,i=Ut){return ui(e)?(this.baseUrl&&e.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(t.toString(),new Ht(this.baseUrl+e,n,i))):this._buffers.set(t.toString(),new Ht(e,n,i)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class po extends hn{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(t){return Ss(super._frequencyToUnits(t))}_ticksToUnits(t){return Ss(super._ticksToUnits(t))}_beatsToUnits(t){return Ss(super._beatsToUnits(t))}_secondsToUnits(t){return Ss(super._secondsToUnits(t))}toMidi(){return this.valueOf()}toFrequency(){return Md(this.toMidi())}transpose(t){return new po(this.context,this.toMidi()+t)}}class pe extends Re{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}let OS=class extends Xe{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Rn,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(s,t){return this._events.add({callback:s,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(s){return this._events.cancel(this.toSeconds(s)),this}_drawLoop(){const s=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=s;){const t=this._events.shift();t&&s-t.time<=this.expiration&&t.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}};_h(s=>{s.draw=new OS({context:s})}),vh(s=>{s.draw.dispose()});class Xg extends ls{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){bt(Lt(t.time),"Events must have a time property"),bt(Lt(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new FS(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{let e,n=null;if(t.getBalance()>0)if(t.left.right===null)e=t.left,e.right=t.right,n=e;else{for(e=t.left.right;e.right!==null;)e=e.right;e.parent&&(e.parent.right=e.left,n=e.parent,e.left=t.left,e.right=t.right)}else if(t.right.left===null)e=t.right,e.left=t.left,n=e;else{for(e=t.right.left;e.left!==null;)e=e.left;e.parent&&(e.parent.left=e.right,n=e.parent,e.left=t.left,e.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=e:t.parent.right=e:this._setRoot(e),n&&this._rebalance(n)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),i=t.right;i&&(t.right=i.left,i.left=t),e!==null?n?e.left=i:e.right=i:this._setRoot(i)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),i=t.left;i&&(t.left=i.right,i.right=t),e!==null?n?e.left=i:e.right=i:this._setRoot(i)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let n=e[0];for(let i=1;i<e.length;i++)e[i].low>n.low&&(n=e[i]);return n.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(n=>e.push(n)),e.forEach(n=>{n.event&&t(n.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const n=[];this._root.search(t,n),n.forEach(i=>{i.event&&e(i.event)})}return this}forEachFrom(t,e){if(this._root!==null){const n=[];this._root.searchAfter(t,n),n.forEach(i=>{i.event&&e(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class FS{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),this.low>t||this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}const NS=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));class Ai extends ut{constructor(){super(V(Ai.getDefaults(),arguments,["volume"])),this.name="Volume";const t=V(Ai.getDefaults(),arguments,["volume"]);this.input=this.output=new xt({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,Tt(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(ut.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}let kS=class Iu extends ut{constructor(){super(V(Iu.getDefaults(),arguments)),this.name="Destination",this.input=new Ai({context:this.context}),this.output=new xt({context:this.context}),this.volume=this.input.volume;const t=V(Iu.getDefaults(),arguments);In(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(ut.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),In(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}};_h(s=>{s.destination=new kS({context:s})}),vh(s=>{s.destination.dispose()});class US extends ls{constructor(t){super(),this.name="TimelineValue",this._timeline=new Rn({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Ln extends ut{constructor(){super(Object.assign(V(Ln.getDefaults(),arguments,["context"])))}connect(t,e=0,n=0){return Wa(this,t,e,n),this}}class Gn extends Ln{constructor(){super(Object.assign(V(Gn.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=V(Gn.getDefaults(),arguments,["mapping","length"]);Ze(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):zg(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(Et.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let i=0,r=e;i<r;i++){const o=i/(r-1)*2-1;n[i]=t(o,i)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){bt(["none","2x","4x"].some(e=>e.includes(t)),"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class cr extends Ln{constructor(){super(Object.assign(V(cr.getDefaults(),arguments,["value"]))),this.name="Pow";const t=V(cr.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new Gn({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Ln.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Cs{constructor(t,e){this.id=Cs._eventId++,this._remainderTime=0;const n=Object.assign(Cs.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:Ut,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}Cs._eventId=0;class Ad extends Cs{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(Ad.getDefaults(),e);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Cs.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return oc(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new pe(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){oc(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new pe(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);ao(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}let Bm=class Lu extends Xe{constructor(){super(V(Lu.getDefaults(),arguments)),this.name="Transport",this._loop=new US(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Rn,this._repeatedEvents=new Xg,this._syncedSignals=[],this._swingAmount=0;const t=V(Lu.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new lr({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Tt(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(Xe.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(2*this._swingTicks)!=0){const n=e%(2*this._swingTicks)/(2*this._swingTicks),i=Math.sin(n*Math.PI)*this._swingAmount;t+=new pe(this.context,2*this._swingTicks/3).toSeconds()*i}Du(!0),this._timeline.forEachAtTime(e,n=>n.invoke(t)),Du(!1)}schedule(t,e){const n=new Cs(this,{callback:t,time:new Re(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,i=1/0){const r=new Ad(this,{callback:t,duration:new Cn(this.context,i).toTicks(),interval:new Cn(this.context,e).toTicks(),time:new Re(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new Cs(this,{callback:t,once:!0,time:new Re(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(e,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new pe(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){let n;return this.context.resume(),Lt(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Ze(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Cn(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Cn(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new pe(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new pe(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(e),i=e+this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e);this.emit("stop",i),this._clock.setTicksAtTime(t,i),this.emit("start",i,this._clock.getSecondsAtTime(i))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),n=t-this.getTicksAtTime(e)%t;return this._clock.nextTickTime(n,e)}}syncSignal(t,e){const n=this.now();let i=this.bpm,r=1/(60/i.getValueAtTime(n)/this.PPQ),o=[];if(t.units==="time"){const l=.015625/r,c=new xt(l),h=new cr(-1),u=new xt(l);i.chain(c,h,u),i=u,r=1/r,o=[c,h,u]}e||(e=t.getValueAtTime(n)!==0?t.getValueAtTime(n)/r:0);const a=new xt(e);return i.connect(a),a.connect(t._param),o.push(a),this._syncedSignals.push({initial:t.value,nodes:o,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.nodes.forEach(i=>i.dispose()),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Va(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}};Go.mixin(Bm),_h(s=>{s.transport=new Bm({context:s})}),vh(s=>{s.transport.dispose()});class be extends ut{constructor(t){super(t),this.input=void 0,this._state=new jo("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Ut,this._syncedStop=Ut,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Ai({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Tt(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(ut.getDefaults(),{mute:!1,onstop:Ut,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let i=un(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(i=this._clampToCurrentTime(i),this._synced||this._state.getValueAtTime(i)!=="started")if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(Vn(e,0)),r.duration=n?this.toSeconds(n):void 0);const o=this.context.transport.schedule(a=>{this._start(a,e,n)},i);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else yd(this.context),this._start(i,e,n);else bt(ao(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,e,n);return this}stop(t){let e=un(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||Lt(this._state.getNextState("started",e))){if(this.log("stop",e),this._synced){const n=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(n)}else this._stop(e);this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(ao(e,0)){const n=this._state.get(e);if(n&&n.state==="started"&&n.time!==e){const i=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-i),this._start(t,this.toSeconds(n.offset)+i,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Ut,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class is extends uo{constructor(){super(V(is.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=V(is.getDefaults(),arguments,["url","onload"]);dn(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Dt({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new Ht(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(uo.getDefaults(),{url:new Ht,loop:!1,loopEnd:0,loopStart:0,onload:Ut,onerror:Ut,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,i=1){bt(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,i),e=this.loop?Vn(e,this.loopStart):Vn(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,l=this.toSeconds(this.loopStart),c=a-l;Pu(o,a)&&(o=(o-l)%c+l),ni(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,oc(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),Lt(n)){let a=this.toSeconds(n);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class ss extends be{constructor(){super(V(ss.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const t=V(ss.getDefaults(),arguments,["type"]);this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(be.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(bt(t in Vm,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,this.state==="started")){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=Vm[this._type];this._source=new is({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const Br=220500,Xi={brown:null,pink:null,white:null},Vm={get brown(){if(!Xi.brown){const s=[];for(let t=0;t<2;t++){const e=new Float32Array(Br);s[t]=e;let n=0;for(let i=0;i<Br;i++){const r=2*Math.random()-1;e[i]=(n+.02*r)/1.02,n=e[i],e[i]*=3.5}}Xi.brown=new Ht().fromArray(s)}return Xi.brown},get pink(){if(!Xi.pink){const s=[];for(let t=0;t<2;t++){const e=new Float32Array(Br);let n,i,r,o,a,l,c;s[t]=e,n=i=r=o=a=l=c=0;for(let h=0;h<Br;h++){const u=2*Math.random()-1;n=.99886*n+.0555179*u,i=.99332*i+.0750759*u,r=.969*r+.153852*u,o=.8665*o+.3104856*u,a=.55*a+.5329522*u,l=-.7616*l-.016898*u,e[h]=n+i+r+o+a+l+c+.5362*u,e[h]*=.11,c=.115926*u}}Xi.pink=new Ht().fromArray(s)}return Xi.pink},get white(){if(!Xi.white){const s=[];for(let t=0;t<2;t++){const e=new Float32Array(Br);s[t]=e;for(let n=0;n<Br;n++)e[n]=2*Math.random()-1}Xi.white=new Ht().fromArray(s)}return Xi.white}};class Hr extends ut{constructor(){super(V(Hr.getDefaults(),arguments,["volume"])),this.name="UserMedia";const t=V(Hr.getDefaults(),arguments,["volume"]);this._volume=this.output=new Ai({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Tt(this,"volume"),this.mute=t.mute}static getDefaults(){return Object.assign(ut.getDefaults(),{mute:!1,volume:0})}open(t){return ee(this,void 0,void 0,function*(){bt(Hr.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const e=yield Hr.enumerateDevices();Pn(t)?this._device=e[t]:(this._device=e.find(r=>r.label===t||r.deviceId===t),!this._device&&e.length>0&&(this._device=e[0]),bt(Lt(this._device),`No matching device ${t}`));const n={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(n.audio.deviceId=this._device.deviceId);const i=yield navigator.mediaDevices.getUserMedia(n);if(!this._stream){this._stream=i;const r=this.context.createMediaStreamSource(i);dn(r,this.output),this._mediaStream=r}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(t=>{t.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return ee(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(t=>t.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){return this._device?this._device.deviceId:void 0}get groupId(){return this._device?this._device.groupId:void 0}get label(){return this._device?this._device.label:void 0}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return Lt(navigator.mediaDevices)&&Lt(navigator.mediaDevices.getUserMedia)}}function vr(s,t){return ee(this,void 0,void 0,function*(){const e=t/s.context.sampleRate,n=new lo(1,e,s.context.sampleRate);return new s.constructor(Object.assign(s.get(),{frequency:2/e,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class mo extends uo{constructor(){super(V(mo.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=V(mo.getDefaults(),arguments,["frequency","type"]);dn(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new Dt({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new Dt({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),Tt(this,["frequency","detune"])}static getDefaults(){return Object.assign(uo.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class se extends be{constructor(){super(V(se.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=V(se.getDefaults(),arguments,["frequency","type"]);this.frequency=new Et({context:this.context,units:"frequency",value:t.frequency}),Tt(this,"frequency"),this.detune=new Et({context:this.context,units:"cents",value:t.detune}),Tt(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(be.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new mo({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return se._periodicWaveCache.find(t=>{return t.phase===this._phase&&(e=t.partials,n=this._partials,e.length===n.length&&e.every((i,r)=>n[r]===i));var e,n});{const t=se._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const n=this._getCachedPeriodicWave();if(Lt(n)){const{partials:i,wave:r}=n;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(t,this._phase),o=this.context.createPeriodicWave(i,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),se._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),se._periodicWaveCache.length>100&&se._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Ye(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),this._type!=="custom")this.type=t===0?e:e+t.toString();else{const i=new Float32Array(t);this._partials.forEach((r,o)=>i[o]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(t,e){let n=2048;const i=new Float32Array(n),r=new Float32Array(n);let o=1;if(t==="custom"){if(o=this._partials.length+1,this._partialCount=this._partials.length,n=o,this._partials.length===0)return[i,r]}else{const a=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);a?(o=parseInt(a[2],10)+1,this._partialCount=parseInt(a[2],10),t=a[1],o=Math.max(o,2),n=o):this._partialCount=0,this._partials=[]}for(let a=1;a<n;++a){const l=2/(a*Math.PI);let c;switch(t){case"sine":c=a<=o?1:0,this._partials[a-1]=c;break;case"square":c=1&a?2*l:0,this._partials[a-1]=c;break;case"sawtooth":c=l*(1&a?1:-1),this._partials[a-1]=c;break;case"triangle":c=1&a?l*l*2*(a-1>>1&1?-1:1):0,this._partials[a-1]=c;break;case"custom":c=this._partials[a-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}c!==0?(i[a]=-c*Math.sin(e*a),r[a]=c*Math.cos(e*a)):(i[a]=0,r[a]=0)}return[i,r]}_inverseFFT(t,e,n){let i=0;const r=t.length;for(let o=0;o<r;o++)i+=t[o]*Math.cos(o*n)+e[o]*Math.sin(o*n);return i}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const i=2*Math.PI;for(let r=0;r<32;r++)n=Math.max(this._inverseFFT(t,e,r/32*i),n);return _r(-this._inverseFFT(t,e,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return ee(this,void 0,void 0,function*(){return vr(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}se._periodicWaveCache=[];class yh extends Ln{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new Gn({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class he extends Et{constructor(){super(Object.assign(V(he.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=V(he.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new xt({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Et.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class fo extends be{constructor(){super(V(fo.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new yh({context:this.context}),this._modulationNode=new xt({context:this.context});const t=V(fo.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new se({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new se({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new he({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Tt(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(se.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return ee(this,void 0,void 0,function*(){return vr(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class hr extends be{constructor(){super(V(hr.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new xt({context:this.context,gain:0});const t=V(hr.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new se({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new Et({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new se({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new he({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new he({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Tt(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(se.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return ee(this,void 0,void 0,function*(){return vr(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class ur extends be{constructor(){super(V(ur.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new xt({context:this.context,gain:0}),this._thresh=new Gn({context:this.context,mapping:e=>e<=0?-1:1});const t=V(ur.getDefaults(),arguments,["frequency","width"]);this.width=new Et({context:this.context,units:"audioRange",value:t.width}),this._triangle=new se({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Tt(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(be.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return ee(this,void 0,void 0,function*(){return vr(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class go extends be{constructor(){super(V(go.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=V(go.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Et({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Et({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Tt(this,["frequency","detune"])}static getDefaults(){return Object.assign(se.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=e+n*r)}}get count(){return this._oscillators.length}set count(t){if(Ye(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const n=new se({context:this.context,volume:-6-1.1*t,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):Ut});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,n)=>e.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(t=1024){return ee(this,void 0,void 0,function*(){return vr(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class _o extends be{constructor(){super(V(_o.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new he({context:this.context,value:2});const t=V(_o.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new ur({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new se({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Tt(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(be.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return ee(this,void 0,void 0,function*(){return vr(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const qm={am:fo,fat:go,fm:hr,oscillator:se,pulse:ur,pwm:_o};class Ci extends be{constructor(){super(V(Ci.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=V(Ci.getDefaults(),arguments,["frequency","type"]);this.frequency=new Et({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Et({context:this.context,units:"cents",value:t.detune}),Tt(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(se.getDefaults(),hr.getDefaults(),fo.getDefaults(),go.getDefaults(),ur.getDefaults(),_o.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=qm[t],n=this.now();if(this._oscillator){const i=this._oscillator;i.stop(n),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof qm[e]}get baseType(){return this._oscillator.baseType}set baseType(t){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||t==="pulse"||t==="pwm"||(this._oscillator.baseType=t)}get width(){return this._getOscType(this._oscillator,"pulse")?this._oscillator.width:void 0}get count(){return this._getOscType(this._oscillator,"fat")?this._oscillator.count:void 0}set count(t){this._getOscType(this._oscillator,"fat")&&Pn(t)&&(this._oscillator.count=t)}get spread(){return this._getOscType(this._oscillator,"fat")?this._oscillator.spread:void 0}set spread(t){this._getOscType(this._oscillator,"fat")&&Pn(t)&&(this._oscillator.spread=t)}get modulationType(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.modulationType:void 0}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&ui(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){return this._getOscType(this._oscillator,"fm")?this._oscillator.modulationIndex:void 0}get harmonicity(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.harmonicity:void 0}get modulationFrequency(){return this._getOscType(this._oscillator,"pwm")?this._oscillator.modulationFrequency:void 0}asArray(t=1024){return ee(this,void 0,void 0,function*(){return vr(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class yr extends Et{constructor(){super(Object.assign(V(yr.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new xt({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,In(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Et.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class Ri extends Ln{constructor(){super(Object.assign(V(Ri.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=V(Ri.getDefaults(),arguments,["min","max"]);this._mult=this.input=new he({context:this.context,value:t.max-t.min}),this._add=this.output=new yr({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Ln.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class xh extends Ln{constructor(){super(Object.assign(V(xh.getDefaults(),arguments))),this.name="Zero",this._gain=new xt({context:this.context}),this.output=this._gain,this.input=void 0,dn(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),Ed(this.context.getConstant(0),this._gain),this}}class tn extends ut{constructor(){super(V(tn.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Dt.prototype._fromType,this._toType=Dt.prototype._toType,this._is=Dt.prototype._is,this._clampValue=Dt.prototype._clampValue;const t=V(tn.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new se(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new xt({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Et({context:this.context,units:"audioRange",value:0}),this._zeros=new xh({context:this.context}),this._a2g=new yh({context:this.context}),this._scaler=this.output=new Ri({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),Tt(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(se.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,n=this.max;this._units=t,this.min=e,this.max=n}get state(){return this._oscillator.state}connect(t,e,n){return(t instanceof Dt||t instanceof Et)&&(this.convert=t.convert,this.units=t.units),Wa(this,t,e,n),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function Yg(s,t=1/0){const e=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Ye(r,s,t),e.set(this,r)}})}}function es(s,t=1/0){const e=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Ye(this.toSeconds(r),s,t),e.set(this,r)}})}}class dr extends be{constructor(){super(V(dr.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=V(dr.getDefaults(),arguments,["url","onload"]);this._buffer=new Ht({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(be.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Ut,onerror:Ut,playbackRate:1,reverse:!1})}load(t){return ee(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=Ut){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size!==0||this._synced||this._state.getValueAtTime(this.now())!=="started"||(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){e=this._loop?Vn(e,this._loopStart):Vn(e,0);const i=this.toSeconds(e),r=n;n=Vn(n,Math.max(this._buffer.duration-i,0));let o=this.toSeconds(n);o/=this._playbackRate,t=this.toSeconds(t);const a=new is({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);this._loop||this._synced||(this._state.cancel(t+o),this._state.setStateAtTime("stopped",t+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&un(r)?a.start(t,i):a.start(t,i,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(n=>n.stop(e))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){var i;(i=[...this._activeSources].pop())===null||i===void 0||i.stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if(this._state.getValueAtTime(n)==="started"){const i=this.toSeconds(t);this._stop(n),this._start(n,i)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Ye(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Ye(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}oi([es(0)],dr.prototype,"fadeIn",void 0),oi([es(0)],dr.prototype,"fadeOut",void 0);class uc extends ut{constructor(){super(V(uc.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const t=V(uc.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new Ai({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Tt(this,"volume"),this._buffers=new Xo({urls:t.urls,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.mute=t.mute,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(be.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:Ut,onerror:Ut,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._players.forEach(e=>{e.fadeIn=t})}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._players.forEach(e=>{e.fadeOut=t})}get state(){return Array.from(this._players).some(([t,e])=>e.state==="started")?"started":"stopped"}has(t){return this._buffers.has(t)}player(t){if(bt(this.has(t),`No Player with the name ${t} exists on this object`),!this._players.has(t)){const e=new dr({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(t)}).connect(this.output);this._players.set(t,e)}return this._players.get(t)}get loaded(){return this._buffers.loaded}add(t,e,n){return bt(!this._buffers.has(t),"A buffer with that name already exists on this object"),this._buffers.add(t,e,n),this}stopAll(t){return this._players.forEach(e=>e.stop(t)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(t=>t.dispose()),this._buffers.dispose(),this}}class dc extends be{constructor(){super(V(dc.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const t=V(dc.getDefaults(),arguments,["url","onload"]);this.buffer=new Ht({onload:t.onload,onerror:t.onerror,reverse:t.reverse,url:t.url}),this._clock=new lr({context:this.context,callback:this._tick.bind(this),frequency:1/t.grainSize}),this._playbackRate=t.playbackRate,this._grainSize=t.grainSize,this._overlap=t.overlap,this.detune=t.detune,this.overlap=t.overlap,this.loop=t.loop,this.playbackRate=t.playbackRate,this.grainSize=t.grainSize,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.reverse=t.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(be.getDefaults(),{onload:Ut,onerror:Ut,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(t,e,n){e=Vn(e,0),e=this.toSeconds(e),t=this.toSeconds(t);const i=1/this._clock.frequency.getValueAtTime(t);this._clock.start(t,e/i),n&&this.stop(t+this.toSeconds(n))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){this._stop(t),this._start(t,e,n)}_stop(t){this._clock.stop(t)}_onstop(t){this._activeSources.forEach(e=>{e.fadeOut=0,e.stop(t)}),this.onstop(this)}_tick(t){const e=this._clock.getTicksAtTime(t),n=e*this._grainSize;if(this.log("offset",n),!this.loop&&n>this.buffer.duration)return this.stop(t),void 0;const i=n<this._overlap?0:this._overlap,r=new is({context:this.context,url:this.buffer,fadeIn:i,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:ho(this.detune/100)}).connect(this.output);r.start(t,this._grainSize*e),r.stop(t+this._grainSize/this.playbackRate),this._activeSources.push(r),r.onended=()=>{const o=this._activeSources.indexOf(r);o!==-1&&this._activeSources.splice(o,1)}}get playbackRate(){return this._playbackRate}set playbackRate(t){Ye(t,.001),this._playbackRate=t,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(t){this.buffer.loaded&&Ye(this.toSeconds(t),0,this.buffer.duration),this._loopStart=this.toSeconds(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this.buffer.loaded&&Ye(this.toSeconds(t),0,this.buffer.duration),this._loopEnd=this.toSeconds(t)}get reverse(){return this.buffer.reverse}set reverse(t){this.buffer.reverse=t}get grainSize(){return this._grainSize}set grainSize(t){this._grainSize=this.toSeconds(t),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(t){const e=this.toSeconds(t);Ye(e,0),this._overlap=e}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(t=>t.dispose()),this}}class $g extends Ln{constructor(){super(...arguments),this.name="Abs",this._abs=new Gn({context:this.context,mapping:t=>Math.abs(t)<.001?0:Math.abs(t)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class Zg extends Ln{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new Gn({context:this.context,mapping:t=>2*Math.abs(t)-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Cd extends Ln{constructor(){super(...arguments),this.name="Negate",this._multiply=new he({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class xr extends Et{constructor(){super(Object.assign(V(xr.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new xt({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new Cd({context:this.context}),this.subtrahend=this._param,In(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(Et.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class wh extends Ln{constructor(){super(Object.assign(V(wh.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new Gn({context:this.context,length:127,mapping:t=>t<=0?0:1}),this._scale=this.input=new he({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class Ca extends Et{constructor(){super(Object.assign(V(Ca.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const t=V(Ca.getDefaults(),arguments,["value"]);this._subtract=this.input=new xr({context:this.context,value:t.value}),this._gtz=this.output=new wh({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,Tt(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(Et.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class Ra extends Ri{constructor(){super(Object.assign(V(Ra.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const t=V(Ra.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new cr({context:this.context,value:t.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(Ri.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(t){this._exp.value=t}dispose(){return super.dispose(),this._exp.dispose(),this}}class Ge extends ut{constructor(){super(V(Ge.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Et({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=V(Ge.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(ut.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(ui(t))return t;{let n;for(n in Dl)if(Dl[n][e]===t)return n;return t}}_setCurve(t,e,n){if(ui(n)&&Reflect.has(Dl,n)){const i=Dl[n];Ji(i)?t!=="_decayCurve"&&(this[t]=i[e]):this[t]=i}else{if(!Ze(n)||t==="_decayCurve")throw new Error("Envelope: invalid curve: "+n);this[t]=n}}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(t){this._setCurve("_decayCurve","Out",t)}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let n=this.toSeconds(this.attack);const i=this.toSeconds(this.decay),r=this.getValueAtTime(t);if(r>0&&(n=(1-r)/(1/n)),n<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,n,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,n,t);else{this._sig.cancelAndHoldAtTime(t);let o=this._attackCurve;for(let a=1;a<o.length;a++)if(o[a-1]<=r&&r<=o[a]){o=this._attackCurve.slice(a),o[0]=r;break}this._sig.setValueCurveAtTime(o,t,n,e)}if(i&&this.sustain<1){const o=e*this.sustain,a=t+n;this.log("decay",a),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(o,i+a):this._sig.exponentialApproachValueAtTime(o,a,i)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,t):(bt(Ze(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return Wa(this,t,e,n),this}asArray(t=1024){return ee(this,void 0,void 0,function*(){const e=t/this.context.sampleRate,n=new lo(1,e,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),o=.1*r,a=r+o,l=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:n}));return l._sig.toDestination(),l.triggerAttackRelease(e*(i+o)/a,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}oi([es(0)],Ge.prototype,"attack",void 0),oi([es(0)],Ge.prototype,"decay",void 0),oi([Yg(0,1)],Ge.prototype,"sustain",void 0),oi([es(0)],Ge.prototype,"release",void 0);const Dl=(()=>{let t,e;const n=[];for(t=0;t<128;t++)n[t]=Math.sin(t/127*(Math.PI/2));const i=[];for(t=0;t<127;t++){e=t/127;const h=Math.sin(e*(2*Math.PI)*6.4-Math.PI/2)+1;i[t]=h/10+.83*e}i[127]=1;const r=[];for(t=0;t<128;t++)r[t]=Math.ceil(t/127*5)/5;const o=[];for(t=0;t<128;t++)e=t/127,o[t]=.5*(1-Math.cos(Math.PI*e));const a=[];for(t=0;t<128;t++){e=t/127;const h=4*Math.pow(e,3)+.2,u=Math.cos(h*Math.PI*2*e);a[t]=Math.abs(u*(1-e))}function l(h){const u=new Array(h.length);for(let d=0;d<h.length;d++)u[d]=1-h[d];return u}return{bounce:{In:l(a),Out:a},cosine:{In:n,Out:(c=n,c.slice(0).reverse())},exponential:"exponential",linear:"linear",ripple:{In:i,Out:l(i)},sine:{In:o,Out:l(o)},step:{In:r,Out:l(r)}};var c})();class On extends ut{constructor(){super(V(On.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e);const t=V(On.getDefaults(),arguments);this._volume=this.output=new Ai({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Tt(this,"volume")}static getDefaults(){return Object.assign(ut.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...i)=>{const r=i[e],o=this.context.transport.schedule(a=>{i[e]=a,n.apply(this,i)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,n,i){const r=this.toSeconds(n),o=this.toSeconds(e);return this.triggerAttack(t,r,i),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class He extends On{constructor(){super(V(He.getDefaults(),arguments));const t=V(He.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(On.getDefaults(),{detune:0,onsilence:Ut,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const i=this.toSeconds(e);return this._triggerEnvelopeAttack(i,n),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),i=t instanceof hn?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,n)}else this.frequency.setValueAtTime(i,n);return this}}oi([es(0)],He.prototype,"portamento",void 0);class Yo extends Ge{constructor(){super(V(Yo.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new xt({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class di extends He{constructor(){super(V(di.getDefaults(),arguments)),this.name="Synth";const t=V(di.getDefaults(),arguments);this.oscillator=new Ci(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new Yo(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Tt(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(He.getDefaults(),{envelope:Object.assign($e(Ge.getDefaults(),Object.keys(ut.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign($e(Ci.getDefaults(),[...Object.keys(be.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class vo extends He{constructor(){super(V(vo.getDefaults(),arguments)),this.name="ModulationSynth";const t=V(vo.getDefaults(),arguments);this._carrier=new di({context:this.context,oscillator:t.oscillator,envelope:t.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new di({context:this.context,oscillator:t.modulation,envelope:t.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new Et({context:this.context,units:"frequency"}),this.detune=new Et({context:this.context,value:t.detune,units:"cents"}),this.harmonicity=new he({context:this.context,value:t.harmonicity,minValue:0}),this._modulationNode=new xt({context:this.context,gain:0}),Tt(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(He.getDefaults(),{harmonicity:3,oscillator:Object.assign($e(Ci.getDefaults(),[...Object.keys(be.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign($e(Ge.getDefaults(),Object.keys(ut.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign($e(Ci.getDefaults(),[...Object.keys(be.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign($e(Ge.getDefaults(),Object.keys(ut.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(t,e){this._carrier._triggerEnvelopeAttack(t,e),this._modulator._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this._carrier._triggerEnvelopeRelease(t),this._modulator._triggerEnvelopeRelease(t),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class Rd extends vo{constructor(){super(V(Rd.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new yh({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class yo extends ut{constructor(){super(V(yo.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const t=V(yo.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Dt({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new Dt({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new Dt({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new Dt({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(ut.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){bt(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let o=0;o<t;o++){const a=19980*Math.pow(o/t,2)+20;e[o]=a}const n=new Float32Array(t),i=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,n,i),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class vn extends ut{constructor(){super(V(vn.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new xt({context:this.context}),this.output=new xt({context:this.context}),this._filters=[];const t=V(vn.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Et({context:this.context,units:"positive",value:t.Q}),this.frequency=new Et({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Et({context:this.context,units:"cents",value:t.detune}),this.gain=new Et({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,Tt(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(ut.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){bt(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(e=>e.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const e=Pn(t)?t:parseInt(t,10),n=[-12,-24,-48,-96];let i=n.indexOf(e);bt(i!==-1,`rolloff can only be ${n.join(", ")}`),i+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(i);for(let r=0;r<i;r++){const o=new yo({context:this.context});o.type=this._type,this.frequency.connect(o.frequency),this.detune.connect(o.detune),this.Q.connect(o.Q),this.gain.connect(o.gain),this._filters[r]=o}this._internalChannels=this._filters,In(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new yo({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{e.getFrequencyResponse(t).forEach((i,r)=>n[r]*=i)}),e.dispose(),n}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),Va(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class xo extends Ge{constructor(){super(V(xo.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const t=V(xo.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=t.octaves,this._baseFrequency=this.toFrequency(t.baseFrequency),this._exponent=this.input=new cr({context:this.context,value:t.exponent}),this._scale=this.output=new Ri({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Ge.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){const e=this.toFrequency(t);Ye(e,0),this._baseFrequency=e,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._scale.max=this._baseFrequency*Math.pow(2,t)}get exponent(){return this._exponent.value}set exponent(t){this._exponent.value=t}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class Ms extends He{constructor(){super(V(Ms.getDefaults(),arguments)),this.name="MonoSynth";const t=V(Ms.getDefaults(),arguments);this.oscillator=new Ci(Object.assign(t.oscillator,{context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new vn(Object.assign(t.filter,{context:this.context})),this.filterEnvelope=new xo(Object.assign(t.filterEnvelope,{context:this.context})),this.envelope=new Yo(Object.assign(t.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),Tt(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(He.getDefaults(),{envelope:Object.assign($e(Ge.getDefaults(),Object.keys(ut.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign($e(vn.getDefaults(),Object.keys(ut.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign($e(xo.getDefaults(),Object.keys(ut.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign($e(Ci.getDefaults(),Object.keys(be.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(t,e=1){if(this.envelope.triggerAttack(t,e),this.filterEnvelope.triggerAttack(t),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.filterEnvelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class pc extends He{constructor(){super(V(pc.getDefaults(),arguments)),this.name="DuoSynth";const t=V(pc.getDefaults(),arguments);this.voice0=new Ms(Object.assign(t.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new Ms(Object.assign(t.voice1,{context:this.context})),this.harmonicity=new he({context:this.context,units:"positive",value:t.harmonicity}),this._vibrato=new tn({frequency:t.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new xt({context:this.context,units:"normalRange",gain:t.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new Et({context:this.context,units:"frequency",value:440}),this.detune=new Et({context:this.context,units:"cents",value:t.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),Tt(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(t){return t=this.toSeconds(t),this.voice0.envelope.getValueAtTime(t)+this.voice1.envelope.getValueAtTime(t)}static getDefaults(){return Bn(He.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:Bn($e(Ms.getDefaults(),Object.keys(He.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:Bn($e(Ms.getDefaults(),Object.keys(He.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(t,e){this.voice0._triggerEnvelopeAttack(t,e),this.voice1._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this.voice0._triggerEnvelopeRelease(t),this.voice1._triggerEnvelopeRelease(t),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class mc extends vo{constructor(){super(V(mc.getDefaults(),arguments)),this.name="FMSynth";const t=V(mc.getDefaults(),arguments);this.modulationIndex=new he({context:this.context,value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(vo.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const Wm=[1,1.483,1.932,2.546,2.63,3.897];class fc extends He{constructor(){super(V(fc.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const t=V(fc.getDefaults(),arguments);this.detune=new Et({context:this.context,units:"cents",value:t.detune}),this.frequency=new Et({context:this.context,units:"frequency"}),this._amplitude=new xt({context:this.context,gain:0}).connect(this.output),this._highpass=new vn({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let e=0;e<Wm.length;e++){const n=new hr({context:this.context,harmonicity:t.harmonicity,modulationIndex:t.modulationIndex,modulationType:"square",onstop:e===0?()=>this.onsilence(this):Ut,type:"square"});n.connect(this._highpass),this._oscillators[e]=n;const i=new he({context:this.context,value:Wm[e]});this._freqMultipliers[e]=i,this.frequency.chain(i,n.frequency),this.detune.connect(n.detune)}this._filterFreqScaler=new Ri({context:this.context,max:7e3,min:this.toFrequency(t.resonance)}),this.envelope=new Ge({attack:t.envelope.attack,attackCurve:"linear",context:this.context,decay:t.envelope.decay,release:t.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=t.octaves,this.octaves=t.octaves}static getDefaults(){return Bn(He.getDefaults(),{envelope:Object.assign($e(Ge.getDefaults(),Object.keys(ut.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(t,e=1){return this.envelope.triggerAttack(t,e),this._oscillators.forEach(n=>n.start(t)),this.envelope.sustain===0&&this._oscillators.forEach(n=>{n.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(t){return this.envelope.triggerRelease(t),this._oscillators.forEach(e=>e.stop(t+this.toSeconds(this.envelope.release))),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(t){this._oscillators.forEach(e=>e.modulationIndex.value=t)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(t){this._oscillators.forEach(e=>e.harmonicity.value=t)}get resonance(){return this._filterFreqScaler.min}set resonance(t){this._filterFreqScaler.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,t)}dispose(){return super.dispose(),this._oscillators.forEach(t=>t.dispose()),this._freqMultipliers.forEach(t=>t.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class Rs extends di{constructor(){super(V(Rs.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=V(Rs.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Tt(this,["oscillator","envelope"])}static getDefaults(){return Bn(He.getDefaults(),di.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),i=this.toFrequency(t instanceof hn?t.toFrequency():t),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(i,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}oi([Yg(0)],Rs.prototype,"octaves",void 0),oi([es(0)],Rs.prototype,"pitchDecay",void 0);class wo extends On{constructor(){super(V(wo.getDefaults(),arguments)),this.name="NoiseSynth";const t=V(wo.getDefaults(),arguments);this.noise=new ss(Object.assign({context:this.context},t.noise)),this.envelope=new Yo(Object.assign({context:this.context},t.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(On.getDefaults(),{envelope:Object.assign($e(Ge.getDefaults(),Object.keys(ut.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign($e(ss.getDefaults(),Object.keys(be.getDefaults())),{type:"white"})})}triggerAttack(t,e=1){return t=this.toSeconds(t),this.envelope.triggerAttack(t,e),this.noise.start(t),this.envelope.sustain===0&&this.noise.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(t){return t=this.toSeconds(t),this.envelope.triggerRelease(t),this.noise.stop(t+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),t=this.toSeconds(t),this.triggerAttack(e,n),this.triggerRelease(e+t),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const Dd=new Set;function Pd(s){Dd.add(s)}function Kg(s,t){const e=`registerProcessor("${s}", ${t})`;Dd.add(e)}class Ou extends ut{constructor(t){super(t),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=Ut;const e=URL.createObjectURL(new Blob([Array.from(Dd).join(`
`)],{type:"text/javascript"})),n=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(e).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(n,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}Pd(`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`);Pd(`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`);Pd(`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`);const Qg="feedback-comb-filter";Kg(Qg,`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`);class bo extends Ou{constructor(){super(V(bo.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const t=V(bo.getDefaults(),arguments,["delayTime","resonance"]);this.input=new xt({context:this.context}),this.output=new xt({context:this.context}),this.delayTime=new Dt({context:this.context,value:t.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new Dt({context:this.context,value:t.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),Tt(this,["resonance","delayTime"])}_audioWorkletName(){return Qg}static getDefaults(){return Object.assign(ut.getDefaults(),{delayTime:.1,resonance:.5})}onReady(t){In(this.input,t,this.output);const e=t.parameters.get("delayTime");this.delayTime.setParam(e);const n=t.parameters.get("feedback");this.resonance.setParam(n)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class So extends ut{constructor(){super(V(So.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const t=V(So.getDefaults(),arguments,["frequency","type"]);this._frequency=t.frequency,this._type=t.type,this.input=new xt({context:this.context}),this.output=new xt({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(ut.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const t=this._filter,e=this.toFrequency(this._frequency),n=1/(2*Math.PI*e);if(this._type==="lowpass"){const i=1/(n*this.context.sampleRate),r=i-1;this._filter=this.context.createIIRFilter([i,0],[1,r])}else{const i=1/(n*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,i])}this.input.chain(this._filter,this.output),t&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(t),t.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(t){this._frequency=t,this._createFilter()}get type(){return this._type}set type(t){this._type=t,this._createFilter()}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let r=0;r<t;r++){const o=19980*Math.pow(r/t,2)+20;e[r]=o}const n=new Float32Array(t),i=new Float32Array(t);return this._filter.getFrequencyResponse(e,n,i),n}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class Mo extends ut{constructor(){super(V(Mo.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const t=V(Mo.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new bo({context:this.context,delayTime:t.delayTime,resonance:t.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new So({context:this.context,frequency:t.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(ut.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(t){this._lowpass.frequency=t}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class gc extends On{constructor(){super(V(gc.getDefaults(),arguments)),this.name="PluckSynth";const t=V(gc.getDefaults(),arguments);this._noise=new ss({context:this.context,type:"pink"}),this.attackNoise=t.attackNoise,this._lfcf=new Mo({context:this.context,dampening:t.dampening,resonance:t.resonance}),this.resonance=t.resonance,this.release=t.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return Bn(On.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(t){this._lfcf.dampening=t}triggerAttack(t,e){const n=this.toFrequency(t);e=this.toSeconds(e);const i=1/n;return this._lfcf.delayTime.setValueAtTime(i,e),this._noise.start(e),this._noise.stop(e+i*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(e),this._lfcf.resonance.setValueAtTime(this.resonance,e),this}triggerRelease(t){return this._lfcf.resonance.linearRampTo(0,this.release,t),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class _c extends On{constructor(){super(V(_c.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=i=>this.releaseAll(i);const t=V(_c.getDefaults(),arguments,["voice","options"]);bt(!Pn(t.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const e=t.voice.getDefaults();this.options=Object.assign(e,t.options),this.voice=t.voice,this.maxPolyphony=t.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const n=this._voices.indexOf(this._dummyVoice);this._voices.splice(n,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(On.getDefaults(),{maxPolyphony:32,options:{},voice:di})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(t){this._availableVoices.push(t);const e=this._activeVoices.findIndex(n=>n.voice===t);this._activeVoices.splice(e,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const t=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return bt(t instanceof He,"Voice must extend Monophonic class"),t.connect(this.output),this._voices.push(t),t}Wo("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(.95*this._averageActiveVoices,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const t=this._availableVoices.shift(),e=this._voices.indexOf(t);this._voices.splice(e,1),this.context.isOffline||t.dispose()}}_triggerAttack(t,e,n){t.forEach(i=>{const r=new po(this.context,i).toMidi(),o=this._getNextAvailableVoice();o&&(o.triggerAttack(i,e,n),this._activeVoices.push({midi:r,voice:o,released:!1}),this.log("triggerAttack",i,e))})}_triggerRelease(t,e){t.forEach(n=>{const i=new po(this.context,n).toMidi(),r=this._activeVoices.find(({midi:o,released:a})=>o===i&&!a);r&&(r.voice.triggerRelease(e),r.released=!0,this.log("triggerRelease",n,e))})}_scheduleEvent(t,e,n,i){bt(!this.disposed,"Synth was already disposed"),n<=this.now()?t==="attack"?this._triggerAttack(e,n,i):this._triggerRelease(e,n):this.context.setTimeout(()=>{this.disposed||this._scheduleEvent(t,e,n,i)},n-this.now())}triggerAttack(t,e,n){Array.isArray(t)||(t=[t]);const i=this.toSeconds(e);return this._scheduleEvent("attack",t,i,n),this}triggerRelease(t,e){Array.isArray(t)||(t=[t]);const n=this.toSeconds(e);return this._scheduleEvent("release",t,n),this}triggerAttackRelease(t,e,n,i){const r=this.toSeconds(n);if(this.triggerAttack(t,r,i),Ze(e)){bt(Ze(t),"If the duration is an array, the notes must also be an array");for(let o=0;o<t.length;o++){const a=e[Math.min(o,e.length-1)],l=this.toSeconds(a);bt(l>0,"The duration must be greater than 0"),this.triggerRelease(t[o],r+l)}}else{const o=this.toSeconds(e);bt(o>0,"The duration must be greater than 0"),this.triggerRelease(t,r+o)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(t){const e=$e(t,["onsilence","context"]);return this.options=Bn(this.options,e),this._voices.forEach(n=>n.set(e)),this._dummyVoice.set(e),this}get(){return this._dummyVoice.get()}releaseAll(t){const e=this.toSeconds(t);return this._activeVoices.forEach(({voice:n})=>{n.triggerRelease(e)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(t=>t.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class To extends On{constructor(){super(V(To.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=V(To.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach(n=>{const i=parseInt(n,10);if(bt(ma(n)||Pn(i)&&isFinite(i),`url key is neither a note or midi pitch: ${n}`),ma(n)){const r=new hn(this.context,n).toMidi();e[r]=t.urls[n]}else Pn(i)&&isFinite(i)&&(e[i]=t.urls[i])}),this._buffers=new Xo({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(On.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Ut,onerror:Ut,release:.1,urls:{}})}_findClosest(t){let e=0;for(;e<96;){if(this._buffers.has(t+e))return-e;if(this._buffers.has(t-e))return e;e++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach(i=>{const r=jg(new hn(this.context,i).toFrequency()),o=Math.round(r),a=r-o,l=this._findClosest(o),c=o-l,h=this._buffers.get(c),u=ho(l+a),d=new is({url:h,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);d.start(e,0,h.duration/u,n),Ze(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(d),d.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const p=this._activeSources.get(o),f=p.indexOf(d);f!==-1&&p.splice(f,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(n=>{const i=new hn(this.context,n).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);e=this.toSeconds(e),r.forEach(o=>{o.stop(e)}),this._activeSources.set(i,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,i=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,i),Ze(e)?(bt(Ze(t),"notes must be an array when duration is array"),t.forEach((o,a)=>{const l=e[Math.min(a,e.length-1)];this.triggerRelease(o,r+this.toSeconds(l))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(bt(ma(t)||isFinite(t),`note must be a pitch or midi: ${t}`),ma(t)){const i=new hn(this.context,t).toMidi();this._buffers.add(i,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}oi([es(0)],To.prototype,"attack",void 0),oi([es(0)],To.prototype,"release",void 0);class ai extends Xe{constructor(){super(V(ai.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new jo("stopped"),this._startOffset=0;const t=V(ai.getDefaults(),arguments,["callback","value"]);this._loop=t.loop,this.callback=t.callback,this.value=t.value,this._loopStart=this.toTicks(t.loopStart),this._loopEnd=this.toTicks(t.loopEnd),this._playbackRate=t.playbackRate,this._probability=t.probability,this._humanize=t.humanize,this.mute=t.mute,this._playbackRate=t.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(Xe.getDefaults(),{callback:Ut,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(t=-1){this._state.forEachFrom(t,e=>{let n;if(e.state==="started"){e.id!==-1&&this.context.transport.clear(e.id);const i=e.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||Pn(this._loop)&&this._loop>1){n=1/0,Pn(this._loop)&&(n=this._loop*this._getLoopDuration());const r=this._state.getAfter(i);r!==null&&(n=Math.min(n,r.time-i)),n!==1/0&&(n=new pe(this.context,n));const o=new pe(this.context,this._getLoopDuration());e.id=this.context.transport.scheduleRepeat(this._tick.bind(this),o,new pe(this.context,i),n)}else e.id=this.context.transport.schedule(this._tick.bind(this),new pe(this.context,i))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t}get probability(){return this._probability}set probability(t){this._probability=t}get humanize(){return this._humanize}set humanize(t){this._humanize=t}start(t){const e=this.toTicks(t);return this._state.getValueAtTime(e)==="stopped"&&(this._state.add({id:-1,state:"started",time:e}),this._rescheduleEvents(e)),this}stop(t){this.cancel(t);const e=this.toTicks(t);if(this._state.getValueAtTime(e)==="started"){this._state.setStateAtTime("stopped",e,{id:-1});const n=this._state.getBefore(e);let i=e;n!==null&&(i=n.time),this._rescheduleEvents(i)}return this}cancel(t){t=Vn(t,-1/0);const e=this.toTicks(t);return this._state.forEachFrom(e,n=>{this.context.transport.clear(n.id)}),this._state.cancel(e),this}_tick(t){const e=this.context.transport.getTicksAtTime(t);if(!this.mute&&this._state.getValueAtTime(e)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let n=.02;vd(this.humanize)||(n=this.toSeconds(this.humanize)),t+=(2*Math.random()-1)*n}this.callback(t,this.value)}}_getLoopDuration(){return(this._loopEnd-this._loopStart)/this._playbackRate}get loop(){return this._loop}set loop(t){this._loop=t,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._rescheduleEvents()}get loopEnd(){return new pe(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._rescheduleEvents()}get loopStart(){return new pe(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const t=this.context.transport.ticks,e=this._state.get(t);if(e!==null&&e.state==="started"){const n=this._getLoopDuration();return(t-e.time)%n/n}return 0}return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Eo extends Xe{constructor(){super(V(Eo.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const t=V(Eo.getDefaults(),arguments,["callback","interval"]);this._event=new ai({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:t.interval,playbackRate:t.playbackRate,probability:t.probability}),this.callback=t.callback,this.iterations=t.iterations}static getDefaults(){return Object.assign(Xe.getDefaults(),{interval:"4n",callback:Ut,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(t){return this._event.start(t),this}stop(t){return this._event.stop(t),this}cancel(t){return this._event.cancel(t),this}_tick(t){this.callback(t)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(t){this._event.loopEnd=t}get playbackRate(){return this._event.playbackRate}set playbackRate(t){this._event.playbackRate=t}get humanize(){return this._event.humanize}set humanize(t){this._event.humanize=t}get probability(){return this._event.probability}set probability(t){this._event.probability=t}get mute(){return this._event.mute}set mute(t){this._event.mute=t}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(t){this._event.loop=t===1/0||t}dispose(){return super.dispose(),this._event.dispose(),this}}class Zr extends ai{constructor(){super(V(Zr.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new jo("stopped"),this._events=new Set;const t=V(Zr.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,t.events.forEach(e=>{Ze(e)?this.add(e[0],e[1]):this.add(e)})}static getDefaults(){return Object.assign(ai.getDefaults(),{events:[]})}start(t,e){const n=this.toTicks(t);if(this._state.getValueAtTime(n)!=="started"){e=Vn(e,this._loop?this._loopStart:0),e=this._loop?Vn(e,this._loopStart):Vn(e,0);const i=this.toTicks(e);this._state.add({id:-1,offset:i,state:"started",time:n}),this._forEach(r=>{this._startNote(r,n,i)})}return this}_startNote(t,e,n){e-=n,this._loop?t.startOffset>=this._loopStart&&t.startOffset<this._loopEnd?(t.startOffset<n&&(e+=this._getLoopDuration()),t.start(new pe(this.context,e))):t.startOffset<this._loopStart&&t.startOffset>=n&&(t.loop=!1,t.start(new pe(this.context,e))):t.startOffset>=n&&t.start(new pe(this.context,e))}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t,this._forEach(e=>{e.startOffset+=this._startOffset})}stop(t){const e=this.toTicks(t);return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._forEach(n=>{n.stop(t)}),this}at(t,e){const n=new Re(this.context,t).toTicks(),i=new pe(this.context,1).toSeconds(),r=this._events.values();let o=r.next();for(;!o.done;){const a=o.value;if(Math.abs(n-a.startOffset)<i)return Lt(e)&&(a.value=e),a;o=r.next()}return Lt(e)?(this.add(t,e),this.at(t)):null}add(t,e){t instanceof Object&&Reflect.has(t,"time")&&(t=(e=t).time);const n=this.toTicks(t);let i;return e instanceof ai?(i=e,i.callback=this._tick.bind(this)):i=new ai({callback:this._tick.bind(this),context:this.context,value:e}),i.startOffset=n,i.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(i),this._restartEvent(i),this}_restartEvent(t){this._state.forEach(e=>{e.state==="started"?this._startNote(t,e.time,e.offset):t.stop(new pe(this.context,e.time))})}remove(t,e){return Ji(t)&&t.hasOwnProperty("time")&&(t=(e=t).time),t=this.toTicks(t),this._events.forEach(n=>{n.startOffset===t&&(un(e)||Lt(e)&&n.value===e)&&(this._events.delete(n),n.dispose())}),this}clear(){return this._forEach(t=>t.dispose()),this._events.clear(),this}cancel(t){return this._forEach(e=>e.cancel(t)),this._state.cancel(this.toTicks(t)),this}_forEach(t){return this._events&&this._events.forEach(e=>{e instanceof Zr?e._forEach(t):t(e)}),this}_setAll(t,e){this._forEach(n=>{n[t]=e})}_tick(t,e){this.mute||this.callback(t,e)}_testLoopBoundries(t){this._loop&&(t.startOffset<this._loopStart||t.startOffset>=this._loopEnd)?t.cancel(0):t.state==="stopped"&&this._restartEvent(t)}get probability(){return this._probability}set probability(t){this._probability=t,this._setAll("probability",t)}get humanize(){return this._humanize}set humanize(t){this._humanize=t,this._setAll("humanize",t)}get loop(){return this._loop}set loop(t){this._loop=t,this._forEach(e=>{e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.loop=t,this._testLoopBoundries(e)})}get loopEnd(){return new pe(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._forEach(e=>{e.loopEnd=t,this._testLoopBoundries(e)})}get loopStart(){return new pe(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._forEach(e=>{e.loopStart=this.loopStart,this._testLoopBoundries(e)})}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._setAll("playbackRate",t)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*zS(s){let t=0;for(;t<s;)t=_r(t,0,s-1),yield t,t++}function*BS(s){let t=s-1;for(;t>=0;)t=_r(t,0,s-1),yield t,t--}function*ua(s,t){for(;;)yield*t(s)}function*Gm(s,t){let e=t?0:s-1;for(;;)e=_r(e,0,s-1),yield e,t?(e++,e>=s-1&&(t=!1)):(e--,e<=0&&(t=!0))}function*VS(s){let t=0,e=0;for(;t<s;)t=_r(t,0,s-1),yield t,e++,t+=e%2?2:-1}function*qS(s){let t=s-1,e=0;for(;t>=0;)t=_r(t,0,s-1),yield t,e++,t+=e%2?-2:1}function*WS(s){const t=[];for(let e=0;e<s;e++)t.push(e);for(;t.length>0;)yield _r(t.splice(Math.floor(t.length*Math.random()),1)[0],0,s-1)}function*Hm(s,t="up",e=0){switch(bt(s>=1,"The number of values must be at least one"),t){case"up":yield*ua(s,zS);case"down":yield*ua(s,BS);case"upDown":yield*Gm(s,!0);case"downUp":yield*Gm(s,!1);case"alternateUp":yield*ua(s,VS);case"alternateDown":yield*ua(s,qS);case"random":yield*function*(n){for(;;)yield Math.floor(Math.random()*n)}(s);case"randomOnce":yield*ua(s,WS);case"randomWalk":yield*function*(n){let i=Math.floor(Math.random()*n);for(;;)i===0?i++:i===n-1||Math.random()<.5?i--:i++,yield i}(s)}}class vc extends Eo{constructor(){super(V(vc.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const t=V(vc.getDefaults(),arguments,["callback","values","pattern"]);this.callback=t.callback,this._values=t.values,this._pattern=Hm(t.values.length,t.pattern),this._type=t.pattern}static getDefaults(){return Object.assign(Eo.getDefaults(),{pattern:"up",values:[],callback:Ut})}_tick(t){const e=this._pattern.next();this._index=e.value,this._value=this._values[e.value],this.callback(t,this._value)}get values(){return this._values}set values(t){this._values=t,this.pattern=this._type}get value(){return this._value}get index(){return this._index}get pattern(){return this._type}set pattern(t){this._type=t,this._pattern=Hm(this._values.length,this._type)}}class yc extends ai{constructor(){super(V(yc.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new Zr({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const t=V(yc.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(t.subdivision),this.events=t.events,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.playbackRate=t.playbackRate,this.probability=t.probability,this.humanize=t.humanize,this.mute=t.mute,this.playbackRate=t.playbackRate}static getDefaults(){return Object.assign($e(ai.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(t,e){e===null||this.mute||this.callback(t,e)}get events(){return this._events}set events(t){this.clear(),this._eventsArray=t,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(t,e){return this._part.start(t,e&&this._indexTime(e)),this}stop(t){return this._part.stop(t),this}get subdivision(){return new pe(this.context,this._subdivision).toSeconds()}_createSequence(t){return new Proxy(t,{get:(e,n)=>e[n],set:(e,n,i)=>(ui(n)&&isFinite(parseInt(n,10))&&Ze(i)?e[n]=this._createSequence(i):e[n]=i,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(t,e,n){t.forEach((i,r)=>{const o=r*e+n;if(Ze(i))this._rescheduleSequence(i,e/i.length,o);else{const a=new pe(this.context,o,"i").toSeconds();this._part.add(a,i)}})}_indexTime(t){return new pe(this.context,t*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(t){this._part.loop=t}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this._part.loopStart=this._indexTime(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this._part.loopEnd=t===0?this._indexTime(this._eventsArray.length):this._indexTime(t)}get startOffset(){return this._part.startOffset}set startOffset(t){this._part.startOffset=t}get playbackRate(){return this._part.playbackRate}set playbackRate(t){this._part.playbackRate=t}get probability(){return this._part.probability}set probability(t){this._part.probability=t}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(t){this._part.humanize=t}get length(){return this._part.length}}class pr extends ut{constructor(){super(Object.assign(V(pr.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new Zg({context:this.context}),this.a=new xt({context:this.context,gain:0}),this.b=new xt({context:this.context,gain:0}),this.output=new xt({context:this.context}),this._internalChannels=[this.a,this.b];const t=V(pr.getDefaults(),arguments,["fade"]);this.fade=new Et({context:this.context,units:"normalRange",value:t.fade}),Tt(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",dn(this._split,this.a.gain,0),dn(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(ut.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Ue extends ut{constructor(t){super(t),this.name="Effect",this._dryWet=new pr({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new xt({context:this.context}),this.effectReturn=new xt({context:this.context}),this.input=new xt({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Tt(this,"wet")}static getDefaults(){return Object.assign(ut.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class xc extends Ue{constructor(t){super(t),this.name="LFOEffect",this._lfo=new tn({context:this.context,frequency:t.frequency,amplitude:t.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=t.type,Tt(this,["frequency","depth"])}static getDefaults(){return Object.assign(Ue.getDefaults(),{frequency:1,type:"sine",depth:1})}start(t){return this._lfo.start(t),this}stop(t){return this._lfo.stop(t),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class wc extends xc{constructor(){super(V(wc.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const t=V(wc.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new vn(Object.assign(t.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=t.octaves,this.baseFrequency=t.baseFrequency}static getDefaults(){return Object.assign(xc.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(t){this._lfo.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._lfo.max=this._lfo.min*Math.pow(2,t)}dispose(){return super.dispose(),this.filter.dispose(),this}}class Ao extends ut{constructor(){super(Object.assign(V(Ao.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=V(Ao.getDefaults(),arguments,["pan"]);this.pan=new Dt({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",Tt(this,"pan")}static getDefaults(){return Object.assign(ut.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class bc extends xc{constructor(){super(V(bc.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const t=V(bc.getDefaults(),arguments,["frequency"]);this._panner=new Ao({context:this.context,channelCount:t.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(xc.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class Co extends ut{constructor(){super(V(Co.getDefaults(),arguments,["smoothing"])),this.name="Follower";const t=V(Co.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new $g({context:this.context}),this._lowpass=this.output=new So({context:this.context,frequency:1/this.toSeconds(t.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=t.smoothing}static getDefaults(){return Object.assign(ut.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(t){this._smoothing=t,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class Sc extends Ue{constructor(){super(V(Sc.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const t=V(Sc.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new Co({context:this.context,smoothing:t.follower}),this._sweepRange=new Ra({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this._inputBoost=new xt({context:this.context}),this._bandpass=new vn({context:this.context,rolloff:-48,frequency:0,Q:t.Q}),this._peaking=new vn({context:this.context,type:"peaking"}),this._peaking.gain.value=t.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=t.sensitivity,Tt(this,["gain","Q"])}static getDefaults(){return Object.assign(Ue.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(t){this._follower.smoothing=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._setSweepRange()}get sensitivity(){return qa(1/this._inputBoost.gain.value)}set sensitivity(t){this._inputBoost.gain.value=1/co(t)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const Jg="bit-crusher";Kg(Jg,`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`);class Mc extends Ue{constructor(){super(V(Mc.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const t=V(Mc.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new Tc({context:this.context,bits:t.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(Ue.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class Tc extends Ou{constructor(){super(V(Tc.getDefaults(),arguments)),this.name="BitCrusherWorklet";const t=V(Tc.getDefaults(),arguments);this.input=new xt({context:this.context}),this.output=new xt({context:this.context}),this.bits=new Dt({context:this.context,value:t.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(Ou.getDefaults(),{bits:12})}_audioWorkletName(){return Jg}onReady(t){In(this.input,t,this.output);const e=t.parameters.get("bits");this.bits.setParam(e)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class Ec extends Ue{constructor(){super(V(Ec.getDefaults(),arguments,["order"])),this.name="Chebyshev";const t=V(Ec.getDefaults(),arguments,["order"]);this._shaper=new Gn({context:this.context,length:4096}),this._order=t.order,this.connectEffect(this._shaper),this.order=t.order,this.oversample=t.oversample}static getDefaults(){return Object.assign(Ue.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(t,e,n){return n.has(e)||(e===0?n.set(e,0):e===1?n.set(e,t):n.set(e,2*t*this._getCoefficient(t,e-1,n)-this._getCoefficient(t,e-2,n))),n.get(e)}get order(){return this._order}set order(t){bt(Number.isInteger(t),"'order' must be an integer"),this._order=t,this._shaper.setMap(e=>this._getCoefficient(e,t,new Map))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Ds extends ut{constructor(){super(V(Ds.getDefaults(),arguments,["channels"])),this.name="Split";const t=V(Ds.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(ut.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class rs extends ut{constructor(){super(V(rs.getDefaults(),arguments,["channels"])),this.name="Merge";const t=V(rs.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(ut.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class Di extends ut{constructor(t){super(t),this.name="StereoEffect",this.input=new xt({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new pr({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new Ds({context:this.context,channels:2}),this._merge=new rs({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),Tt(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),In(...t),dn(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),In(...t),dn(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(ut.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class Fu extends Di{constructor(t){super(t),this.feedback=new Et({context:this.context,value:t.feedback,units:"normalRange"}),this._feedbackL=new xt({context:this.context}),this._feedbackR=new xt({context:this.context}),this._feedbackSplit=new Ds({context:this.context,channels:2}),this._feedbackMerge=new rs({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),Tt(this,["feedback"])}static getDefaults(){return Object.assign(Di.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Ac extends Fu{constructor(){super(V(Ac.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const t=V(Ac.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new tn({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new tn({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new xn({context:this.context}),this._delayNodeR=new xn({context:this.context}),this.frequency=this._lfoL.frequency,Tt(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(Fu.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const e=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-e,0),this._lfoL.max=this._delayTime+e,this._lfoR.min=Math.max(this._delayTime-e,0),this._lfoR.max=this._delayTime+e}get delayTime(){return 1e3*this._delayTime}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Cc extends Ue{constructor(){super(V(Cc.getDefaults(),arguments,["distortion"])),this.name="Distortion";const t=V(Cc.getDefaults(),arguments,["distortion"]);this._shaper=new Gn({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(Ue.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const e=100*t,n=Math.PI/180;this._shaper.setMap(i=>Math.abs(i)<.001?0:(3+e)*i*20*n/(Math.PI+e*Math.abs(i)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Rc extends Ue{constructor(t){super(t),this.name="FeedbackEffect",this._feedbackGain=new xt({context:this.context,gain:t.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,Tt(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Ue.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class Dc extends Rc{constructor(){super(V(Dc.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const t=V(Dc.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new xn({context:this.context,delayTime:t.delayTime,maxDelay:t.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),Tt(this,"delayTime")}static getDefaults(){return Object.assign(Rc.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class GS extends ut{constructor(t){super(t),this.name="PhaseShiftAllpass",this.input=new xt({context:this.context}),this.output=new xt({context:this.context}),this.offset90=new xt({context:this.context}),this._bank0=this._createAllPassFilterBank([.6923878,.9360654322959,.988229522686,.9987488452737]),this._bank1=this._createAllPassFilterBank([.4021921162426,.856171088242,.9722909545651,.9952884791278]),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),In(this.input,...this._bank0,this._oneSampleDelay,this.output),In(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(t){return t.map(e=>{const n=[[e*e,0,-1],[1,0,-e*e]];return this.context.createIIRFilter(n[0],n[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(t=>t.disconnect()),this._bank1.forEach(t=>t.disconnect()),this._oneSampleDelay.disconnect(),this}}class Pc extends Ue{constructor(){super(V(Pc.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const t=V(Pc.getDefaults(),arguments,["frequency"]);this.frequency=new Et({context:this.context,units:"frequency",value:t.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new mo({context:this.context,type:"sine"}),this._cosine=new se({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new he({context:this.context}),this._cosineMultiply=new he({context:this.context}),this._negate=new Cd({context:this.context}),this._add=new yr({context:this.context}),this._phaseShifter=new GS({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const e=this.immediate();this._sine.start(e),this._cosine.start(e)}static getDefaults(){return Object.assign(Ue.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const jm=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],Xm=[225,556,441,341];class Ic extends Di{constructor(){super(V(Ic.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const t=V(Ic.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new Et({context:this.context,value:t.roomSize,units:"normalRange"}),this._allpassFiltersL=Xm.map(e=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=e,n}),this._allpassFiltersR=Xm.map(e=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=e,n}),this._combFilters=jm.map((e,n)=>{const i=new Mo({context:this.context,dampening:t.dampening,delayTime:e});return n<jm.length/2?this.connectEffectLeft(i,...this._allpassFiltersL):this.connectEffectRight(i,...this._allpassFiltersR),this.roomSize.connect(i.resonance),i}),Tt(this,["roomSize"])}static getDefaults(){return Object.assign(Di.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(t){this._combFilters.forEach(e=>e.dampening=t)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(t=>t.disconnect()),this._allpassFiltersR.forEach(t=>t.disconnect()),this._combFilters.forEach(t=>t.dispose()),this.roomSize.dispose(),this}}const Ym=[.06748,.06404,.08212,.09004],HS=[.773,.802,.753,.733],jS=[347,113,37];class Lc extends Di{constructor(){super(V(Lc.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const t=V(Lc.getDefaults(),arguments,["roomSize"]);this.roomSize=new Et({context:this.context,value:t.roomSize,units:"normalRange"}),this._scaleRoomSize=new Ri({context:this.context,min:-.733,max:.197}),this._allpassFilters=jS.map(e=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=e,n}),this._feedbackCombFilters=Ym.map((e,n)=>{const i=new bo({context:this.context,delayTime:e});return this._scaleRoomSize.connect(i.resonance),i.resonance.value=HS[n],n<Ym.length/2?this.connectEffectLeft(...this._allpassFilters,i):this.connectEffectRight(...this._allpassFilters,i),i}),this.roomSize.connect(this._scaleRoomSize),Tt(this,["roomSize"])}static getDefaults(){return Object.assign(Di.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(t=>t.disconnect()),this._feedbackCombFilters.forEach(t=>t.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class $m extends Fu{constructor(t){super(t),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),Tt(this,["feedback"])}}class Oc extends $m{constructor(){super(V(Oc.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const t=V(Oc.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new xn({context:this.context,maxDelay:t.maxDelay}),this._rightDelay=new xn({context:this.context,maxDelay:t.maxDelay}),this._rightPreDelay=new xn({context:this.context,maxDelay:t.maxDelay}),this.delayTime=new Et({context:this.context,units:"time",value:t.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),Tt(this,["delayTime"])}static getDefaults(){return Object.assign($m.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class Fc extends Rc{constructor(){super(V(Fc.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const t=V(Fc.getDefaults(),arguments,["pitch"]);this._frequency=new Et({context:this.context}),this._delayA=new xn({maxDelay:1,context:this.context}),this._lfoA=new tn({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new xn({maxDelay:1,context:this.context}),this._lfoB=new tn({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new pr({context:this.context}),this._crossFadeLFO=new tn({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new xn({delayTime:t.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,Tt(this,"delayTime"),this._pitch=t.pitch,this._windowSize=t.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const e=this.now();this._lfoA.start(e),this._lfoB.start(e),this._crossFadeLFO.start(e),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(Rc.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(t){this._pitch=t;let e=0;t<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,e=ho(t-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,e=ho(t)-1),this._frequency.value=e*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(t){this._windowSize=this.toSeconds(t),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Nc extends Di{constructor(){super(V(Nc.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const t=V(Nc.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new tn({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new tn({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this.Q=new Et({context:this.context,value:t.Q,units:"positive"}),this._filtersL=this._makeFilters(t.stages,this._lfoL),this._filtersR=this._makeFilters(t.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=t.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=t.baseFrequency,this.octaves=t.octaves,this._lfoL.start(),this._lfoR.start(),Tt(this,["frequency","Q"])}static getDefaults(){return Object.assign(Di.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(t,e){const n=[];for(let i=0;i<t;i++){const r=this.context.createBiquadFilter();r.type="allpass",this.Q.connect(r.Q),e.connect(r.frequency),n.push(r)}return n}get octaves(){return this._octaves}set octaves(t){this._octaves=t;const e=this._baseFrequency*Math.pow(2,t);this._lfoL.max=e,this._lfoR.max=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(t=>t.disconnect()),this._filtersR.forEach(t=>t.disconnect()),this.frequency.dispose(),this}}class kc extends Ue{constructor(){super(V(kc.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const t=V(kc.getDefaults(),arguments,["decay"]);this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Ue.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){Ye(t=this.toSeconds(t),.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){Ye(t=this.toSeconds(t),0),this._preDelay=t,this.generate()}generate(){return ee(this,void 0,void 0,function*(){const t=this.ready,e=new lo(2,this._decay+this._preDelay,this.context.sampleRate),n=new ss({context:e}),i=new ss({context:e}),r=new rs({context:e});n.connect(r,0,0),i.connect(r,0,1);const o=new xt({context:e}).toDestination();r.connect(o),n.start(0),i.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=e.render();return this.ready=a.then(Ut),yield t,this._convolver.buffer=(yield a).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class Ga extends ut{constructor(){super(V(Ga.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new Ds({channels:2,context:this.context}),this._midAdd=new yr({context:this.context}),this.mid=new he({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new xr({context:this.context}),this.side=new he({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class Ha extends ut{constructor(){super(V(Ha.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new xt({context:this.context}),this.side=new xt({context:this.context}),this._left=new yr({context:this.context}),this._leftMult=new he({context:this.context,value:Math.SQRT1_2}),this._right=new xr({context:this.context}),this._rightMult=new he({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new rs({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class Zm extends Ue{constructor(t){super(t),this.name="MidSideEffect",this._midSideMerge=new Ha({context:this.context}),this._midSideSplit=new Ga({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...t){this._midSend.chain(...t,this._midReturn)}connectEffectSide(...t){this._sideSend.chain(...t,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class Uc extends Zm{constructor(){super(V(Uc.getDefaults(),arguments,["width"])),this.name="StereoWidener";const t=V(Uc.getDefaults(),arguments,["width"]);this.width=new Et({context:this.context,value:t.width,units:"normalRange"}),Tt(this,["width"]),this._twoTimesWidthMid=new he({context:this.context,value:2}),this._twoTimesWidthSide=new he({context:this.context,value:2}),this._midMult=new he({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new xr({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),dn(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new he({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(Zm.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class zc extends Di{constructor(){super(V(zc.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const t=V(zc.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new tn({context:this.context,type:t.type,min:1,max:0}),this._lfoR=new tn({context:this.context,type:t.type,min:1,max:0}),this._amplitudeL=new xt({context:this.context}),this._amplitudeR=new xt({context:this.context}),this.frequency=new Et({context:this.context,value:t.frequency,units:"frequency"}),this.depth=new Et({context:this.context,value:t.depth,units:"normalRange"}),Tt(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=t.spread}static getDefaults(){return Object.assign(Di.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Bc extends Ue{constructor(){super(V(Bc.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const t=V(Bc.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new xn({context:this.context,delayTime:0,maxDelay:t.maxDelay}),this._lfo=new tn({context:this.context,type:t.type,min:0,max:t.maxDelay,frequency:t.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=t.depth,Tt(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(Ue.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Ro extends ut{constructor(){super(V(Ro.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const t=V(Ro.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new xt({context:this.context}),this._split=new Ds({context:this.context,channels:t.channels}),this.input.connect(this._split),Ye(t.channels,1);for(let e=0;e<t.channels;e++)this._analysers[e]=this.context.createAnalyser(),this._split.connect(this._analysers[e],e,0);this.size=t.size,this.type=t.type,this.smoothing=t.smoothing}static getDefaults(){return Object.assign(ut.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((t,e)=>{const n=this._buffers[e];this._type==="fft"?t.getFloatFrequencyData(n):this._type==="waveform"&&t.getFloatTimeDomainData(n)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(t){this._analysers.forEach((e,n)=>{e.fftSize=2*t,this._buffers[n]=new Float32Array(t)})}get channels(){return this._analysers.length}get type(){return this._type}set type(t){bt(t==="waveform"||t==="fft",`Analyser: invalid type: ${t}`),this._type=t}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(t){this._analysers.forEach(e=>e.smoothingTimeConstant=t)}dispose(){return super.dispose(),this._analysers.forEach(t=>t.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class Ps extends ut{constructor(){super(V(Ps.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new Ro({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Vc extends Ps{constructor(){super(V(Vc.getDefaults(),arguments,["smoothing"])),this.name="Meter";const t=V(Vc.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new Ro({context:this.context,size:256,type:"waveform",channels:t.channelCount}),this.smoothing=t.smoothing,this.normalRange=t.normalRange,this._rms=new Array(t.channelCount),this._rms.fill(0)}static getDefaults(){return Object.assign(Ps.getDefaults(),{smoothing:.8,normalRange:!1,channelCount:1})}getLevel(){return Wo("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const t=this._analyser.getValue(),e=(this.channels===1?[t]:t).map((n,i)=>{const r=n.reduce((a,l)=>a+l*l,0),o=Math.sqrt(r/n.length);return this._rms[i]=Math.max(o,this._rms[i]*this.smoothing),this.normalRange?this._rms[i]:qa(this._rms[i])});return this.channels===1?e[0]:e}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class qc extends Ps{constructor(){super(V(qc.getDefaults(),arguments,["size"])),this.name="FFT";const t=V(qc.getDefaults(),arguments,["size"]);this.normalRange=t.normalRange,this._analyser.type="fft",this.size=t.size}static getDefaults(){return Object.assign(ut.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(t=>this.normalRange?co(t):t)}get size(){return this._analyser.size}set size(t){this._analyser.size=t}get smoothing(){return this._analyser.smoothing}set smoothing(t){this._analyser.smoothing=t}getFrequencyOfIndex(t){return bt(0<=t&&t<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),t*this.context.sampleRate/(2*this.size)}}class Id extends Ps{constructor(){super(V(Id.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Wc extends Ps{constructor(){super(V(Wc.getDefaults(),arguments,["size"])),this.name="Waveform";const t=V(Wc.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=t.size}static getDefaults(){return Object.assign(Ps.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(t){this._analyser.size=t}}class ve extends ut{constructor(){super(V(ve.getDefaults(),arguments,["solo"])),this.name="Solo";const t=V(ve.getDefaults(),arguments,["solo"]);this.input=this.output=new xt({context:this.context}),ve._allSolos.has(this.context)||ve._allSolos.set(this.context,new Set),ve._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(ut.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),ve._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){ve._soloed.has(this.context)||ve._soloed.set(this.context,new Set),ve._soloed.get(this.context).add(this)}_removeSolo(){ve._soloed.has(this.context)&&ve._soloed.get(this.context).delete(this)}_isSoloed(){return ve._soloed.has(this.context)&&ve._soloed.get(this.context).has(this)}_noSolos(){return!ve._soloed.has(this.context)||ve._soloed.has(this.context)&&ve._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()||this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),ve._allSolos.get(this.context).delete(this),this._removeSolo(),this}}ve._allSolos=new Map,ve._soloed=new Map;class Da extends ut{constructor(){super(V(Da.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=V(Da.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new Ao({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Ai({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Tt(this,["pan","volume"])}static getDefaults(){return Object.assign(ut.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class ys extends ut{constructor(){super(V(ys.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=V(ys.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new ve({solo:t.solo,context:this.context}),this._panVol=this.output=new Da({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Tt(this,["pan","volume"])}static getDefaults(){return Object.assign(ut.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return ys.buses.has(t)||ys.buses.set(t,new xt({context:this.context})),ys.buses.get(t)}send(t,e=0){const n=this._getBus(t),i=new xt({context:this.context,units:"decibels",gain:e});return this.connect(i),i.connect(n),i}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}ys.buses=new Map;class Ld extends ut{constructor(){super(V(Ld.getDefaults(),arguments)),this.name="Mono",this.input=new xt({context:this.context}),this._merge=this.output=new rs({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class Do extends ut{constructor(){super(V(Do.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new xt({context:this.context}),this.output=void 0,this.low=new vn({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new vn({context:this.context,frequency:0,type:"highpass"}),this.mid=new vn({context:this.context,frequency:0,type:"lowpass"}),this.high=new vn({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const t=V(Do.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new Et({context:this.context,units:"frequency",value:t.lowFrequency}),this.highFrequency=new Et({context:this.context,units:"frequency",value:t.highFrequency}),this.Q=new Et({context:this.context,units:"positive",value:t.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),Tt(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ut.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),Va(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}let XS=class extends ut{constructor(){super(...arguments),this.name="Listener",this.positionX=new Dt({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Dt({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Dt({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Dt({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Dt({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Dt({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Dt({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Dt({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Dt({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(ut.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}};_h(s=>{s.listener=new XS({context:s})}),vh(s=>{s.listener.dispose()});class Gc extends ut{constructor(){super(V(Gc.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const t=V(Gc.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=t.panningModel,this.maxDistance=t.maxDistance,this.distanceModel=t.distanceModel,this.coneOuterGain=t.coneOuterGain,this.coneOuterAngle=t.coneOuterAngle,this.coneInnerAngle=t.coneInnerAngle,this.refDistance=t.refDistance,this.rolloffFactor=t.rolloffFactor,this.positionX=new Dt({context:this.context,param:this._panner.positionX,value:t.positionX}),this.positionY=new Dt({context:this.context,param:this._panner.positionY,value:t.positionY}),this.positionZ=new Dt({context:this.context,param:this._panner.positionZ,value:t.positionZ}),this.orientationX=new Dt({context:this.context,param:this._panner.orientationX,value:t.orientationX}),this.orientationY=new Dt({context:this.context,param:this._panner.orientationY,value:t.orientationY}),this.orientationZ=new Dt({context:this.context,param:this._panner.orientationZ,value:t.orientationZ})}static getDefaults(){return Object.assign(ut.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(t,e,n){return this.positionX.value=t,this.positionY.value=e,this.positionZ.value=n,this}setOrientation(t,e,n){return this.orientationX.value=t,this.orientationY.value=e,this.orientationZ.value=n,this}get panningModel(){return this._panner.panningModel}set panningModel(t){this._panner.panningModel=t}get refDistance(){return this._panner.refDistance}set refDistance(t){this._panner.refDistance=t}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(t){this._panner.rolloffFactor=t}get distanceModel(){return this._panner.distanceModel}set distanceModel(t){this._panner.distanceModel=t}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(t){this._panner.coneInnerAngle=t}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(t){this._panner.coneOuterAngle=t}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(t){this._panner.coneOuterGain=t}get maxDistance(){return this._panner.maxDistance}set maxDistance(t){this._panner.maxDistance=t}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class ya extends ut{constructor(){super(V(ya.getDefaults(),arguments)),this.name="Recorder";const t=V(ya.getDefaults(),arguments);this.input=new xt({context:this.context}),bt(ya.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:t.mimeType})}static getDefaults(){return ut.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return ts!==null&&Reflect.has(ts,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return ee(this,void 0,void 0,function*(){bt(this.state!=="started","Recorder is already started");const t=new Promise(e=>{const n=()=>{this._recorder.removeEventListener("start",n,!1),e()};this._recorder.addEventListener("start",n,!1)});return this._recorder.start(),yield t})}stop(){return ee(this,void 0,void 0,function*(){bt(this.state!=="stopped","Recorder is not started");const t=new Promise(e=>{const n=i=>{this._recorder.removeEventListener("dataavailable",n,!1),e(i.data)};this._recorder.addEventListener("dataavailable",n,!1)});return this._recorder.stop(),yield t})}pause(){return bt(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class Ti extends ut{constructor(){super(V(Ti.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const t=V(Ti.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new Dt({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:t.threshold}),this.attack=new Dt({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:t.attack}),this.release=new Dt({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:t.release}),this.knee=new Dt({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:t.knee}),this.ratio=new Dt({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:t.ratio}),Tt(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(ut.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Hc extends ut{constructor(){super(Object.assign(V(Hc.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const t=V(Hc.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new Co({context:this.context,smoothing:t.smoothing}),this._gt=new Ca({context:this.context,value:co(t.threshold)}),this.input=new xt({context:this.context}),this._gate=this.output=new xt({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(ut.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return qa(this._gt.value)}set threshold(t){this._gt.value=co(t)}get smoothing(){return this._follower.smoothing}set smoothing(t){this._follower.smoothing=t}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class jc extends ut{constructor(){super(Object.assign(V(jc.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const t=V(jc.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new Ti({context:this.context,ratio:20,attack:.003,release:.01,threshold:t.threshold}),this.threshold=this._compressor.threshold,Tt(this,"threshold")}static getDefaults(){return Object.assign(ut.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class Xc extends ut{constructor(){super(Object.assign(V(Xc.getDefaults(),arguments))),this.name="MidSideCompressor";const t=V(Xc.getDefaults(),arguments);this._midSideSplit=this.input=new Ga({context:this.context}),this._midSideMerge=this.output=new Ha({context:this.context}),this.mid=new Ti(Object.assign(t.mid,{context:this.context})),this.side=new Ti(Object.assign(t.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),Tt(this,["mid","side"])}static getDefaults(){return Object.assign(ut.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class Yc extends ut{constructor(){super(Object.assign(V(Yc.getDefaults(),arguments))),this.name="MultibandCompressor";const t=V(Yc.getDefaults(),arguments);this._splitter=this.input=new Do({context:this.context,lowFrequency:t.lowFrequency,highFrequency:t.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new xt({context:this.context}),this.low=new Ti(Object.assign(t.low,{context:this.context})),this.mid=new Ti(Object.assign(t.mid,{context:this.context})),this.high=new Ti(Object.assign(t.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),Tt(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ut.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class $c extends ut{constructor(){super(V($c.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new xt({context:this.context}),this._internalChannels=[];const t=V($c.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new Do({context:this.context,highFrequency:t.highFrequency,lowFrequency:t.lowFrequency}),this._lowGain=new xt({context:this.context,gain:t.low,units:"decibels"}),this._midGain=new xt({context:this.context,gain:t.mid,units:"decibels"}),this._highGain=new xt({context:this.context,gain:t.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),Tt(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(ut.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),Va(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class Zc extends ut{constructor(){super(V(Zc.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const t=V(Zc.getDefaults(),arguments,["url","onload"]);this._buffer=new Ht(t.url,e=>{this.buffer=e,t.onload()}),this.input=new xt({context:this.context}),this.output=new xt({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=t.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(ut.getDefaults(),{normalize:!0,onload:Ut})}load(t){return ee(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(t)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(t){t&&this._buffer.set(t),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const e=this._buffer.get();this._convolver.buffer=e||null}get normalize(){return this._convolver.normalize}set normalize(t){this._convolver.normalize=t}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}const YS=ae().transport,$S=ae().destination,ZS=ae().destination,KS=ae().listener,QS=ae().draw,Po=ae(),JS=Ht,tM=Xo,eM=is,jr=Object.freeze(Object.defineProperty({__proto__:null,AMOscillator:fo,AMSynth:Rd,Abs:$g,Add:yr,AmplitudeEnvelope:Yo,Analyser:Ro,AudioToGain:yh,AutoFilter:wc,AutoPanner:bc,AutoWah:Sc,BaseContext:bd,BiquadFilter:yo,BitCrusher:Mc,Buffer:JS,BufferSource:eM,Buffers:tM,Channel:ys,Chebyshev:Ec,Chorus:Ac,Clock:lr,Compressor:Ti,Context:Ho,Convolver:Zc,CrossFade:pr,DCMeter:Id,Delay:xn,Destination:$S,Distortion:Cc,Draw:QS,DuoSynth:pc,EQ3:$c,Emitter:Go,Envelope:Ge,FFT:qc,FMOscillator:hr,FMSynth:mc,FatOscillator:go,FeedbackCombFilter:bo,FeedbackDelay:Dc,Filter:vn,Follower:Co,Freeverb:Ic,Frequency:function(s,t){return new hn(ae(),s,t)},FrequencyClass:hn,FrequencyEnvelope:xo,FrequencyShifter:Pc,Gain:xt,GainToAudio:Zg,Gate:Hc,GrainPlayer:dc,GreaterThan:Ca,GreaterThanZero:wh,IntervalTimeline:Xg,JCReverb:Lc,LFO:tn,Limiter:jc,Listener:KS,Loop:Eo,LowpassCombFilter:Mo,Master:ZS,MembraneSynth:Rs,Merge:rs,MetalSynth:fc,Meter:Vc,MidSideCompressor:Xc,MidSideMerge:Ha,MidSideSplit:Ga,Midi:function(s,t){return new po(ae(),s,t)},MidiClass:po,Mono:Ld,MonoSynth:Ms,MultibandCompressor:Yc,MultibandSplit:Do,Multiply:he,Negate:Cd,Noise:ss,NoiseSynth:wo,Offline:function(s,t,e=2,n=ae().sampleRate){return ee(this,void 0,void 0,function*(){const i=ae(),r=new lo(e,t,n);Gl(r),yield s(r);const o=r.render();Gl(i);const a=yield o;return new Ht(a)})},OfflineContext:lo,OmniOscillator:Ci,OnePoleFilter:So,Oscillator:se,PWMOscillator:_o,PanVol:Da,Panner:Ao,Panner3D:Gc,Param:Dt,Part:Zr,Pattern:vc,Phaser:Nc,PingPongDelay:Oc,PitchShift:Fc,Player:dr,Players:uc,PluckSynth:gc,PolySynth:_c,Pow:cr,PulseOscillator:ur,Recorder:ya,Reverb:kc,Sampler:To,Scale:Ri,ScaleExp:Ra,Sequence:yc,Signal:Et,Solo:ve,Split:Ds,StateTimeline:jo,StereoWidener:Uc,Subtract:xr,SyncedSignal:class extends Et{constructor(){super(V(Et.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const s=V(Et.getDefaults(),arguments,["value","units"]);this._lastVal=s.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new Aa({context:this.context,offset:s.value,units:s.units}).start(0),this.setValueAtTime(s.value,0)}_onTick(s){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==t&&(this._lastVal=t,this._constantSource.offset.setValueAtTime(t,s))}_anchorValue(s){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal=t,this._constantSource.offset.cancelAndHoldAtTime(s),this._constantSource.offset.setValueAtTime(t,s)}getValueAtTime(s){const t=new Re(this.context,s).toSeconds();return super.getValueAtTime(t)}setValueAtTime(s,t){const e=new Re(this.context,t).toSeconds();return super.setValueAtTime(s,e),this}linearRampToValueAtTime(s,t){const e=new Re(this.context,t).toSeconds();return super.linearRampToValueAtTime(s,e),this}exponentialRampToValueAtTime(s,t){const e=new Re(this.context,t).toSeconds();return super.exponentialRampToValueAtTime(s,e),this}setTargetAtTime(s,t,e){const n=new Re(this.context,t).toSeconds();return super.setTargetAtTime(s,n,e),this}cancelScheduledValues(s){const t=new Re(this.context,s).toSeconds();return super.cancelScheduledValues(t),this}setValueCurveAtTime(s,t,e,n){const i=new Re(this.context,t).toSeconds();return e=this.toSeconds(e),super.setValueCurveAtTime(s,i,e,n),this}cancelAndHoldAtTime(s){const t=new Re(this.context,s).toSeconds();return super.cancelAndHoldAtTime(t),this}setRampPoint(s){const t=new Re(this.context,s).toSeconds();return super.setRampPoint(t),this}exponentialRampTo(s,t,e){const n=new Re(this.context,e).toSeconds();return super.exponentialRampTo(s,t,n),this}linearRampTo(s,t,e){const n=new Re(this.context,e).toSeconds();return super.linearRampTo(s,t,n),this}targetRampTo(s,t,e){const n=new Re(this.context,e).toSeconds();return super.targetRampTo(s,t,n),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}},Synth:di,Ticks:function(s,t){return new pe(ae(),s,t)},TicksClass:pe,Time:function(s,t){return new Cn(ae(),s,t)},TimeClass:Cn,Timeline:Rn,ToneAudioBuffer:Ht,ToneAudioBuffers:Xo,ToneAudioNode:ut,ToneBufferSource:is,ToneEvent:ai,ToneOscillatorNode:mo,Transport:YS,TransportTime:function(s,t){return new Re(ae(),s,t)},TransportTimeClass:Re,Tremolo:zc,Unit:NS,UserMedia:Hr,Vibrato:Bc,Volume:Ai,WaveShaper:Gn,Waveform:Wc,Zero:xh,connect:dn,connectSeries:In,connectSignal:Wa,context:Po,dbToGain:co,debug:CS,defaultArg:Vn,disconnect:Ed,fanIn:function(...s){const t=s.pop();Lt(t)&&s.forEach(e=>dn(e,t))},ftom:Ss,gainToDb:qa,getContext:ae,getDestination:function(){return ae().destination},getDraw:function(){return ae().draw},getListener:function(){return ae().listener},getTransport:function(){return ae().transport},immediate:function(){return ae().immediate()},intervalToFrequencyRatio:ho,isArray:Ze,isBoolean:vd,isDefined:Lt,isFunction:zg,isNote:ma,isNumber:Pn,isObject:Ji,isString:ui,isUndef:un,loaded:function(){return Ht.loaded()},mtof:Md,now:function(){return ae().now()},optionsFromArguments:V,setContext:Gl,start:Sd,supported:()=>(async(s,t,e,n,i,r,o,a,l,c,h,u,d,p,f,g)=>s(t,t)&&s(e,e)&&s(i,i)&&s(r,r)&&s(a,a)&&s(l,l)&&s(c,c)&&s(h,h)&&s(u,u)&&s(d,d)&&s(p,p)?(await Promise.all([s(n,n),s(o,o),s(f,f),s(g,g)])).every(m=>m):!1)(Hn,(s=>()=>{if(s===null)return!1;const t=new s(1,1,44100).createBuffer(1,1,44100);if(t.copyToChannel===void 0)return!0;const e=new Float32Array(2);try{t.copyFromChannel(e,0,0)}catch{return!1}return!0})(qe),(s=>()=>{if(s===null)return!1;if(s.prototype!==void 0&&s.prototype.close!==void 0)return!0;const t=new s,e=t.close!==void 0;try{t.close()}catch{}return e})(Ts),(s=>()=>{if(s===null)return Promise.resolve(!1);const t=new s(1,1,44100);return new Promise(e=>{let n=!0;const i=o=>{n&&(n=!1,t.startRendering(),e(o instanceof TypeError))};let r;try{r=t.decodeAudioData(null,()=>{},i)}catch(o){i(o)}r!==void 0&&r.catch(i)})})(qe),(s=>()=>{if(s===null)return!1;let t;try{t=new s({latencyHint:"balanced"})}catch{return!1}return t.close(),!0})(Ts),(s=>()=>{if(s===null)return!1;const t=new s(1,1,44100).createGain(),e=t.connect(t)===t;return t.disconnect(t),e})(qe),((s,t)=>async()=>{if(s===null)return!0;if(t===null)return!1;const e=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new MessageChannel,i=new t(1,128,44100),r=URL.createObjectURL(e);let o=!1;try{await i.audioWorklet.addModule(r);const a=new s(i,"a",{numberOfOutputs:0}),l=i.createOscillator();await new Promise(c=>{a.port.onmessage=()=>c(),a.port.postMessage(n.port2,[n.port2])}),a.port.onmessage=()=>o=!0,l.connect(a),l.start(0),await i.startRendering(),o=await new Promise(c=>{n.port1.onmessage=({data:h})=>c(h===1),n.port1.postMessage(0)})}catch{}finally{n.port1.close(),URL.revokeObjectURL(r)}return o})(oo,qe),(s=>()=>{if(s===null)return!1;const t=new s(1,1,44100).createChannelMerger();if(t.channelCountMode==="max")return!0;try{t.channelCount=2}catch{return!0}return!1})(qe),(s=>()=>{if(s===null)return!1;const t=new s(1,1,44100);return t.createConstantSource===void 0||t.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY})(qe),(s=>()=>{if(s===null)return!1;const t=new s(1,1,44100),e=t.createConvolver();e.buffer=t.createBuffer(1,1,t.sampleRate);try{e.buffer=t.createBuffer(1,1,t.sampleRate)}catch{return!1}return!0})(qe),(s=>()=>{if(s===null)return!1;const t=new s(1,1,44100).createConvolver();try{t.channelCount=1}catch{return!1}return!0})(qe),c1,(s=>()=>s!==null&&s.hasOwnProperty("isSecureContext"))(hi),(s=>()=>{if(s===null)return!1;const t=new s;try{return t.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{t.close()}})(Ts),(s=>()=>{if(s===null)return Promise.resolve(!1);const t=new s(1,1,44100);if(t.createStereoPanner===void 0||t.createConstantSource===void 0)return Promise.resolve(!0);const e=t.createConstantSource(),n=t.createStereoPanner();return e.channelCount=1,e.offset.value=1,n.channelCount=1,e.start(),e.connect(n).connect(t.destination),t.startRendering().then(i=>i.getChannelData(0)[0]!==1)})(qe),h1),version:jf},Symbol.toStringTag,{value:"Module"}));let As=!0;const nM=(...s)=>{As&&new Date().toISOString().split("T")[1].split(".")[0]},De=(...s)=>{As&&new Date().toISOString().split("T")[1].split(".")[0]},Dn=(...s)=>{As&&new Date().toISOString().split("T")[1].split(".")[0]},lt=(...s)=>{As&&new Date().toISOString().split("T")[1].split(".")[0]},iM=-20,Pl=1/60,sM=10,Nu=.8,ku=.1,rM=1e6,oM=4,Km=50,Uu=2,aM=.5,lM=-30,cM=-10,hM=-15,uM=-40,dM=.05,Kc=1e3,Qm=2048,pM=70,mM=.1,fM=1e3,t_=.05,gM=4210752,_M=11393254,vM=9127187,yM=.8,xM=16777215,wM=1.5,uu={x:20,y:50,z:20},Jm=50,bM=-5e-4,tf=[{themeName:"Our Green Earth",story:"The King of All Cosmos demands a pristine Earth! Roll up all the litter and grow your Katamari!",items:["Car","Tree","House","Rock","Bush","Bench","Lamp Post","Trash Can","Mailbox","Mushroom","Flower","Garden Gnome","Bird Bath","Picnic Table"],groundColor:"#4CAF50",skyColor:"#87CEEB",baseTargetSize:25},{themeName:"Urban Jungle",story:"The city is a mess! Clean up the streets and grow your Katamari to skyscraper size!",items:["Car","Lamp Post","Trash Can","Bench","Mailbox","Fire Hydrant","Traffic Cone","Hot Dog Stand","Newspaper Stand","Bicycle","Skateboard","Shopping Cart"],groundColor:"#607D8B",skyColor:"#B0C4DE",baseTargetSize:100},{themeName:"Cosmic Debris",story:"The cosmos is cluttered! Roll up space junk and form a new star!",items:["Asteroid","Satellite","Space Debris","Comet Fragment","Moon Rock","Star Dust Cluster","Alien Artifact","Space Probe"],groundColor:"#2C3E50",skyColor:"#0A0A2A",baseTargetSize:200}],ef={Rock:"rock",Bush:"bush",Flower:"flower",Mushroom:"mushroom","Traffic Cone":"trafficCone","Garden Gnome":"gardenGnome","Bird Bath":"birdBath",Asteroid:"asteroid","Space Debris":"spaceDebris","Comet Fragment":"cometFragment","Moon Rock":"moonRock","Star Dust Cluster":"starDustCluster"};let nr,ns,Mi;function SM(){lt("Initializing Three.js scene..."),nr=new $0,ns=new kn(pM,window.innerWidth/window.innerHeight,mM,fM),ns.position.set(0,15,30),ns.lookAt(0,0,0),Mi=new Df({antialias:!0}),Mi.setSize(window.innerWidth,window.innerHeight),Mi.shadowMap.enabled=!0,Mi.shadowMap.type=2,document.body.appendChild(Mi.domElement),lt("Three.js scene initialized successfully")}function MM(){lt("Setting up lighting system...");const s=new iy(gM);nr.add(s);const t=new J0(_M,vM,yM);nr.add(t);const e=new ny(xM,wM);e.position.set(uu.x,uu.y,uu.z),e.castShadow=!0,Object.assign(e.shadow.camera,{top:Jm,bottom:-50,left:-50,right:Jm}),e.shadow.mapSize.width=Qm,e.shadow.mapSize.height=Qm,e.shadow.bias=bM,nr.add(e),lt("Lighting system setup complete")}function TM(){if(!ns||!Mi)return De("Camera or renderer not initialized for resize"),void 0;ns.aspect=window.innerWidth/window.innerHeight,ns.updateProjectionMatrix(),Mi.setSize(window.innerWidth,window.innerHeight)}function EM(){if(!Mi||!nr||!ns)return De("Renderer, scene, or camera not initialized"),void 0;Mi.render(nr,ns)}function qn(){return nr}function AM(){return ns}function CM(){return Mi}new ah;let et={fps:0,frameCount:0,lastFpsUpdate:0,fpsHistory:[],maxFpsHistoryLength:60,targetFps:60,lowFpsThreshold:45,criticalFpsThreshold:30,lastFrameTime:0,frameTime:0,averageFrameTime:0,maxFrameTime:0,frameTimeHistory:[],physicsStepTime:0,averagePhysicsStepTime:0,maxPhysicsStepTime:0,renderTime:0,averageRenderTime:0,maxRenderTime:0,renderTimeHistory:[],memoryUsage:0,maxMemoryUsage:0,memoryHistory:[],alertHistory:[],maxAlertHistory:50,alertCooldown:5e3,isMonitoring:!0,logInterval:1e4,lastLogTime:0,performanceDegradationThreshold:.8,consecutiveLowFrames:0,maxConsecutiveLowFrames:30};function RM(s){if(et.isMonitoring&&(et.lastFrameTime>0&&(et.frameTime=s-et.lastFrameTime,et.frameCount===0?et.averageFrameTime=et.frameTime:et.averageFrameTime=.95*et.averageFrameTime+.05*et.frameTime,et.frameTime>et.maxFrameTime&&(et.maxFrameTime=et.frameTime),et.frameTimeHistory.push({timestamp:s,frameTime:et.frameTime}),et.frameTimeHistory.length>et.maxFpsHistoryLength&&et.frameTimeHistory.shift()),et.lastFrameTime=s,et.frameCount++,s-et.lastFpsUpdate>=1e3)){const t=s-et.lastFpsUpdate;et.fps=Math.round(1e3*et.frameCount/t),et.fpsHistory.push({timestamp:s,fps:et.fps}),et.fpsHistory.length>et.maxFpsHistoryLength&&et.fpsHistory.shift(),function(){const e=et.fps;e<et.lowFpsThreshold?(et.consecutiveLowFrames++,e<et.criticalFpsThreshold?Il("critical_fps",`Critical FPS detected: ${e} (target: ${et.targetFps})`):Il("low_fps",`Low FPS detected: ${e} (target: ${et.targetFps})`),et.consecutiveLowFrames>=et.maxConsecutiveLowFrames&&(Il("sustained_low_fps",`Sustained low FPS: ${et.consecutiveLowFrames} consecutive frames below ${et.lowFpsThreshold}`),et.consecutiveLowFrames=0)):et.consecutiveLowFrames=0;const n=et.targetFps*et.performanceDegradationThreshold;e<n&&Il("performance_degradation",`Performance degraded by ${Math.round((et.targetFps-e)/et.targetFps*100)}%: ${e}fps (target: ${et.targetFps}fps)`)}(),et.frameCount=0,et.lastFpsUpdate=s}}function Il(s,t){const e=performance.now();if(et.alertHistory.find(r=>r.type===s&&e-r.timestamp<et.alertCooldown))return;const i={timestamp:e,type:s,message:t};et.alertHistory.push(i),et.alertHistory.length>et.maxAlertHistory&&et.alertHistory.shift()}function DM(s){et.isMonitoring&&(RM(s),function(t=null){et.isMonitoring&&(t===null&&performance.memory&&(t=performance.memory.usedJSHeapSize/1048576),t!==null&&(et.memoryUsage=t,t>et.maxMemoryUsage&&(et.maxMemoryUsage=t),et.memoryHistory.push({timestamp:performance.now(),memoryUsage:t}),et.memoryHistory.length>et.maxFpsHistoryLength&&et.memoryHistory.shift()))}(),s-et.lastLogTime>=et.logInterval&&(function(){if(!et.isMonitoring)return;const t=et.fpsHistory.length>0?Math.round(et.fpsHistory.reduce((e,n)=>e+n.fps,0)/et.fpsHistory.length):0;lt(`[PERFORMANCE STATS] Performance Summary:
        - Current FPS: ${et.fps}
        - Average FPS (last ${et.fpsHistory.length}s): ${t}
        - Frame Time: ${et.frameTime.toFixed(2)}ms (avg: ${et.averageFrameTime.toFixed(2)}ms, max: ${et.maxFrameTime.toFixed(2)}ms)
        - Physics Step: ${et.physicsStepTime.toFixed(2)}ms (avg: ${et.averagePhysicsStepTime.toFixed(2)}ms, max: ${et.maxPhysicsStepTime.toFixed(2)}ms)
        - Render Time: ${et.renderTime.toFixed(2)}ms (avg: ${et.averageRenderTime.toFixed(2)}ms, max: ${et.maxRenderTime.toFixed(2)}ms)
        - Memory Usage: ${et.memoryUsage.toFixed(2)}MB (max: ${et.maxMemoryUsage.toFixed(2)}MB)
        - Consecutive Low Frames: ${et.consecutiveLowFrames}
        - Total Alerts: ${et.alertHistory.length}`),et.maxFrameTime=0,et.maxPhysicsStepTime=0,et.maxRenderTime=0}(),et.lastLogTime=s))}let Mt=null,cn=[],Ll=0,fn={lastValidationTime:0,validationInterval:3e4,worldIntegrityIssues:0,lastIntegrityCheck:0};function PM(){return lt("Initializing physics world..."),Mt=new ed,Mt.gravity.set(0,iM,0),Mt.broadphase=new Ks(Mt),Mt.broadphase.useBoundingBoxes=!0,Mt.solver=new td,Mt.solver.iterations=sM,Mt.solver.tolerance=.1,Mt.allowSleep=!0,Mt.sleepSpeedLimit=.1,Mt.sleepTimeLimit=1,Mt.defaultContactMaterial.friction=Nu,Mt.defaultContactMaterial.restitution=ku,Mt.defaultContactMaterial.contactEquationStiffness=rM,Mt.defaultContactMaterial.contactEquationRelaxation=oM,Mt.quatNormalizeSkip=0,Mt.quatNormalizeFast=!1,function(){lt("Creating ground physics body...");const s=new vt({mass:0,type:vt.KINEMATIC}),t=new Ju;s.addShape(t),s.position.set(0,0,0),s.quaternion.setFromAxisAngle(new S(1,0,0),-Math.PI/2),s.material=new as("ground",{friction:Nu,restitution:.5*ku}),s.userData={name:"ground",isGround:!0,isStatic:!0},Mt.addBody(s),lt("Ground physics body created and added to world")}(),lt("Physics world initialized with performance optimizations and ground body"),Mt}function Od(){return Mt}function Fd(s,t=!0){Mt&&(Mt.addBody(s),t&&cn.push(s))}function Nd(s){if(!Mt||!s)return;s.userData&&s.userData.collisionHandler&&s.removeEventListener("collide",s.userData.collisionHandler),Mt.removeBody(s);const t=cn.indexOf(s);t>-1&&cn.splice(t,1),s.userData&&(s.userData=null)}function IM(s){if(!Mt)return;const t=Math.min(s,3*Pl);Ll+=t;let e=0;for(;Ll>=Pl&&e<3;)Mt.step(Pl),Ll-=Pl,e++;e>=3&&(Ll=0)}function LM(s,t){if(!s)return Dn("Cannot update Katamari physics: body is null or undefined"),void 0;const e=new so(t),n=12.5*Math.pow(t,3);(function(i,r,o){if(!i)return Dn("Cannot update body: body is null or undefined"),void 0;i.shapes=[r],i.shapeOffsets=[new S(0,0,0)],i.shapeOrientations=[new me(0,0,0,1)],i.mass=o,i.updateMassProperties(),o.toFixed(2)})(s,e,n),s.position.y=Math.max(t,s.position.y),lt(`Katamari physics updated: radius=${t.toFixed(2)}m, mass=${n.toFixed(2)}kg, Y-pos=${s.position.y.toFixed(2)}m`)}function e_(){if(!Mt)return De("Physics world not initialized"),{bodiesInWorld:0,bodiesTracked:0,orphanedBodies:0,fixedLeaks:0};const s=Mt.bodies.length,t=function(){const i=cn.length;cn=cn.filter(o=>!(!o||!Mt.bodies.includes(o)&&(De(`Found orphaned physics body in tracking array: ${o.userData?.name||"unnamed"}`),1)));const r=i-cn.length;return r>0&&lt(`Fixed physics body tracking: removed ${r} orphaned references`),r}();let e=0;for(const i of Mt.bodies)cn.includes(i)||!i.userData||i.userData.isStatic||(e++,i.userData.name);const n={bodiesInWorld:s,bodiesTracked:cn.length,orphanedBodies:e,fixedLeaks:t};return lt(`Physics world validation: ${s} in world, ${n.bodiesTracked} tracked, ${e} orphaned, ${t} leaks fixed`),n}function OM(s){const t=Date.now();t-fn.lastValidationTime>fn.validationInterval&&(function(){if(!Mt)return De("[PHYSICS DEBUG] Physics world not initialized - cannot perform integrity check"),{error:"Physics world not initialized"};const e=Date.now();fn.lastIntegrityCheck=e,lt("[PHYSICS DEBUG] Performing comprehensive physics world integrity check...");const n={timestamp:e,worldBodies:Mt.bodies.length,trackedBodies:cn.length,orphanedInWorld:0,orphanedInTracking:0,nullReferences:0,invalidBodies:0,staticBodies:0,dynamicBodies:0,sleepingBodies:0,awakeBodies:0,bodiesWithoutUserData:0,bodiesWithoutNames:0,memoryLeaks:0,issues:[]};for(const i of Mt.bodies)cn.includes(i)||!i.userData||i.userData.isStatic||(n.orphanedInWorld++,n.issues.push(`Orphaned body in world: ${i.userData.name||"unnamed"}`)),i.mass===0||i.userData&&i.userData.isStatic?n.staticBodies++:n.dynamicBodies++,i.sleepState===vt.SLEEPING?n.sleepingBodies++:n.awakeBodies++,i.userData?i.userData.name||(n.bodiesWithoutNames++,n.issues.push("Body without name in userData")):(n.bodiesWithoutUserData++,n.issues.push(`Body without userData at position (${i.position.x.toFixed(2)}, ${i.position.y.toFixed(2)}, ${i.position.z.toFixed(2)})`));for(const i of cn)i?(Mt.bodies.includes(i)||(n.orphanedInTracking++,n.issues.push(`Orphaned body in tracking: ${i.userData?.name||"unnamed"}`)),i.position&&i.velocity&&i.shapes||(n.invalidBodies++,n.issues.push(`Invalid body state: ${i.userData?.name||"unnamed"}`)),i.userData&&i.userData.threeMesh===null&&i.userData.collisionHandler===null&&n.memoryLeaks++):(n.nullReferences++,n.issues.push("Null reference in tracking array"));return fn.worldIntegrityIssues+=n.issues.length,lt(`[PHYSICS DEBUG] Integrity Check Results:
        - World Bodies: ${n.worldBodies}
        - Tracked Bodies: ${n.trackedBodies}
        - Static Bodies: ${n.staticBodies}
        - Dynamic Bodies: ${n.dynamicBodies}
        - Sleeping Bodies: ${n.sleepingBodies}
        - Awake Bodies: ${n.awakeBodies}
        - Orphaned in World: ${n.orphanedInWorld}
        - Orphaned in Tracking: ${n.orphanedInTracking}
        - Null References: ${n.nullReferences}
        - Invalid Bodies: ${n.invalidBodies}
        - Bodies without UserData: ${n.bodiesWithoutUserData}
        - Bodies without Names: ${n.bodiesWithoutNames}
        - Potential Memory Leaks: ${n.memoryLeaks}
        - Total Issues Found: ${n.issues.length}`),n.issues.length>0?(De(`[PHYSICS DEBUG] Found ${n.issues.length} integrity issues:`),n.issues.forEach((i,r)=>{De(`  ${r+1}. ${i}`)})):lt("[PHYSICS DEBUG] Physics world integrity check passed - no issues found"),n}(),function(e=25){const n=cn.length,i=Mt?Mt.bodies.length:0;if(!fn.previousBodyCount)return fn.previousBodyCount=n,fn.previousWorldCount=i,void 0;const r=n-fn.previousBodyCount,o=i-fn.previousWorldCount;Math.abs(r)>=e&&De(r>0?`[PHYSICS DEBUG] Rapid increase in tracked bodies: +${r} (now ${n})`:`[PHYSICS DEBUG] Rapid decrease in tracked bodies: ${r} (now ${n})`),Math.abs(o);const a=Math.abs(n-i);a>5&&De(`[PHYSICS DEBUG] Large discrepancy between tracked (${n}) and world (${i}) body counts: ${a}`),fn.previousBodyCount=n,fn.previousWorldCount=i}(),fn.lastValidationTime=t),t-fn.lastIntegrityCheck>3e4&&(function(){if(!Mt)return Dn("[PHYSICS DEBUG] Cannot validate physics world configuration - world not initialized"),{error:"Physics world not initialized"};lt("[PHYSICS DEBUG] Validating physics world configuration...");const e={gravity:Mt.gravity,broadphase:Mt.broadphase.constructor.name,solver:Mt.solver.constructor.name,solverIterations:Mt.solver.iterations,allowSleep:Mt.allowSleep,sleepSpeedLimit:Mt.sleepSpeedLimit,sleepTimeLimit:Mt.sleepTimeLimit,defaultFriction:Mt.defaultContactMaterial.friction,defaultRestitution:Mt.defaultContactMaterial.restitution,contactStiffness:Mt.defaultContactMaterial.contactEquationStiffness,contactRelaxation:Mt.defaultContactMaterial.contactEquationRelaxation},n=[];return Mt.gravity.y>=0&&n.push("Gravity Y component should be negative for downward gravity"),Mt.solver.iterations<5&&n.push("Solver iterations may be too low for stable simulation"),Mt.allowSleep||n.push("Sleep disabled - may impact performance with many bodies"),(Mt.defaultContactMaterial.friction<0||Mt.defaultContactMaterial.friction>1)&&n.push("Default friction value outside normal range (0-1)"),(Mt.defaultContactMaterial.restitution<0||Mt.defaultContactMaterial.restitution>1)&&n.push("Default restitution value outside normal range (0-1)"),lt(`[PHYSICS DEBUG] World Configuration:
        - Gravity: (${e.gravity.x}, ${e.gravity.y}, ${e.gravity.z})
        - Broadphase: ${e.broadphase}
        - Solver: ${e.solver} (${e.solverIterations} iterations)
        - Sleep Enabled: ${e.allowSleep}
        - Sleep Speed Limit: ${e.sleepSpeedLimit}
        - Sleep Time Limit: ${e.sleepTimeLimit}
        - Default Friction: ${e.defaultFriction}
        - Default Restitution: ${e.defaultRestitution}
        - Contact Stiffness: ${e.contactStiffness}
        - Contact Relaxation: ${e.contactRelaxation}`),n.length>0?(De("[PHYSICS DEBUG] Configuration issues found:"),n.forEach((i,r)=>{De(`  ${r+1}. ${i}`)})):lt("[PHYSICS DEBUG] Physics world configuration validation passed"),{config:e,issues:n}}(),fn.lastIntegrityCheck=t)}let Jn=null,zu=null,da=null,nf=0,xa=!1;function kd(){xa&&jr&&Jn.state==="started"&&Jn.triggerRelease(Po.now())}function FM(s=1){if(!xa||!jr)return;Po.state!=="running"&&Sd();const t=Po.now();if(t-nf>dM){const i=Math.min(s,2),r=1200-i/2*1e3,o=.3,a=o+i/2*(.8-o);zu.triggerAttackRelease(r,a,t),nf=t}}let si=[],Bu=[],wa=new H;const $s={},Wr={},Le={},sf=240,Ol=[16737095,6970061,3978097,16766720,12211667,4620980,13808780,16752762,2142890,16738740];function n_(s,t,e=new H(0,0,0),n=100){if(lt(`createCollectibleItems: Attempting to create ${s} items from ${t.length} types: [${t.join(", ")}]`),!t||t.length===0)return De("createCollectibleItems: itemNames array is empty or undefined. Cannot create items."),void 0;const i=qn(),r=Od();(function(l){const c=qn();for(const h of l){const u=ef[h];if(!u||Le[u])continue;let d;const p=Ol[Math.floor(Math.random()*Ol.length)],f=new It({color:p,roughness:.6,transparent:!0,opacity:0});switch(h){case"Rock":d=new Un(.7,16,16);break;case"Bush":d=new Un(.8,24,24);break;case"Flower":d=new ue(.2,.2,1.5,8);break;case"Mushroom":d=new ue(.6,.3,1.2,16);break;case"Traffic Cone":d=new Si(.5,1.5,16);break;case"Garden Gnome":d=new Un(.5,16,16);break;case"Bird Bath":d=new ue(.7,.6,1.4,16);break;case"Asteroid":d=new Zl(1,0);break;case"Space Debris":d=new oe(1,1,1);break;case"Comet Fragment":d=new Zl(1,1);break;case"Moon Rock":d=new Yu(1,0);break;case"Star Dust Cluster":d=new Un(.5,8,8);break;default:continue}$s[u]=d,Wr[u]=f,Le[u]=new K0(d,f,Kc),Le[u].instanceMatrix.setUsage(35048),Le[u].castShadow=!0,Le[u].receiveShadow=!0,Le[u].userData.instanceCount=0,c.add(Le[u])}})(t);const o=new we,a={};for(let l=0;l<s;l++){const c=Math.floor(Math.random()*t.length),h=t[c];let u,d,p;a[h]=(a[h]||0)+1,lt(`Attempting to create item ${l+1}/${s}: ${h} (index ${c}/${t.length-1})`);const f=Ol[Math.floor(Math.random()*Ol.length)],g=ef[h],m=!!g;if(m){const T=NM(h,g,f);if(!T)continue;u=T.threeMesh,d=T.cannonShape,p=T.size}else{const T=kM(h,f);if(!T)continue;u=T.threeMesh,d=T.cannonShape,p=T.size,u.userData.size=p,u.userData.isCollectible=!0,lt(`Created regular item: ${h}, size: ${p.toFixed(2)}`)}const x=Math.random()*Math.PI*2,_=Math.random()*n,y=e.x+Math.cos(x)*_,A=e.z+Math.sin(x)*_,b=Zi.clamp(y,-240,sf),v=Zi.clamp(A,-240,sf),w=.5*p,M=.5*p+5,C=0+w+Math.random()*(M-w);u.position.set(b,C,v);try{const T=new vt({mass:5*p,shape:d}),E=p+.1,D=Math.max(E,u.position.y);T.position.set(u.position.x,D,u.position.z),T.quaternion.copy(u.quaternion),T.velocity.set(0,0,0),T.angularVelocity.set(0,0,0),T.linearDamping=.1,T.angularDamping=.1,T.material=new as("item",{friction:.4,restitution:.3}),T.userData={threeMesh:u,name:`item-${h}-${l}`,isCollectible:!0},u.userData.cannonBody=T,(!u.userData.size||u.userData.size<=0)&&(u.userData.size=p,p.toFixed(2));const R=P=>{UM(T,P)};if(T.addEventListener("collide",R),T.userData.collisionHandler=R,!r){Dn(`Physics world not available when creating item ${h}`);continue}if(Fd(T),!r.bodies.includes(T)){Dn(`Failed to add physics body to world for item ${h}`);continue}lt(`Successfully created and added physics body for ${h} (size: ${p.toFixed(2)}) at position (${T.position.x.toFixed(2)}, ${T.position.y.toFixed(2)}, ${T.position.z.toFixed(2)})`)}catch(T){Dn(`Failed to create physics body for item ${h}:`,T);continue}if(m){const T=Le[g];if(T){const E=zM(g);if(u.userData.instanceIndex=E,o.position.copy(u.position),o.quaternion.copy(u.quaternion),o.scale.setScalar(p),o.updateMatrix(),T.setMatrixAt(E,o.matrix),T.instanceMatrix.needsUpdate=!0,T.instanceColor){const D=new Vt(f);T.instanceColor.setXYZ(E,D.r,D.g,D.b),T.instanceColor.needsUpdate=!0}}}else i.add(u);u.userData.isFadingIn=!0,u.userData.fadeStartTime=Date.now(),(!u.userData.size||u.userData.size<=0)&&(u.userData.size=p,p.toFixed(2)),u.userData.isCollectible=!0,si.push(u)}lt(`Created ${s} collectible items around position (${e.x.toFixed(1)}, ${e.z.toFixed(1)})`),lt("Item distribution:",a)}function NM(s,t,e,n){const i=1.5*Math.random()+.5,r=$s[t];if(!r)return De(`Base geometry not found for instanced item: ${s}`),null;let o;o=r.type==="SphereGeometry"||r.type==="IcosahedronGeometry"||r.type==="DodecahedronGeometry"?new so(i*r.parameters.radius):r.type==="BoxGeometry"?new Ve(new S(i*r.parameters.width*.5,i*r.parameters.height*.5,i*r.parameters.depth*.5)):r.type==="CylinderGeometry"?new vs(i*r.parameters.radiusTop,i*r.parameters.radiusBottom,i*r.parameters.height,r.parameters.radialSegments):r.type==="ConeGeometry"?new vs(0,i*r.parameters.radius,i*r.parameters.height,r.parameters.radialSegments):new Ve(new S(.5*i,.5*i,.5*i));const a=new wt;a.userData.isInstanced=!0,a.userData.instancedId=t,a.userData.instanceIndex=-1;let l=i;return r.parameters&&(l=i*(r.parameters.radius||r.parameters.height||r.parameters.width||1)),a.userData.size=Math.max(.1,l),a.userData.cannonShape=o,a.userData.color=e,{threeMesh:a,cannonShape:o,size:i}}function kM(s,t){let e,n=null,i=1;switch(s){case"Car":const r=function(v){const w=2*Math.random()+.8,M=new _e,C=new oe(2*w,.8*w,w),T=new It({color:v,roughness:.6,transparent:!0,opacity:0}),E=new wt(C,T);E.castShadow=E.receiveShadow=!0,M.add(E);const D=new oe(1.2*w,.6*w,.8*w),R=new It({color:v,roughness:.6,transparent:!0,opacity:0}),P=new wt(D,R);P.castShadow=P.receiveShadow=!0,P.position.y=.7*w,M.add(P);const k=new ue(.25*w,.25*w,.2*w,16),F=new It({color:3355443,roughness:.8,transparent:!0,opacity:0});[[.7,.5],[-.7,.5],[.7,-.5],[-.7,-.5]].forEach(([q,B])=>{const W=new wt(k,F);W.rotation.z=Math.PI/2,W.position.set(w*q,.2*-w,w*B),M.add(W)});const z=new Ve(new S(w,.4*w,.5*w));return{mesh:M,shape:z,size:1.2*w}}(t);n=r.mesh,e=r.shape,i=r.size;break;case"Tree":const o=function(){const v=4*Math.random()+2,w=new _e,M=new ue(.08*v,.12*v,1.2*v,8),C=new It({color:9127187,roughness:.7,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=.6*v,w.add(T);const E=new It({color:2263842,roughness:.5,transparent:!0,opacity:0}),D=new Si(.4*v,.8*v,16),R=new wt(D,E);R.castShadow=R.receiveShadow=!0,R.position.y=1.2*v,w.add(R);const P=new vs(.12*v,.4*v,2*v,8);return{mesh:w,shape:P,size:1*v}}();n=o.mesh,e=o.shape,i=o.size;break;case"House":const a=function(){const v=2*Math.random()+1,w=new _e,M=new oe(1.5*v,1.2*v,1.5*v),C=new It({color:16113331,roughness:.7,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,w.add(T);const E=new Si(1.2*v,.8*v,4),D=new It({color:10506797,roughness:.7,transparent:!0,opacity:0}),R=new wt(E,D);R.rotation.y=Math.PI/4,R.position.y=1.2*v,R.castShadow=R.receiveShadow=!0,w.add(R);const P=new Ve(new S(.75*v,.75*v,.75*v));return{mesh:w,shape:P,size:1*v}}();n=a.mesh,e=a.shape,i=a.size;break;case"Bench":const l=function(v){const w=1.5*Math.random()+.8,M=new _e,C=new oe(2*w,.1*w,.4*w),T=new It({color:v,roughness:.7,transparent:!0,opacity:0}),E=new wt(C,T);E.castShadow=E.receiveShadow=!0,E.position.y=.4*w,M.add(E);const D=new oe(2*w,.6*w,.1*w),R=new It({color:v,roughness:.7,transparent:!0,opacity:0}),P=new wt(D,R);P.castShadow=P.receiveShadow=!0,P.position.set(0,.7*w,.15*-w),M.add(P);const k=new oe(.1*w,.4*w,.1*w),F=new It({color:9127187,roughness:.8,transparent:!0,opacity:0});[[-.8,.15],[.8,.15],[-.8,-.15],[.8,-.15]].forEach(([q,B])=>{const W=new wt(k,F);W.position.set(w*q,.2*w,w*B),M.add(W)});const z=new Ve(new S(w,.3*w,.2*w));return{mesh:M,shape:z,size:.8*w}}(t);n=l.mesh,e=l.shape,i=l.size;break;case"Lamp Post":const c=function(){const v=2*Math.random()+1.5,w=new _e,M=new ue(.05*v,.08*v,3*v,8),C=new It({color:6710886,roughness:.8,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=1.5*v,w.add(T);const E=new Un(.2*v,16,16),D=new It({color:16777130,roughness:.3,transparent:!0,opacity:0}),R=new wt(E,D);R.castShadow=R.receiveShadow=!0,R.position.y=2.8*v,w.add(R);const P=new vs(.08*v,.2*v,3*v,8);return{mesh:w,shape:P,size:1.2*v}}();n=c.mesh,e=c.shape,i=c.size;break;case"Trash Can":const h=function(){const v=1.2*Math.random()+.6,w=new _e,M=new ue(.4*v,.5*v,1.2*v,16),C=new It({color:4473924,roughness:.7,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=.6*v,w.add(T);const E=new ue(.45*v,.45*v,.1*v,16),D=new It({color:3355443,roughness:.7,transparent:!0,opacity:0}),R=new wt(E,D);R.castShadow=R.receiveShadow=!0,R.position.y=1.25*v,w.add(R);const P=new vs(.5*v,.45*v,1.3*v,16);return{mesh:w,shape:P,size:.9*v}}();n=h.mesh,e=h.shape,i=h.size;break;case"Mailbox":const u=function(v){const w=1*Math.random()+.5,M=new _e,C=new ue(.03*w,.03*w,1.2*w,8),T=new It({color:9127187,roughness:.8,transparent:!0,opacity:0}),E=new wt(C,T);E.castShadow=E.receiveShadow=!0,E.position.y=.6*w,M.add(E);const D=new oe(.6*w,.3*w,.4*w),R=new It({color:v,roughness:.6,transparent:!0,opacity:0}),P=new wt(D,R);P.castShadow=P.receiveShadow=!0,P.position.y=1*w,M.add(P);const k=new Ve(new S(.3*w,.6*w,.2*w));return{mesh:M,shape:k,size:.7*w}}(t);n=u.mesh,e=u.shape,i=u.size;break;case"Picnic Table":const d=function(){const v=1.5*Math.random()+1,w=new _e,M=new oe(2*v,.1*v,1*v),C=new It({color:9127187,roughness:.8,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=.7*v,w.add(T);const E=new oe(1.8*v,.08*v,.3*v),D=new It({color:9127187,roughness:.8,transparent:!0,opacity:0}),R=new wt(E,D);R.position.set(0,.4*v,.65*v),w.add(R);const P=new wt(E,D);P.position.set(0,.4*v,.65*-v),w.add(P);const k=new oe(.1*v,.7*v,.1*v),F=new It({color:6636321,roughness:.8,transparent:!0,opacity:0});[[-.8,.4],[.8,.4],[-.8,-.4],[.8,-.4]].forEach(([q,B])=>{const W=new wt(k,F);W.position.set(v*q,.35*v,v*B),w.add(W)});const z=new Ve(new S(v,.4*v,.5*v));return{mesh:w,shape:z,size:1.2*v}}();n=d.mesh,e=d.shape,i=d.size;break;case"Fire Hydrant":const p=function(){const v=1*Math.random()+.6,w=new _e,M=new ue(.3*v,.35*v,1*v,8),C=new It({color:16711680,roughness:.6,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=.5*v,w.add(T);const E=new ue(.25*v,.3*v,.2*v,8),D=new It({color:13369344,roughness:.6,transparent:!0,opacity:0}),R=new wt(E,D);R.castShadow=R.receiveShadow=!0,R.position.y=1.1*v,w.add(R);const P=new ue(.08*v,.08*v,.2*v,8),k=new It({color:8947848,roughness:.7,transparent:!0,opacity:0}),F=new wt(P,k);F.rotation.z=Math.PI/2,F.position.set(.4*v,.7*v,0),w.add(F);const z=new wt(P,k);z.rotation.z=-Math.PI/2,z.position.set(.4*-v,.7*v,0),w.add(z);const q=new vs(.35*v,.25*v,1.2*v,8);return{mesh:w,shape:q,size:.8*v}}();n=p.mesh,e=p.shape,i=p.size;break;case"Hot Dog Stand":const f=function(){const v=1.5*Math.random()+1,w=new _e,M=new oe(1.5*v,.8*v,1*v),C=new It({color:16777215,roughness:.6,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=.4*v,w.add(T);const E=new Si(1.2*v,.3*v,16),D=new It({color:16737095,roughness:.5,transparent:!0,opacity:0}),R=new wt(E,D);R.castShadow=R.receiveShadow=!0,R.position.y=1.5*v,w.add(R);const P=new ue(.02*v,.02*v,1*v,8),k=new It({color:8947848,roughness:.8,transparent:!0,opacity:0}),F=new wt(P,k);F.position.y=1*v,w.add(F);const z=new Ve(new S(.75*v,.4*v,.5*v));return{mesh:w,shape:z,size:1*v}}();n=f.mesh,e=f.shape,i=f.size;break;case"Newspaper Stand":const g=function(){const v=1*Math.random()+.8,w=new _e,M=new oe(.8*v,1.2*v,.4*v),C=new It({color:4286945,roughness:.6,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=.6*v,w.add(T);const E=new oe(.82*v,.8*v,.02*v),D=new It({color:8900331,roughness:.1,transparent:!0,opacity:.3}),R=new wt(E,D);R.position.set(0,.8*v,.21*v),w.add(R);const P=new Ve(new S(.4*v,.6*v,.2*v));return{mesh:w,shape:P,size:.7*v}}();n=g.mesh,e=g.shape,i=g.size;break;case"Bicycle":const m=function(v){const w=1.2*Math.random()+.8,M=new _e,C=new oe(1.5*w,.05*w,.05*w),T=new It({color:v,roughness:.6,transparent:!0,opacity:0}),E=new wt(C,T);E.castShadow=E.receiveShadow=!0,E.position.y=.5*w,M.add(E);const D=new Zu(.3*w,.05*w,8,16),R=new It({color:3355443,roughness:.8,transparent:!0,opacity:0}),P=new wt(D,R);P.rotation.y=Math.PI/2,P.position.set(.6*w,.3*w,0),M.add(P);const k=new wt(D,R);k.rotation.y=Math.PI/2,k.position.set(.6*-w,.3*w,0),M.add(k);const F=new ue(.02*w,.02*w,.4*w,8),z=new It({color:8947848,roughness:.7,transparent:!0,opacity:0}),q=new wt(F,z);q.rotation.z=Math.PI/2,q.position.set(.6*w,.8*w,0),M.add(q);const B=new Ve(new S(.75*w,.3*w,.15*w));return{mesh:M,shape:B,size:.9*w}}(t);n=m.mesh,e=m.shape,i=m.size;break;case"Skateboard":const x=function(v){const w=.8*Math.random()+.4,M=new _e,C=new oe(2*w,.05*w,.3*w),T=new It({color:v,roughness:.7,transparent:!0,opacity:0}),E=new wt(C,T);E.castShadow=E.receiveShadow=!0,E.position.y=.1*w,M.add(E);const D=new ue(.08*w,.08*w,.05*w,16),R=new It({color:4473924,roughness:.8,transparent:!0,opacity:0});[[-.7,.1],[.7,.1],[-.7,-.1],[.7,-.1]].forEach(([k,F])=>{const z=new wt(D,R);z.rotation.x=Math.PI/2,z.position.set(w*k,.05*w,w*F),M.add(z)});const P=new Ve(new S(w,.05*w,.15*w));return{mesh:M,shape:P,size:.6*w}}(t);n=x.mesh,e=x.shape,i=x.size;break;case"Shopping Cart":const _=function(){const v=1.2*Math.random()+.8,w=new _e,M=new oe(1*v,.6*v,.8*v),C=new It({color:8947848,roughness:.7,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=.5*v,w.add(T);const E=new ue(.02*v,.02*v,1*v,8),D=new It({color:6710886,roughness:.8,transparent:!0,opacity:0}),R=new wt(E,D);R.rotation.z=Math.PI/2,R.position.set(.7*-v,.9*v,0),w.add(R);const P=new ue(.08*v,.08*v,.05*v,16),k=new It({color:3355443,roughness:.8,transparent:!0,opacity:0});[[-.4,.35],[.4,.35],[-.4,-.35],[.4,-.35]].forEach(([z,q])=>{const B=new wt(P,k);B.rotation.x=Math.PI/2,B.position.set(v*z,.08*v,v*q),w.add(B)});const F=new Ve(new S(.5*v,.3*v,.4*v));return{mesh:w,shape:F,size:.8*v}}();n=_.mesh,e=_.shape,i=_.size;break;case"Satellite":const y=function(){const v=2*Math.random()+1.5,w=new _e,M=new oe(1*v,.8*v,1.2*v),C=new It({color:12632256,roughness:.3,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,w.add(T);const E=new oe(2.5*v,.05*v,1.5*v),D=new It({color:128,roughness:.2,transparent:!0,opacity:0}),R=new wt(E,D);R.position.set(1.75*v,0,0),w.add(R);const P=new wt(E,D);P.position.set(1.75*-v,0,0),w.add(P);const k=new ue(.02*v,.02*v,1.5*v,8),F=new It({color:8947848,roughness:.7,transparent:!0,opacity:0}),z=new wt(k,F);z.position.y=1.15*v,w.add(z);const q=new Ve(new S(1.25*v,.4*v,.6*v));return{mesh:w,shape:q,size:1.5*v}}();n=y.mesh,e=y.shape,i=y.size;break;case"Alien Artifact":const A=function(){const v=1.5*Math.random()+1,w=new _e,M=new $u(.8*v),C=new It({color:65280,roughness:.1,transparent:!0,opacity:.8,emissive:8704}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=.4*v,w.add(T);const E=new ue(.6*v,.8*v,.3*v,8),D=new It({color:4473924,roughness:.3,transparent:!0,opacity:0,metalness:.8}),R=new wt(E,D);R.castShadow=R.receiveShadow=!0,R.position.y=.15*v,w.add(R);const P=new so(.8*v);return{mesh:w,shape:P,size:1*v}}();n=A.mesh,e=A.shape,i=A.size;break;case"Space Probe":const b=function(){const v=2*Math.random()+1.5,w=new _e,M=new Si(.4*v,2*v,8),C=new It({color:16777215,roughness:.4,transparent:!0,opacity:0}),T=new wt(M,C);T.castShadow=T.receiveShadow=!0,T.position.y=1*v,w.add(T);const E=new Si(.6*v,.2*v,16),D=new It({color:12632256,roughness:.3,transparent:!0,opacity:0}),R=new wt(E,D);R.rotation.x=Math.PI,R.position.y=2.2*v,w.add(R);const P=new ue(.15*v,.2*v,.5*v,8),k=new It({color:6710886,roughness:.6,transparent:!0,opacity:0}),F=new wt(P,k);F.position.y=.25*-v,w.add(F);const z=new vs(.4*v,.15*v,2.5*v,8);return{mesh:w,shape:z,size:1.3*v}}();n=b.mesh,e=b.shape,i=b.size;break;default:return De(`Unknown regular item type: ${s}`),null}return n&&(n.userData||(n.userData={}),n.userData.size=i,n.userData.isCollectible=!0,n.isGroup&&(n.userData.size=i,n.userData.isCollectible=!0),lt(`Set size ${i.toFixed(2)} for regular item ${s} (isGroup: ${n.isGroup})`)),{threeMesh:n,cannonShape:e,size:i}}function UM(s,t){const e=t.target===s?t.body:t.target;if(e.userData&&e.userData.isGround){const n=s.userData.threeMesh;n&&(s.velocity.y<-.5&&(s.velocity.y*=.5),Math.abs(s.position.y-.5*n.userData.size)<.1&&(s.linearDamping=Math.max(s.linearDamping,.3),s.angularDamping=Math.max(s.angularDamping,.3)),s.userData.name,s.position.y.toFixed(2))}}function zM(s){const t=Le[s];if(!t)return-1;const e=t.userData.instanceCount||0;return e>=Kc?(De(`Maximum instances reached for ${s}`),-1):(t.userData.instanceCount=e+1,e)}function Vu(s){s&&(s.traverse(t=>{t.geometry&&t.geometry.dispose(),t.material&&(Array.isArray(t.material)?t.material.forEach(e=>{e.map&&e.map.dispose(),e.normalMap&&e.normalMap.dispose(),e.roughnessMap&&e.roughnessMap.dispose(),e.metalnessMap&&e.metalnessMap.dispose(),e.dispose()}):(t.material.map&&t.material.map.dispose(),t.material.normalMap&&t.material.normalMap.dispose(),t.material.roughnessMap&&t.material.roughnessMap.dispose(),t.material.metalnessMap&&t.material.metalnessMap.dispose(),t.material.dispose()))}),s.userData)}function BM(s,t){const e=Le[s];if(!e||t===-1)return;const n=new we;n.scale.set(0,0,0),n.updateMatrix(),e.setMatrixAt(t,n.matrix),e.instanceMatrix.needsUpdate=!0,e.instanceColor&&(e.instanceColor.setXYZ(t,0,0,0),e.instanceColor.needsUpdate=!0),e.userData.instanceCount>0&&e.userData.instanceCount--}function i_(){const s=qn();lt("Clearing instanced meshes with proper resource disposal...");for(const t in Le)if(Le[t]){const e=Le[t];s.remove(e),e.geometry&&e.geometry.dispose(),e.material&&(e.material.map&&e.material.map.dispose(),e.material.normalMap&&e.material.normalMap.dispose(),e.material.roughnessMap&&e.material.roughnessMap.dispose(),e.material.metalnessMap&&e.material.metalnessMap.dispose(),e.material.dispose()),Le[t]=null,delete Le[t]}for(const t in $s)$s[t]&&($s[t].dispose(),$s[t]=null,delete $s[t]);for(const t in Wr)if(Wr[t]){const e=Wr[t];e.map&&e.map.dispose(),e.normalMap&&e.normalMap.dispose(),e.roughnessMap&&e.roughnessMap.dispose(),e.metalnessMap&&e.metalnessMap.dispose(),e.dispose(),Wr[t]=null,delete Wr[t]}lt("All instanced meshes cleared with proper resource disposal")}function rf(){return si}function of(s){return Le[s]||null}function VM(s){const t=si.indexOf(s);t!==-1&&si.splice(t,1)}function qu(s){wa.copy(s)}function qM(){lt("Removing all item physics bodies with proper cleanup..."),function(s){if(!Mt)return De("Physics world not initialized"),void 0;const t=cn.filter(s);lt(`Removing ${t.length} physics bodies matching condition...`);for(const e of t)Nd(e);lt(`Removed ${t.length} physics bodies with proper cleanup`)}(s=>s.userData&&s.userData.isCollectible),lt("All item physics bodies removed with proper cleanup")}let An=null,fe=null,Qc=[];function WM(s){lt("createEnvironment: Removing old environment objects...");const t=qn();t.children.filter(e=>e.userData.isEnvironment).forEach(e=>t.remove(e)),Qc=[],lt("createEnvironment: Old environment objects removed."),function(){lt("createEnvironment: Creating clouds...");const e=qn(),n=new It({color:16777215,transparent:!0,opacity:.7,roughness:1});for(let i=0;i<15;i++){const r=new Un(8*Math.random()+5,16,16),o=new wt(r,n);o.position.set(400*(Math.random()-.5),50+30*Math.random(),400*(Math.random()-.5)),o.userData.isEnvironment=!0,e.add(o)}lt("createEnvironment: Clouds created.")}(),function(e){lt("createEnvironment: Creating mountains...");const n=qn(),i=new Vt(e.groundColor).lerp(new Vt(0),.2),r=new It({color:i,roughness:.8}),o=50;for(let a=0;a<8;a++){const l=50*Math.random()+30,c=40*Math.random()+20,h=new Si(c,l,16),u=new wt(h,r);let d,p;u.castShadow=u.receiveShadow=!0,u.userData.isEnvironment=!0,u.userData.size=c,u.userData.minSizeToPass=1.8*c;let f=!1;for(;!f;)d=500*(Math.random()-.5),p=500*(Math.random()-.5),Math.sqrt(d*d+p*p)>o&&(f=!0);u.position.set(d,l/2-.1,p),n.add(u),Qc.push(u)}lt("createEnvironment: Mountains created.")}(s),lt("Environment creation completed")}function GM(s){lt("Creating ground...");const t=qn(),e=Od();An&&(t.remove(An),An.geometry.dispose(),An.material.dispose()),fe&&e.removeBody(fe);const n=new Vt(s.groundColor),i=n.clone().lerp(new Vt(0),.1),r=function(d,p){const f=document.createElement("canvas"),g=512;f.width=f.height=g;const m=f.getContext("2d"),x=m.createLinearGradient(0,0,g,g);x.addColorStop(0,`#${d.getHexString()}`),x.addColorStop(1,`#${p.getHexString()}`),m.fillStyle=x,m.fillRect(0,0,g,g);const _=m.getImageData(0,0,g,g),y=_.data;for(let b=0;b<y.length;b+=4){const v=30*(Math.random()-.5);y[b]=Math.max(0,Math.min(255,y[b]+v)),y[b+1]=Math.max(0,Math.min(255,y[b+1]+v)),y[b+2]=Math.max(0,Math.min(255,y[b+2]+v))}m.putImageData(_,0,0);const A=new Pf(f);return A.wrapS=A.wrapT=Hl,A.repeat.set(4,4),A}(n,i),o=new Q0({map:r}),a=new lh(500,500);An=new wt(a,o),An.rotation.x=-Math.PI/2,An.receiveShadow=!0,t.add(An),fe=new vt({mass:0}),fe.addShape(new Ju),fe.quaternion.setFromAxisAngle(new S(1,0,0),-Math.PI/2),fe.position.set(0,0,0);const l=new as({friction:1,restitution:0});fe.material=l;const c=new ko(l,e.defaultMaterial,{friction:1,restitution:0,contactEquationStiffness:1e8,contactEquationRelaxation:2});e.addContactMaterial(c),fe.userData={name:"ground",isStatic:!0,isGround:!0},Fd(fe,!1);const h=e.bodies,u=h.includes(fe);lt("Ground physics body created and added to physics world:"),lt(`- Position: (${fe.position.x}, ${fe.position.y}, ${fe.position.z})`),lt(`- Rotation: (${fe.quaternion.x}, ${fe.quaternion.y}, ${fe.quaternion.z}, ${fe.quaternion.w})`),lt(`- Mass: ${fe.mass}`),lt(`- Material friction: ${fe.material.friction}`),lt(`- Material restitution: ${fe.material.restitution}`),lt(`- Ground body in physics world: ${u}`),lt(`- Total bodies in physics world: ${h.length}`)}class HM{constructor(t,e){this.scene=t,this.world=e,this.group=null,this.coreBall=null,this.body=null,this.radius=Uu,this.targetRadius=Uu,this.itemsCollectedCount=0,this.isMovingInput=!1,this.currentAcceleration=0,this.init()}init(){lt("Creating Katamari..."),this.createVisual(),this.createPhysicsBody(),lt("Katamari created and added to physics world.")}createVisual(){this.group=new _e;const t=new Un(this.radius,32,32),e=new Pf(this.generateKatamariTexture()),n=new It({map:e,roughness:.6,metalness:.1});this.coreBall=new wt(t,n),this.coreBall.castShadow=!0,this.coreBall.name="core",this.group.add(this.coreBall),this.group.position.y=this.radius,this.group.scale.set(1,1,1),this.scene.add(this.group)}createPhysicsBody(){const t=new S(0,this.radius,0);this.body=function(e,n,i={}){const r=new so(e),o=12.5*Math.pow(e,3),a=new vt({mass:o,position:n,shape:r,material:new as({friction:Nu,restitution:ku})});return a.position.y=Math.max(e,a.position.y),a.userData={...i,isKatamari:!0},lt(`Created Katamari body: radius=${e.toFixed(2)}m, mass=${o.toFixed(2)}kg`),a}(this.radius,t,{name:"katamari"}),this.body.linearDamping=.05,this.body.angularDamping=.1,this.collisionHandler=e=>{this.handleCollision(e)},this.body.addEventListener("collide",this.collisionHandler),Fd(this.body,!0),this.updatePhysics(),lt("Katamari collision event handler registered")}generateKatamariTexture(){const t=document.createElement("canvas");t.width=512,t.height=512;const e=t.getContext("2d");e.fillStyle="#1e3a8a",e.fillRect(0,0,t.width,t.height),e.fillStyle="#2563eb";for(let r=0;r<20;r++){const o=Math.random()*t.width,a=Math.random()*t.height,l=40*Math.random()+20;e.beginPath(),e.arc(o,a,l,0,2*Math.PI),e.fill()}const n=["#22c55e","#16a34a","#15803d","#166534","#8b5a2b","#a0522d"];for(let r=0;r<8;r++){e.fillStyle=n[Math.floor(Math.random()*n.length)];const o=Math.random()*t.width,a=Math.random()*t.height,l=60*Math.random()+40;e.beginPath();const c=12+Math.floor(8*Math.random());for(let h=0;h<c;h++){const u=h/c*Math.PI*2,d=l*(.6+.8*Math.random()),p=o+Math.cos(u)*d,f=a+Math.sin(u)*d;h===0?e.moveTo(p,f):e.lineTo(p,f)}e.closePath(),e.fill()}for(let r=0;r<25;r++){e.fillStyle=n[Math.floor(Math.random()*n.length)];const o=Math.random()*t.width,a=Math.random()*t.height,l=15*Math.random()+5;e.beginPath(),e.arc(o,a,l,0,2*Math.PI),e.fill()}e.fillStyle="#166534";for(let r=0;r<15;r++){const o=Math.random()*t.width,a=Math.random()*t.height,l=30*Math.random()+10,c=8*Math.random()+3;e.save(),e.translate(o,a),e.rotate(Math.random()*Math.PI*2),e.fillRect(-l/2,-c/2,l,c),e.restore()}e.fillStyle="#f8fafc",e.beginPath(),e.arc(t.width/2,0,40,0,Math.PI),e.fill(),e.beginPath(),e.arc(t.width/2,t.height,40,Math.PI,2*Math.PI),e.fill(),e.fillStyle="rgba(255, 255, 255, 0.3)";for(let r=0;r<30;r++){const o=Math.random()*t.width,a=Math.random()*t.height,l=25*Math.random()+10;e.beginPath(),e.arc(o,a,l,0,2*Math.PI),e.fill()}const i=e.createRadialGradient(t.width/2,t.height/2,0,t.width/2,t.height/2,t.width/2);return i.addColorStop(0,"rgba(135, 206, 235, 0)"),i.addColorStop(.8,"rgba(135, 206, 235, 0.1)"),i.addColorStop(1,"rgba(135, 206, 235, 0.3)"),e.fillStyle=i,e.fillRect(0,0,t.width,t.height),t}handleMovement(t,e,n){const{keys:i,touchInput:r,gyro:o}=t,a=new H;e.getWorldDirection(a),a.y=0,a.normalize();const l=new H().crossVectors(new H(0,1,0),a).normalize();let c=new S(0,0,0);if(this.isMovingInput=!1,this.currentAcceleration=Math.min(80+2*this.radius,200),n&&o.normalizedGamma!==void 0&&o.normalizedBeta!==void 0){const p=-o.normalizedGamma,f=o.normalizedBeta;c.x+=a.x*p*.8,c.z+=a.z*p*.8,c.x-=l.x*f*.8,c.z-=l.z*f*.8,(Math.abs(p)>.1||Math.abs(f)>.1)&&(this.isMovingInput=!0)}else{let d=0,p=0;if((i.w||i.arrowup)&&(d=-1),(i.s||i.arrowdown)&&(d=1),(i.a||i.arrowleft)&&(p=-1),(i.d||i.arrowright)&&(p=1),d===0&&p===0||(c.x=a.x*d+l.x*p,c.z=a.z*d+l.z*p,this.isMovingInput=!0),r.active){const f=Math.min(30,.05*window.innerWidth),g=1.5,m=r.currentX-r.startX,x=r.currentY-r.startY,_=Math.sqrt(m*m+x*x);if(_>f){const y=m/_,A=x/_;c.x+=(-a.x*A+l.x*y)*g,c.z+=(-a.z*A+l.z*y)*g,this.isMovingInput=!0}}}if(this.isMovingInput){c.normalize();const d=this.currentAcceleration*this.body.mass*this.radius*.5,p=new S,f=new S(0,1,0);c.cross(f,p),p.normalize();const g=new S;p.scale(d,g),this.body.applyTorque(g),this.body.linearDamping=.05,this.body.angularDamping=.05}else this.body.linearDamping=.9,this.body.angularDamping=.9;const h=this.body.velocity.length();h>25&&this.body.velocity.scale(25/h,this.body.velocity);const u=this.body.angularVelocity.length();u>8&&this.body.angularVelocity.scale(8/u,this.body.angularVelocity)}update(t){if(this.group.position.copy(this.body.position),this.group.quaternion.copy(this.body.quaternion),this.body.position.x=Zi.clamp(this.body.position.x,-t+this.radius,t-this.radius),this.body.position.z=Zi.clamp(this.body.position.z,-t+this.radius,t-this.radius),this.group.position.copy(this.body.position),this.radius<this.targetRadius){const e=this.targetRadius-this.radius,n=.08,i=Math.min(.15,n+.5*e),r=this.radius;if(this.radius=Zi.lerp(this.radius,this.targetRadius,i),Math.abs(this.radius-r)>.001){const o=this.radius-r;this.body.position.y+=o,this.updatePhysics(),this.updateVisuals(),this.body.position.y=Math.max(this.radius,this.body.position.y),this.group.position.copy(this.body.position)}Math.abs(this.targetRadius-this.radius)<.01&&(this.radius=this.targetRadius,this.updatePhysics(),this.updateVisuals())}this.updateAttachedItems()}updateAttachedItems(){const t=.016666666666666666;for(let e=this.group.children.length-1;e>=0;e--){const n=this.group.children[e];if(n.name!=="core"&&n.userData.isAttachedToKatamari&&n.userData.initialLocalPosition){const i=Math.max(.4,1-.005*this.radius),r=this.radius+.3*n.userData.initialSize*i,o=n.userData.initialLocalPosition.clone().normalize().multiplyScalar(r);n.userData.currentOrbitalAngle=(n.userData.currentOrbitalAngle||0)+n.userData.rotationSpeed*t,o.applyAxisAngle(new H(0,1,0),n.userData.currentOrbitalAngle),n.position.copy(o);const a=.7*i;n.scale.set(a,a,a),n.rotation.y+=.5*t,n.rotation.x+=.005}}}updatePhysics(){LM(this.body,this.radius),this.body.position.y=Math.max(this.radius,this.body.position.y),this.group.position.y=this.body.position.y}updateVisuals(){this.coreBall&&(this.coreBall.geometry&&this.coreBall.geometry.dispose(),this.coreBall.geometry=new Un(this.radius,32,32))}collectItem(t,e=.8){const n=this.radius,i=Math.pow(n,3)+Math.pow(t,3)*e,r=Math.cbrt(i);this.targetRadius=r,this.itemsCollectedCount++,lt(`Item collected! Target radius: ${this.targetRadius.toFixed(2)}m (current: ${this.radius.toFixed(2)}m), Items collected: ${this.itemsCollectedCount}`)}attachItem(t,e){let n=t;if(t.userData.isInstanced){if(n=this.createAttachedItemMesh(t),!n)return;this.group.add(n)}else this.group.add(t);const i=new H().subVectors(e,this.group.position).applyQuaternion(this.group.quaternion.clone().invert()),r=Math.max(.4,1-.005*this.radius),o=this.radius+.3*n.userData.size*r;i.normalize().multiplyScalar(o),n.position.copy(i),n.userData.isAttachedToKatamari=!0,n.userData.initialLocalPosition=i.clone(),n.userData.initialSize=n.userData.size,n.userData.rotationSpeed=.5*Math.random()+.2,n.userData.currentOrbitalAngle=0;const a=.7*r;n.scale.set(a,a,a),lt(`Item attached to katamari with compression: scale=${a.toFixed(2)}, distance=${o.toFixed(2)}`)}createAttachedItemMesh(t){try{const e=t.userData.instancedId,n=t.userData.size,i=t.userData.color||8947848;let r;switch(e){case"sphere":r=new Un(.7*n,16,16);break;case"box":r=new oe(n,n,n);break;case"cylinder":r=new ue(.5*n,.5*n,n,8);break;case"cone":r=new Si(.5*n,n,8);break;default:r=new Un(.5*n,8,8)}const o=new It({color:i,roughness:.6,metalness:.1}),a=new wt(r,o);return a.castShadow=!0,a.receiveShadow=!0,a.userData.size=n,a.userData.originalInstancedId=e,a}catch(e){return Dn("Failed to create attached item mesh:",e),null}}resetPosition(){lt("Resetting Katamari position..."),this.body&&(this.body.position.set(0,this.radius,0),this.body.velocity.set(0,0,0),this.body.angularVelocity.set(0,0,0),this.group.position.copy(this.body.position),this.group.quaternion.copy(this.body.quaternion),lt("Katamari position reset to (0,0,0)."))}handleCollision(t){const e=t.target===this.body?t.body:t.target;if(!e.userData||!e.userData.threeMesh||e.userData.isGround)return nM(`Ignoring collision with: ${e.userData?.name||"unnamed"} (isGround: ${e.userData?.isGround})`),void 0;const n=e.userData.threeMesh;let i=n.userData.size;if(!i||typeof i!="number"||i<=0){De(`Invalid item size in collision: ${i} for item: ${e.userData?.name||"unnamed"}`);let r=null;if(e.shape)if(e.shape.radius)r=2*e.shape.radius;else if(e.shape.halfExtents){const o=e.shape.halfExtents;r=2*Math.max(o.x,o.y,o.z)}else(e.shape.radiusTop||e.shape.radiusBottom)&&(r=2*Math.max(e.shape.radiusTop||0,e.shape.radiusBottom||0));if(!(r&&r>0))return Dn(`Could not determine size for item ${e.userData?.name||"unnamed"}, skipping collision`),void 0;De(`Fixed size using physics shape: ${r.toFixed(2)}`),n.userData.size=r,i=r}if(n.userData.isCollectible&&!n.userData.isCollected)if(lt(`Collision detected with item: ${e.userData.name}, size: ${i.toFixed(2)}m, katamari radius: ${this.radius.toFixed(2)}m`),lt(`Item isCollectible: ${n.userData.isCollectible}, isCollected: ${n.userData.isCollected}`),lt(`Can collect check: katamari radius ${this.radius.toFixed(2)} >= item size * 0.5 (${(.5*i).toFixed(2)}) = ${this.canCollectItem(i)}`),this.canCollectItem(i))this.collectItem(i),this.attachItem(n,n.position.clone()),n.userData.isCollected=!0,e.userData.isCollected=!0,e.userData.collisionHandler&&(e.removeEventListener("collide",e.userData.collisionHandler),e.userData.name),lt(`Item collected via collision! Size: ${i.toFixed(2)}m, new katamari radius: ${this.radius.toFixed(2)}m, items collected: ${this.itemsCollectedCount}`);else{const r=new H().subVectors(this.getThreePosition(),n.position).normalize().multiplyScalar(2),o=new S(r.x,r.y,r.z).scale(10);this.body.applyImpulse(o,new S(0,0,0)),lt(`Katamari bounced off larger item (size: ${i.toFixed(2)}m vs katamari: ${this.radius.toFixed(2)}m)`)}}getVelocityMagnitude(){return this.body?this.body.velocity.length():0}getPosition(){return this.body?this.body.position:new S(0,0,0)}getThreePosition(){return this.group?this.group.position:new H(0,0,0)}canCollectItem(t){return this.radius>=.5*t}getAttractionRange(){let t=1.2+.1*this.radius;return t=Math.min(3,t),this.radius*t}dispose(){this.group&&(this.scene.remove(this.group),this.group.traverse(t=>{t.geometry&&t.geometry.dispose(),t.material&&(Array.isArray(t.material)?t.material.forEach(e=>e.dispose()):t.material.dispose())})),this.body&&(this.collisionHandler&&(this.body.removeEventListener("collide",this.collisionHandler),lt("Katamari collision event handler removed")),Nd(this.body),lt("Katamari physics body properly removed from world and tracking"))}}const Gt={keys:{},touchInput:{startX:0,startY:0,currentX:0,currentY:0,active:!1},gyro:{alpha:0,beta:0,gamma:0,normalizedGamma:0,normalizedBeta:0},useGyroscope:!1,touchDeadZone:0};let ie={onKeyDown:null,onKeyUp:null,onTouchStart:null,onTouchMove:null,onTouchEnd:null,onDeviceOrientation:null,onWindowResize:null},Wn=null,du=null;function jM(s={}){lt("Initializing input management system..."),Wn=document.getElementById("gyro-button"),du=document.getElementById("message-overlay"),Gt.touchDeadZone=Math.min(30,window.innerWidth*t_),ie={...ie,...s},function(){const t=n=>{Gt.keys[n.key.toLowerCase()]=!0,n.key.toLowerCase()===" "?ie.onSpaceKey&&ie.onSpaceKey():n.key.toLowerCase()==="r"&&ie.onResetKey&&ie.onResetKey(),ie.onKeyDown&&ie.onKeyDown(n)},e=n=>{Gt.keys[n.key.toLowerCase()]=!1,ie.onKeyUp&&ie.onKeyUp(n)};window.addEventListener("keydown",t),window.addEventListener("keyup",e),Wn&&Wn.addEventListener("click",r_),window.addEventListener("resize",ZM),du&&du.addEventListener("click",()=>{ie.onMessageOverlayClick&&ie.onMessageOverlayClick()})}(),o_(),lt("Input management system initialized")}function XM(s){s.preventDefault(),Gt.touchInput.active=!0,Gt.touchInput.startX=s.touches[0].clientX,Gt.touchInput.startY=s.touches[0].clientY,Gt.touchInput.currentX=Gt.touchInput.startX,Gt.touchInput.currentY=Gt.touchInput.startY,ie.onTouchStart&&ie.onTouchStart(s,Gt.touchInput)}function YM(s){s.preventDefault(),Gt.touchInput.active&&(Gt.touchInput.currentX=s.touches[0].clientX,Gt.touchInput.currentY=s.touches[0].clientY,ie.onTouchMove&&ie.onTouchMove(s,Gt.touchInput))}function $M(s){Gt.touchInput.active=!1,Gt.touchInput.x=0,Gt.touchInput.y=0,Gt.touchInput.startX=0,Gt.touchInput.startY=0,Gt.touchInput.currentX=0,Gt.touchInput.currentY=0,ie.onTouchEnd&&ie.onTouchEnd(s,Gt.touchInput)}function s_(s){Gt.gyro.gamma=s.gamma,Gt.gyro.beta=s.beta,Gt.gyro.alpha=s.alpha,Gt.gyro.normalizedGamma=Zi.clamp(s.gamma/90,-1,1),Gt.gyro.normalizedBeta=Zi.clamp(s.beta/90,-1,1),ie.onDeviceOrientation&&ie.onDeviceOrientation(s,Gt.gyro)}function r_(){Gt.useGyroscope?(window.removeEventListener("deviceorientation",s_),Gt.useGyroscope=!1,Wn&&(Wn.classList.remove("active"),Wn.textContent="Toggle Gyro"),lt("Gyroscope controls OFF"),ie.onGyroscopeToggle&&ie.onGyroscopeToggle(!1)):typeof DeviceOrientationEvent<"u"&&typeof DeviceOrientationEvent.requestPermission=="function"?DeviceOrientationEvent.requestPermission().then(s=>{s==="granted"?af():(De("Permission for device orientation denied."),lf("Permission for gyroscope was denied. Please allow motion and orientation access in your device settings for gyroscope controls."))}).catch(s=>{Dn("Error requesting device orientation permission:",s),lf("Could not enable gyroscope. Ensure your device supports it and allows motion and orientation access.")}):af()}function af(){window.addEventListener("deviceorientation",s_),Gt.useGyroscope=!0,Wn&&(Wn.classList.add("active"),Wn.textContent="Gyro ON"),lt("Gyroscope controls ON"),ie.onGyroscopeToggle&&ie.onGyroscopeToggle(!0)}function o_(){Wn&&(window.matchMedia("(pointer: coarse)").matches&&window.DeviceOrientationEvent?Wn.style.display="block":Wn.style.display="none")}function lf(s){const t=document.createElement("div");t.textContent=s,t.style.cssText=`
        position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);
        background-color: rgba(0, 0, 0, 0.9); color: white; padding: 20px;
        border-radius: 10px; z-index: 1000; text-align: center;
        box-shadow: 0 0 15px rgba(255,255,255,0.5);
    `,document.body.appendChild(t),setTimeout(()=>{document.body.contains(t)&&document.body.removeChild(t)},3e3)}function ZM(){Gt.touchDeadZone=Math.min(30,window.innerWidth*t_),o_(),ie.onWindowResize&&ie.onWindowResize()}let Jc=null,th=null,eh=null,nh=null,ih=null,ri=null,Zs=null,ii=null,$i=null,Wu=null,Gu=null,ir={onMessageOverlayClick:null,onGyroToggle:null,onDebugToggle:null};function KM(s={}){return lt("Initializing UI management system..."),ir={onMessageOverlayClick:s.onMessageOverlayClick||null,onGyroToggle:s.onGyroToggle||null,onDebugToggle:s.onDebugToggle||null},Jc=document.getElementById("katamari-size"),th=document.getElementById("katamari-speed"),eh=document.getElementById("items-collected"),nh=document.getElementById("progress-bar"),ih=document.getElementById("target-size"),ri=document.getElementById("message-overlay"),Zs=document.getElementById("loading-overlay"),ii=document.getElementById("gyro-button"),$i=document.getElementById("debug-button"),Wu=document.getElementById("power-up-status"),Gu=document.getElementById("fps"),Jc&&th&&eh&&nh&&ih&&ri&&Zs?(function(){ri&&ir.onMessageOverlayClick&&ri.addEventListener("click",ir.onMessageOverlayClick),ii&&ii.addEventListener("click",QM),$i&&$i.addEventListener("click",JM)}(),function(){ii&&(window.matchMedia("(pointer: coarse)").matches&&window.DeviceOrientationEvent?ii.style.display="block":ii.style.display="none")}(),function(){if(!$i)return;const t=As;l_(t),lt("Debug button initialized with state: "+(t?"ON":"OFF"))}(),lt("UI management system initialized successfully"),!0):(Dn("Required UI elements not found in DOM"),!1)}function a_(s){const{katamariRadius:t,katamariSpeed:e,itemsCollected:n,targetSize:i,fps:r}=s;if(Jc&&t!==void 0&&(Jc.textContent=`${t.toFixed(2)}m`),th&&e!==void 0&&(th.textContent=`${e.toFixed(2)}m/s`),eh&&n!==void 0&&(eh.textContent=n),nh&&t!==void 0&&i!==void 0){const o=Math.min(100,t/i*100);nh.style.width=`${o}%`}ih&&i!==void 0&&(ih.textContent=`${i.toFixed(2)}m`),Gu&&r!==void 0&&(Gu.textContent=Math.round(r))}function QM(){ir.onGyroToggle&&(s=ir.onGyroToggle(),ii&&(s?(ii.classList.add("active"),ii.textContent="Gyro ON"):(ii.classList.remove("active"),ii.textContent="Toggle Gyro")));var s}function JM(){ir.onDebugToggle&&l_(ir.onDebugToggle())}function l_(s){$i&&(s?($i.classList.add("active"),$i.textContent="Debug ON"):($i.classList.remove("active"),$i.textContent="Toggle Debug"))}let Io=1,sh=!1,_s=null,Pa=0;async function Fl(s=null){lt("Starting generateNewLevel..."),sh=!0,kd(),ri&&(ri.style.display="none"),function(){lt("Starting comprehensive items system cleanup...");const n=qn();qM(),si.forEach(r=>{r.userData.isInstanced||(Vu(r),n.remove(r)),r.userData&&(r.userData.cannonBody=null,r.userData.threeMesh=null)}),Bu.forEach(r=>{Vu(r),n.remove(r)}),si.length=0,Bu.length=0,i_(),wa.set(0,0,0);const i=e_();lt(`Comprehensive items system cleanup completed. Validation results: ${JSON.stringify(i)}`)}(),function(){lt("Resetting instanced meshes for level restart...");for(const n in Le){const i=Le[n];if(i){const r=new we;r.scale.set(0,0,0),r.updateMatrix();for(let o=0;o<Kc;o++)i.setMatrixAt(o,r.matrix);if(i.instanceMatrix.needsUpdate=!0,i.instanceColor){for(let o=0;o<Kc;o++)i.instanceColor.setXYZ(o,0,0,0);i.instanceColor.needsUpdate=!0}i.userData.instanceCount=0}}lt("Instanced meshes reset for level restart")}(),function(){lt("Cleaning up environment...");const n=qn(),i=Od();An&&(n.remove(An),An.geometry.dispose(),An.material.dispose(),An=null),fe&&(i.removeBody(fe),fe=null),n.children.filter(r=>r.userData.isEnvironment).forEach(r=>{n.remove(r),r.geometry&&r.geometry.dispose(),r.material&&r.material.dispose()}),Qc=[],lt("Environment cleaned up")}(),_s=await async function(){lt("Starting generateLevelTheme...");const n=tf[(Io-1)%tf.length];return function(i="Loading..."){Zs&&(Zs.textContent=i,Zs.style.display="flex")}(`Generating ${n.themeName}... ✨`),await new Promise(i=>setTimeout(i,1500)),function(){Zs&&(Zs.style.display="none")}(),lt("Finished generateLevelTheme. Selected theme:",n.themeName),n}();const t=1+(Io-1)*aM;Pa=_s.baseTargetSize*t,a_({itemsCollected:0,targetSize:Pa}),function(n){const i=qn();i.background=new Vt(n.skyColor),i.fog=new Xu(n.skyColor,50,200),lt(`Scene atmosphere set for theme: ${n.themeName}`)}(_s),WM(_s),GM(_s),s&&typeof s=="function"&&s(),lt("Creating initial collectible items...");const e=new H(0,0,0);n_(200,_s.items,e,180),qu(e),sh=!1,lt("generateNewLevel completed")}function tT(s){return s>=Pa&&(!ri||ri.style.display==="none")&&(t=`LEVEL ${Io} COMPLETE! You've grown a magnificent Katamari! Click to continue.`,ri&&(ri.textContent=t,ri.style.display="block"),Io++,kd(),!0);var t}function cf(){return _s}const eT=function(){let s,t,e,n,i,r=new H;const o=new sy;let a=0,l=0,c=0,h={};const u={dom:null,frames:[],lastFrameTimeStamp:performance.now(),init:function(){this.dom=document.getElementById("fps")},update:function(){const g=performance.now(),m=g-this.lastFrameTimeStamp;this.lastFrameTimeStamp=g;const x=1/(m/1e3);this.frames.push(x),this.frames.length>60&&this.frames.shift();let _=0;for(const y of this.frames)_+=y;_/=this.frames.length,this.dom&&(this.dom.textContent=Math.round(_))}};function d(){lt("Creating Katamari instance..."),i&&i.dispose(),i=new HM(s,n),qu(i.getThreePosition()),lt("Katamari created successfully")}function p(){i&&(i.resetPosition(),qu(i.getThreePosition()),lt("Katamari position reset."))}function f(){requestAnimationFrame(f);const g=performance.now(),m=o.getDelta();if(u.update(),DM(g),!sh&&i){IM(m);const A={keys:{...Gt.keys},touchInput:{...Gt.touchInput},gyro:{...Gt.gyro}};i.handleMovement(A,t,Gt.useGyroscope),i.update(500),function(){const w=rf();for(const M of w){const C=M.userData.cannonBody;if(C&&(M.position.copy(C.position),M.quaternion.copy(C.quaternion),M.userData.isInstanced)){const T=of(M.userData.instancedId);if(T&&M.userData.instanceIndex!==-1){const E=new we;E.position.copy(C.position),E.quaternion.copy(C.quaternion),E.scale.setScalar(M.userData.size||1),E.updateMatrix(),T.setMatrixAt(M.userData.instanceIndex,E.matrix),T.instanceMatrix.needsUpdate=!0}}}}(),function(){const w=rf(),M=i.getThreePosition(),C=i.getAttractionRange();let T=0;const E=performance.now();for(let D=w.length-1;D>=0;D--){const R=w[D];if(R.userData.isCollected){if(R.userData.cannonBody&&(R.userData.cannonBody.userData.collisionHandler&&(R.userData.cannonBody.removeEventListener("collide",R.userData.cannonBody.userData.collisionHandler),R.userData.cannonBody.userData.name),n.removeBody(R.userData.cannonBody)),R.userData.isInstanced){const k=of(R.userData.instancedId);if(k&&R.userData.instanceIndex!==-1){const F=new we;F.scale.set(0,0,0),F.updateMatrix(),k.setMatrixAt(R.userData.instanceIndex,F.matrix),k.instanceMatrix.needsUpdate=!0}}else s.remove(R);VM(R),E-l>100&&(FM(R.userData.size),l=E);continue}const P=M.distanceTo(R.position);if(P<=C&&(T++,!i.canCollectItem(R.userData.size))){const k=new H().subVectors(M,R.position),F=.02*Math.max(0,1-P/C);k.normalize().multiplyScalar(F),R.position.add(k),R.userData.cannonBody&&R.userData.cannonBody.position.copy(R.position)}}(function(D,R){if(xa&&jr)if(D>0){const P=R/D,k=Math.min(1,P/100),F=Zi.lerp(50,200,k),z=Zi.lerp(-40,-10,k);da.frequency.value=F,da.volume.value=z}else da.volume.value=-40})(T,C)}();const v=i.getVelocityMagnitude();if(a=.9*a+.1*v,function(){if(!i)return;const w=i.getThreePosition(),M=20+2*i.radius,C=15+i.radius,T=new H(w.x,w.y+C,w.z+M);t.position.lerp(T,.05),r.lerp(w,.1),t.lookAt(r)}(),Math.random()<.1&&(OM(),function(w,M=Km){if(w&&!(Math.random()>.1))for(const C of cn){if(!C.userData||C.userData.isStatic||C.userData.isKatamari)continue;const T=w.distanceTo(C.position);T<=M?C.sleepState===vt.SLEEPING&&C.wakeUp():T>2*M&&C.sleepState===vt.AWAKE&&C.velocity.length()<.1&&C.sleep()}}(i.getPosition(),Km),function(){for(const w of si)if(w.userData.isFadingIn){const M=Date.now()-w.userData.fadeStartTime,C=Math.min(M/500,1),T=C;if(w.userData.isInstanced){const E=Le[w.userData.instancedId];E&&w.userData.instanceIndex!==-1&&(E.material.opacity=Math.max(E.material.opacity,T))}else w.traverse(E=>{E.material&&(E.material.opacity=T)});C>=1&&(w.userData.isFadingIn=!1)}}(),function(w,M){w.distanceTo(wa)>80&&(lt("Generating new items due to travel distance."),n_(15,M.items,w,100),wa.copy(w))}(i.getThreePosition(),cf()),function(w){const M=qn();let C=0;for(let T=si.length-1;T>=0;T--){const E=si[T];if(w.distanceTo(E.position)>150){const D=E.userData.cannonBody;D&&(D.userData&&D.userData.collisionHandler&&(D.removeEventListener("collide",D.userData.collisionHandler),D.userData.collisionHandler=null),Nd(D)),E.userData.isInstanced?BM(E.userData.instancedId,E.userData.instanceIndex):(Vu(E),M.remove(E)),E.userData&&(E.userData.cannonBody=null,E.userData.threeMesh=null),si.splice(T,1),C++}}C>0&&(lt(`Cleaned up ${C} old items with proper resource disposal`),e_())}(i.getThreePosition())),Math.random()<.3){(function(M){const C=performance.now();M>.1?C-c>200&&(function(E){if(!xa||!jr)return;Po.state!=="running"&&Sd(),Jn.state!=="stopped"&&Jn.state!=="idle"||Jn.triggerAttack(Po.now());const D=Math.min(E/10,1),R=45*D-60,P=50+250*D;Jn.volume.value=R,Jn.frequency&&(Jn.frequency.value=P),Jn.noise.playbackRate=.5+1.5*D}(M),c=C):kd()})(v);const w={fps:et.fps,frameTime:et.frameTime,averageFrameTime:et.averageFrameTime,physicsStepTime:et.physicsStepTime,averagePhysicsStepTime:et.averagePhysicsStepTime,renderTime:et.renderTime,averageRenderTime:et.averageRenderTime,memoryUsage:et.memoryUsage,maxMemoryUsage:et.maxMemoryUsage,consecutiveLowFrames:et.consecutiveLowFrames,alertCount:et.alertHistory.length,isMonitoring:et.isMonitoring};a_({katamariRadius:i.radius,katamariSpeed:a,itemsCollected:i.itemsCollectedCount,targetSize:Pa,fps:w.fps||(u.frames.length>0?u.frames[u.frames.length-1]:0)}),function(M){if(!Wu)return;let C="";const T=Date.now();for(const[E,D]of Object.entries(M))D>T&&(C+=`<div>${E}: ${((D-T)/1e3).toFixed(1)}s</div>`);Wu.innerHTML=C}(h),tT(i.radius)}}const x=performance.now();EM();const _=performance.now();var y;y=_-x,et.isMonitoring&&(et.renderTime=y,et.renderTimeHistory.length===0?et.averageRenderTime=y:et.averageRenderTime=.95*et.averageRenderTime+.05*y,y>et.maxRenderTime&&(et.maxRenderTime=y),et.renderTimeHistory.push({timestamp:performance.now(),renderTime:y}),et.renderTimeHistory.length>et.maxFpsHistoryLength&&et.renderTimeHistory.shift())}return{init:async function(){lt("Initializing Katamari game..."),u.init(),lt("Tone object after module import:",jr),lt("Type of Tone.NoiseSynth:",typeof wo),lt("Type of Tone.Synth:",typeof di),lt("Type of Tone.MembraneSynth:",typeof Rs),lt("CANNON object after module import:",Fb),lt("Type of CANNON.World:",typeof ed),SM(),s=qn(),t=AM(),e=CM(),n=PM(),MM(),await async function(){if(lt("Initializing Tone.js audio system..."),!jr)return Dn("Tone.js not loaded!"),!1;try{return Jn=new wo({noise:{type:"white"},envelope:{attack:.01,decay:.1,sustain:1,release:.1}}).toDestination(),Jn.volume.value=lM,zu=new di({oscillator:{type:"sine"},envelope:{attack:.005,decay:.1,sustain:0,release:.1}}).toDestination(),zu.volume.value=cM,new Rs({pitchDecay:.05,octaves:2,envelope:{attack:.001,decay:.2,sustain:.01,release:.2,attackCurve:"exponential"},oscillator:{type:"sine"},volume:hM}).toDestination(),da=new se({frequency:50,type:"sine",volume:uM}).toDestination(),da.start(),xa=!0,lt("Audio system initialized successfully"),!0}catch(g){return Dn("Failed to initialize audio system:",g),!1}}(),lt("Initializing items system..."),si=[],Bu=[],wa.set(0,0,0),i_(),lt("Items system initialized"),lt("Initializing environment system..."),Qc=[],lt("Environment system initialized"),lt("Level management system initialized"),Io=1,sh=!1,_s=null,Pa=0,KM({onMessageOverlayClick:()=>Fl(d),onGyroToggle:()=>r_(),onDebugToggle:()=>(As=!As,As)}),jM({onSpaceKey:()=>Fl(d),onResetKey:p,onMessageOverlayClick:()=>Fl(d),onWindowResize:()=>{TM()}}),function(g={}){et.targetFps=g.targetFps||60,et.lowFpsThreshold=g.lowFpsThreshold||45,et.criticalFpsThreshold=g.criticalFpsThreshold||30,et.isMonitoring=g.enabled!==!1,et.isMonitoring&&(lt("[PERFORMANCE] Performance monitoring initialized"),lt(`[PERFORMANCE] Target FPS: ${et.targetFps}, Low FPS threshold: ${et.lowFpsThreshold}, Critical FPS threshold: ${et.criticalFpsThreshold}`))}({targetFps:60,lowFpsThreshold:45,criticalFpsThreshold:30,enabled:!0}),function(g){if(!g)return De("No canvas provided for touch event registration"),void 0;g.addEventListener("touchstart",XM,{passive:!1}),g.addEventListener("touchmove",YM,{passive:!1}),g.addEventListener("touchend",$M),lt("Touch events registered on canvas")}(e.domElement),lt("Calling generateNewLevel from init..."),await Fl(d),lt("generateNewLevel completed. Starting animation loop."),f()},getScene:()=>s,getCamera:()=>t,getRenderer:()=>e,getWorld:()=>n,getKatamari:()=>i,getCurrentLevel:()=>Io,getCurrentTheme:()=>cf(),getKatamariRadius:()=>i?i.radius:Uu,getItemsCollectedCount:()=>i?i.itemsCollectedCount:0}}();document.addEventListener("DOMContentLoaded",()=>{lt("DOM loaded, initializing game..."),eT.init().catch(s=>{Dn("Failed to initialize game:",s)})});
