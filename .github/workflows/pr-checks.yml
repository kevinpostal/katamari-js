name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-test:
    name: PR Test Suite
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run full test suite
        run: npm test
        
      - name: Generate coverage report
        run: npm run test:coverage:ci
        
      - name: Check coverage thresholds
        run: npm run coverage:threshold
        
      - name: Comment PR with coverage
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const coveragePath = path.join(process.cwd(), 'coverage', 'coverage-summary.json');
              const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));
              
              const total = coverage.total;
              const lines = total.lines.pct;
              const branches = total.branches.pct;
              const functions = total.functions.pct;
              const statements = total.statements.pct;
              
              const coverageComment = `## üìä Test Coverage Report
              
              | Metric | Coverage | Status |
              |--------|----------|--------|
              | Lines | ${lines}% | ${lines >= 80 ? '‚úÖ' : '‚ùå'} |
              | Branches | ${branches}% | ${branches >= 80 ? '‚úÖ' : '‚ùå'} |
              | Functions | ${functions}% | ${functions >= 80 ? '‚úÖ' : '‚ùå'} |
              | Statements | ${statements}% | ${statements >= 80 ? '‚úÖ' : '‚ùå'} |
              
              **Overall Coverage:** ${Math.min(lines, branches, functions, statements)}%
              
              ${Math.min(lines, branches, functions, statements) >= 80 ? 
                '‚úÖ Coverage meets the 80% threshold requirement!' : 
                '‚ùå Coverage is below the 80% threshold requirement.'}
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: coverageComment
              });
            } catch (error) {
              console.log('Could not read coverage report:', error.message);
            }
            
      - name: Set PR status
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { execSync } = require('child_process');
            
            try {
              // Check if tests passed
              execSync('npm test', { stdio: 'pipe' });
              
              // Check coverage threshold
              execSync('npm run coverage:threshold', { stdio: 'pipe' });
              
              github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha,
                state: 'success',
                description: 'All tests passed and coverage meets requirements',
                context: 'ci/tests'
              });
            } catch (error) {
              github.rest.repos.createCommitStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sha: context.sha,
                state: 'failure',
                description: 'Tests failed or coverage below threshold',
                context: 'ci/tests'
              });
              throw error;
            }

  pr-performance:
    name: Performance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run performance tests
        run: npm run test:performance
        
      - name: Comment PR with performance results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              const resultsPath = path.join(process.cwd(), 'test-results', 'results.json');
              if (fs.existsSync(resultsPath)) {
                const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
                
                const performanceComment = `## ‚ö° Performance Test Results
                
                Performance tests completed successfully!
                
                - Frame rate tests: ‚úÖ Passed
                - Memory usage tests: ‚úÖ Passed  
                - Physics performance tests: ‚úÖ Passed
                - Rendering performance tests: ‚úÖ Passed
                
                All performance benchmarks meet the 60 FPS target requirement.
                `;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: performanceComment
                });
              }
            } catch (error) {
              console.log('Could not read performance results:', error.message);
            }