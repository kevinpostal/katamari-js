{"numTotalTestSuites":27,"numPassedTestSuites":27,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":46,"numPassedTests":46,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1752908152078,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Frame Rate Performance Tests","Frame Rate Measurement"],"fullName":"Frame Rate Performance Tests Frame Rate Measurement should measure frame rate accurately at 60 FPS","status":"passed","title":"should measure frame rate accurately at 60 FPS","duration":4.156165987253189,"failureMessages":[],"location":{"line":44,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Frame Rate Measurement"],"fullName":"Frame Rate Performance Tests Frame Rate Measurement should detect frame rate drops below 60 FPS","status":"passed","title":"should detect frame rate drops below 60 FPS","duration":0.8212330043315887,"failureMessages":[],"location":{"line":62,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Frame Rate Measurement"],"fullName":"Frame Rate Performance Tests Frame Rate Measurement should handle variable frame times correctly","status":"passed","title":"should handle variable frame times correctly","duration":1.0398150086402893,"failureMessages":[],"location":{"line":83,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","FPS Consistency Testing"],"fullName":"Frame Rate Performance Tests FPS Consistency Testing should maintain 60 FPS with low object count","status":"passed","title":"should maintain 60 FPS with low object count","duration":1969.598403006792,"failureMessages":[],"location":{"line":105,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","FPS Consistency Testing"],"fullName":"Frame Rate Performance Tests FPS Consistency Testing should detect performance degradation with high object count","status":"passed","title":"should detect performance degradation with high object count","duration":8130.8622780144215,"failureMessages":[],"location":{"line":124,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","FPS Consistency Testing"],"fullName":"Frame Rate Performance Tests FPS Consistency Testing should validate performance thresholds correctly","status":"passed","title":"should validate performance thresholds correctly","duration":2.239206999540329,"failureMessages":[],"location":{"line":149,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","FPS Consistency Testing"],"fullName":"Frame Rate Performance Tests FPS Consistency Testing should fail validation for poor performance","status":"passed","title":"should fail validation for poor performance","duration":1.3210740089416504,"failureMessages":[],"location":{"line":173,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Intensive Gameplay Scenarios"],"fullName":"Frame Rate Performance Tests Intensive Gameplay Scenarios should maintain performance during object spawning","status":"passed","title":"should maintain performance during object spawning","duration":1815.785994976759,"failureMessages":[],"location":{"line":199,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Intensive Gameplay Scenarios"],"fullName":"Frame Rate Performance Tests Intensive Gameplay Scenarios should handle physics-heavy scenarios","status":"passed","title":"should handle physics-heavy scenarios","duration":1771.7767419815063,"failureMessages":[],"location":{"line":227,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Intensive Gameplay Scenarios"],"fullName":"Frame Rate Performance Tests Intensive Gameplay Scenarios should maintain FPS during audio processing","status":"passed","title":"should maintain FPS during audio processing","duration":1562.9883870184422,"failureMessages":[],"location":{"line":249,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Frame Rate Variance Analysis"],"fullName":"Frame Rate Performance Tests Frame Rate Variance Analysis should calculate frame time variance correctly","status":"passed","title":"should calculate frame time variance correctly","duration":2.2829549908638,"failureMessages":[],"location":{"line":272,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Frame Rate Variance Analysis"],"fullName":"Frame Rate Performance Tests Frame Rate Variance Analysis should detect frame rate spikes","status":"passed","title":"should detect frame rate spikes","duration":1.510807991027832,"failureMessages":[],"location":{"line":287,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Frame Rate Variance Analysis"],"fullName":"Frame Rate Performance Tests Frame Rate Variance Analysis should measure consistency over time","status":"passed","title":"should measure consistency over time","duration":2.839374989271164,"failureMessages":[],"location":{"line":307,"column":9},"meta":{}},{"ancestorTitles":["Frame Rate Performance Tests","Performance Regression Detection"],"fullName":"Frame Rate Performance Tests Performance Regression Detection should pass for stable performance","status":"passed","title":"should pass for stable performance","duration":1679.8650760054588,"failureMessages":[],"location":{"line":340,"column":9},"meta":{}}],"startTime":1752908161759,"endTime":1752908178707.865,"status":"passed","message":"","name":"/mnt/c/Users/kpostal/Desktop/Game/katamari-js/tests/performance/frame-rate.test.js"},{"assertionResults":[{"ancestorTitles":["Memory Usage Performance Tests","Memory Allocation Patterns"],"fullName":"Memory Usage Performance Tests Memory Allocation Patterns should track memory usage during normal gameplay","status":"passed","title":"should track memory usage during normal gameplay","duration":5.226612985134125,"failureMessages":[],"location":{"line":46,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Memory Allocation Patterns"],"fullName":"Memory Usage Performance Tests Memory Allocation Patterns should detect stable memory usage","status":"passed","title":"should detect stable memory usage","duration":1.5653599798679352,"failureMessages":[],"location":{"line":66,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Memory Allocation Patterns"],"fullName":"Memory Usage Performance Tests Memory Allocation Patterns should calculate memory growth rate correctly","status":"passed","title":"should calculate memory growth rate correctly","duration":1.4547489881515503,"failureMessages":[],"location":{"line":84,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Memory Leak Detection"],"fullName":"Memory Usage Performance Tests Memory Leak Detection should detect potential memory leaks","status":"passed","title":"should detect potential memory leaks","duration":121.66153898835182,"failureMessages":[],"location":{"line":108,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Memory Leak Detection"],"fullName":"Memory Usage Performance Tests Memory Leak Detection should not flag stable memory usage as leak","status":"passed","title":"should not flag stable memory usage as leak","duration":115.53807500004768,"failureMessages":[],"location":{"line":131,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Memory Leak Detection"],"fullName":"Memory Usage Performance Tests Memory Leak Detection should handle garbage collection cycles","status":"passed","title":"should handle garbage collection cycles","duration":133.87803599238396,"failureMessages":[],"location":{"line":150,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Three.js Object Cleanup"],"fullName":"Memory Usage Performance Tests Three.js Object Cleanup should verify proper Three.js geometry disposal","status":"passed","title":"should verify proper Three.js geometry disposal","duration":246.46629199385643,"failureMessages":[],"location":{"line":182,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Three.js Object Cleanup"],"fullName":"Memory Usage Performance Tests Three.js Object Cleanup should detect memory leaks from undisposed materials","status":"passed","title":"should detect memory leaks from undisposed materials","duration":143.91465398669243,"failureMessages":[],"location":{"line":224,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Three.js Object Cleanup"],"fullName":"Memory Usage Performance Tests Three.js Object Cleanup should track texture memory usage","status":"passed","title":"should track texture memory usage","duration":201.05988001823425,"failureMessages":[],"location":{"line":261,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Physics Body Cleanup"],"fullName":"Memory Usage Performance Tests Physics Body Cleanup should verify proper physics body removal","status":"passed","title":"should verify proper physics body removal","duration":454.98562198877335,"failureMessages":[],"location":{"line":306,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Physics Body Cleanup"],"fullName":"Memory Usage Performance Tests Physics Body Cleanup should detect physics body leaks","status":"passed","title":"should detect physics body leaks","duration":154.63744097948074,"failureMessages":[],"location":{"line":344,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Extended Gameplay Memory Patterns"],"fullName":"Memory Usage Performance Tests Extended Gameplay Memory Patterns should handle long gameplay sessions without leaks","status":"passed","title":"should handle long gameplay sessions without leaks","duration":1415.7593860030174,"failureMessages":[],"location":{"line":376,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Extended Gameplay Memory Patterns"],"fullName":"Memory Usage Performance Tests Extended Gameplay Memory Patterns should detect gradual memory accumulation","status":"passed","title":"should detect gradual memory accumulation","duration":699.7238390147686,"failureMessages":[],"location":{"line":434,"column":9},"meta":{}},{"ancestorTitles":["Memory Usage Performance Tests","Memory Performance Integration"],"fullName":"Memory Usage Performance Tests Memory Performance Integration should combine memory tracking with performance testing","status":"passed","title":"should combine memory tracking with performance testing","duration":3512.9816880226135,"failureMessages":[],"location":{"line":472,"column":9},"meta":{}}],"startTime":1752908165724,"endTime":1752908172934.9817,"status":"passed","message":"","name":"/mnt/c/Users/kpostal/Desktop/Game/katamari-js/tests/performance/memory-usage.test.js"},{"assertionResults":[{"ancestorTitles":["Physics Performance Tests","Physics Step Execution Time"],"fullName":"Physics Performance Tests Physics Step Execution Time should measure physics step time with low body count","status":"passed","title":"should measure physics step time with low body count","duration":5.761884987354279,"failureMessages":[],"location":{"line":62,"column":9},"meta":{}},{"ancestorTitles":["Physics Performance Tests","Physics Step Execution Time"],"fullName":"Physics Performance Tests Physics Step Execution Time should measure physics step time with high body count","status":"passed","title":"should measure physics step time with high body count","duration":32.43419697880745,"failureMessages":[],"location":{"line":86,"column":9},"meta":{}},{"ancestorTitles":["Physics Performance Tests","Physics Step Execution Time"],"fullName":"Physics Performance Tests Physics Step Execution Time should track physics step time variance","status":"passed","title":"should track physics step time variance","duration":8.717615991830826,"failureMessages":[],"location":{"line":113,"column":9},"meta":{}},{"ancestorTitles":["Physics Performance Tests","Body Count Performance Impact"],"fullName":"Physics Performance Tests Body Count Performance Impact should measure performance scaling with body count","status":"passed","title":"should measure performance scaling with body count","duration":54.73197200894356,"failureMessages":[],"location":{"line":139,"column":9},"meta":{}},{"ancestorTitles":["Physics Performance Tests","Body Activation/Deactivation Performance"],"fullName":"Physics Performance Tests Body Activation/Deactivation Performance should test performance impact of body activation states","status":"passed","title":"should test performance impact of body activation states","duration":21.95465698838234,"failureMessages":[],"location":{"line":193,"column":9},"meta":{}},{"ancestorTitles":["Physics Performance Tests","Body Activation/Deactivation Performance"],"fullName":"Physics Performance Tests Body Activation/Deactivation Performance should test automatic body deactivation","status":"passed","title":"should test automatic body deactivation","duration":18.017373979091644,"failureMessages":[],"location":{"line":240,"column":9},"meta":{}},{"ancestorTitles":["Physics Performance Tests","Collision Detection Performance"],"fullName":"Physics Performance Tests Collision Detection Performance should measure collision detection with large object counts","status":"passed","title":"should measure collision detection with large object counts","duration":60.52036398649216,"failureMessages":[],"location":{"line":306,"column":9},"meta":{}},{"ancestorTitles":["Physics Performance Tests","Collision Detection Performance"],"fullName":"Physics Performance Tests Collision Detection Performance should test collision filtering performance","status":"passed","title":"should test collision filtering performance","duration":33.857051998376846,"failureMessages":[],"location":{"line":347,"column":9},"meta":{}}],"startTime":1752908161757,"endTime":1752908161992.857,"status":"passed","message":"","name":"/mnt/c/Users/kpostal/Desktop/Game/katamari-js/tests/performance/physics-performance.test.js"},{"assertionResults":[{"ancestorTitles":["Rendering Performance Tests","Draw Call Efficiency"],"fullName":"Rendering Performance Tests Draw Call Efficiency should measure draw calls with individual objects","status":"passed","title":"should measure draw calls with individual objects","duration":11.862843006849289,"failureMessages":[],"location":{"line":108,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","Draw Call Efficiency"],"fullName":"Rendering Performance Tests Draw Call Efficiency should measure draw calls with instanced rendering","status":"passed","title":"should measure draw calls with instanced rendering","duration":2.9188930094242096,"failureMessages":[],"location":{"line":132,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","Draw Call Efficiency"],"fullName":"Rendering Performance Tests Draw Call Efficiency should compare instanced vs individual rendering performance","status":"passed","title":"should compare instanced vs individual rendering performance","duration":45.84897401928902,"failureMessages":[],"location":{"line":167,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","Scene Complexity Performance"],"fullName":"Rendering Performance Tests Scene Complexity Performance should test performance with different geometry complexities","status":"passed","title":"should test performance with different geometry complexities","duration":19.132846981287003,"failureMessages":[],"location":{"line":211,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","Scene Complexity Performance"],"fullName":"Rendering Performance Tests Scene Complexity Performance should test frustum culling performance impact","status":"passed","title":"should test frustum culling performance impact","duration":105.35359498858452,"failureMessages":[],"location":{"line":257,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","GPU Utilization Patterns"],"fullName":"Rendering Performance Tests GPU Utilization Patterns should simulate GPU memory usage tracking","status":"passed","title":"should simulate GPU memory usage tracking","duration":14.282774984836578,"failureMessages":[],"location":{"line":304,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","GPU Utilization Patterns"],"fullName":"Rendering Performance Tests GPU Utilization Patterns should test texture memory management","status":"passed","title":"should test texture memory management","duration":14.944516986608505,"failureMessages":[],"location":{"line":338,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","Rendering Bottleneck Detection"],"fullName":"Rendering Performance Tests Rendering Bottleneck Detection should identify vertex processing bottlenecks","status":"passed","title":"should identify vertex processing bottlenecks","duration":91.64698800444603,"failureMessages":[],"location":{"line":378,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","Rendering Bottleneck Detection"],"fullName":"Rendering Performance Tests Rendering Bottleneck Detection should identify fragment processing bottlenecks","status":"passed","title":"should identify fragment processing bottlenecks","duration":164.74690997600555,"failureMessages":[],"location":{"line":413,"column":9},"meta":{}},{"ancestorTitles":["Rendering Performance Tests","Rendering Bottleneck Detection"],"fullName":"Rendering Performance Tests Rendering Bottleneck Detection should identify bandwidth bottlenecks","status":"passed","title":"should identify bandwidth bottlenecks","duration":151.1717909872532,"failureMessages":[],"location":{"line":452,"column":9},"meta":{}}],"startTime":1752908164741,"endTime":1752908165363.1719,"status":"passed","message":"","name":"/mnt/c/Users/kpostal/Desktop/Game/katamari-js/tests/performance/rendering-performance.test.js"}]}